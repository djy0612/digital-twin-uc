<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="WSO2 Balana Core"><sessioninfo id="DESKTOP-1760K12-e42f4eb" start="1739776711706" dump="1739776714355"/><package name="org/wso2/balana/attr/proxy/xacml3"><class name="org/wso2/balana/attr/proxy/xacml3/XPathAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;[Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="37"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="XPathAttributeProxy.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="1" cb="1"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/wso2/balana/cond/xacml3"><class name="org/wso2/balana/cond/xacml3/XACML3HigherOrderFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="89"><counter type="INSTRUCTION" missed="19" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="113"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkInputs" desc="(Ljava/util/List;)V" line="119"><counter type="INSTRUCTION" missed="15" covered="142"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateAnyOfAnyInput" desc="(Ljava/util/List;Lorg/wso2/balana/cond/Function;)V" line="185"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkInputsNoBag" desc="(Ljava/util/List;)V" line="199"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="205"><counter type="INSTRUCTION" missed="4" covered="89"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="anyAndAllHelper" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Lorg/wso2/balana/cond/Function;Ljava/util/List;Lorg/wso2/balana/attr/BagAttribute;Z)Lorg/wso2/balana/cond/EvaluationResult;" line="248"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="anyOfAny" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Lorg/wso2/balana/cond/Function;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/cond/EvaluationResult;" line="268"><counter type="INSTRUCTION" missed="2" covered="148"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEvaluationResult" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Lorg/wso2/balana/cond/Function;Lorg/wso2/balana/attr/AttributeValue;Lorg/wso2/balana/attr/AttributeValue;Z)Lorg/wso2/balana/cond/EvaluationResult;" line="308"><counter type="INSTRUCTION" missed="2" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIdentifier" desc="()Ljava/net/URI;" line="327"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/net/URI;" line="333"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReturnType" desc="()Ljava/net/URI;" line="339"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnsBag" desc="()Z" line="348"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="354"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="362"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="6" covered="32"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="85" covered="551"/><counter type="BRANCH" missed="14" covered="64"/><counter type="LINE" missed="23" covered="118"/><counter type="COMPLEXITY" missed="19" covered="37"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/xacml3/StringComparingFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="102"><counter type="INSTRUCTION" missed="12" covered="36"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="142"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="158"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="73" covered="94"/><counter type="BRANCH" missed="11" covered="17"/><counter type="LINE" missed="14" covered="26"/><counter type="COMPLEXITY" missed="7" covered="12"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/xacml3/StringConversionFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="138"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReturnType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="148"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="157"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="162"><counter type="INSTRUCTION" missed="40" covered="54"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="9" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="114"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="144"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="9" covered="30"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/xacml3/StringCreationFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="132"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="142"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="151"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="156"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="107"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="90"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="19"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/xacml3/XPathFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="102"><counter type="INSTRUCTION" missed="12" covered="18"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReturnType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="123"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumArgs" desc="(Ljava/lang/String;)I" line="140"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="155"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="165"><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXPathResults" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/w3c/dom/NodeList;" line="227"><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="190" covered="65"/><counter type="BRANCH" missed="19" covered="9"/><counter type="LINE" missed="44" covered="20"/><counter type="COMPLEXITY" missed="12" covered="9"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/xacml3/SubStringFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="78"><counter type="INSTRUCTION" missed="12" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="110"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="120"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="46"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="8" covered="13"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="XACML3HigherOrderFunction.java"><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="1" cb="1"/><line nr="94" mi="12" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="1" cb="1"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="1" cb="1"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="1" cb="1"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="2"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="2"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="4"/><line nr="155" mi="0" ci="4" mb="0" cb="2"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="10" mb="0" cb="2"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="4"/><line nr="170" mi="0" ci="8" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="8" mb="0" cb="2"/><line nr="186" mi="0" ci="10" mb="0" cb="2"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="1" cb="1"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="2"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="1" cb="1"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="2"/><line nr="226" mi="0" ci="8" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="1" cb="3"/><line nr="234" mi="0" ci="11" mb="0" cb="0"/><line nr="237" mi="0" ci="11" mb="0" cb="0"/><line nr="240" mi="0" ci="7" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="2"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="10" mb="0" cb="2"/><line nr="252" mi="0" ci="8" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="2"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="6" mb="0" cb="0"/><line nr="268" mi="0" ci="6" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="2"/><line nr="270" mi="0" ci="10" mb="0" cb="2"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="7" mb="0" cb="0"/><line nr="275" mi="0" ci="14" mb="0" cb="0"/><line nr="276" mi="0" ci="9" mb="1" cb="3"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="6" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="1" cb="1"/><line nr="283" mi="0" ci="8" mb="0" cb="2"/><line nr="284" mi="0" ci="10" mb="0" cb="2"/><line nr="285" mi="0" ci="6" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="2"/><line nr="287" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="6" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="2"/><line nr="290" mi="0" ci="5" mb="0" cb="0"/><line nr="291" mi="0" ci="8" mb="0" cb="0"/><line nr="292" mi="0" ci="6" mb="1" cb="3"/><line nr="293" mi="0" ci="5" mb="1" cb="1"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="1" mb="0" cb="0"/><line nr="300" mi="0" ci="6" mb="0" cb="0"/><line nr="302" mi="2" ci="0" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="5" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="1" cb="1"/><line nr="314" mi="2" ci="0" mb="0" cb="0"/><line nr="317" mi="0" ci="5" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="2"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="321" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="333" mi="3" ci="0" mb="0" cb="0"/><line nr="339" mi="2" ci="0" mb="2" cb="0"/><line nr="340" mi="2" ci="0" mb="0" cb="0"/><line nr="342" mi="2" ci="0" mb="0" cb="0"/><line nr="348" mi="2" ci="0" mb="0" cb="0"/><line nr="354" mi="4" ci="0" mb="0" cb="0"/><line nr="355" mi="3" ci="0" mb="0" cb="0"/><line nr="356" mi="3" ci="0" mb="0" cb="0"/><line nr="362" mi="10" ci="0" mb="0" cb="0"/><line nr="363" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="85" covered="551"/><counter type="BRANCH" missed="14" covered="64"/><counter type="LINE" missed="23" covered="118"/><counter type="COMPLEXITY" missed="19" covered="37"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringComparingFunction.java"><line nr="91" mi="0" ci="11" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="2"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="2"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="2"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="2"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="1" cb="1"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="12" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="10" mb="0" cb="4"/><line nr="129" mi="0" ci="2" mb="0" cb="2"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="6" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="2" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="4" cb="0"/><line nr="169" mi="9" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="6" ci="0" mb="4" cb="0"/><line nr="174" mi="9" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="9" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="73" covered="94"/><counter type="BRANCH" missed="11" covered="17"/><counter type="LINE" missed="14" covered="26"/><counter type="COMPLEXITY" missed="7" covered="12"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringCreationFunction.java"><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="10" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="2" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="90"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="19"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringConversionFunction.java"><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="10" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="1" cb="1"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="9" mb="0" cb="0"/><line nr="170" mi="0" ci="8" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="10" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="10" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="144"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="9" covered="30"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SubStringFunction.java"><line nr="67" mi="0" ci="11" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="2"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="1" cb="1"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="12" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="2"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="2" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="14" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="46"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="8" covered="13"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XPathFunction.java"><line nr="90" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="2"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="1" cb="1"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="12" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="2"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="2"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="6" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="2" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="2" cb="0"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="5" ci="0" mb="4" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="2" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="10" ci="0" mb="0" cb="0"/><line nr="194" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="4" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="6" ci="0" mb="0" cb="0"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="8" ci="0" mb="2" cb="0"/><line nr="239" mi="4" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="6" ci="0" mb="2" cb="0"/><line nr="250" mi="4" ci="0" mb="2" cb="0"/><line nr="251" mi="2" ci="0" mb="2" cb="0"/><line nr="252" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="259" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="190" covered="65"/><counter type="BRANCH" missed="19" covered="9"/><counter type="LINE" missed="44" covered="20"/><counter type="COMPLEXITY" missed="12" covered="9"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="463" covered="990"/><counter type="BRANCH" missed="50" covered="96"/><counter type="LINE" missed="103" covered="226"/><counter type="COMPLEXITY" missed="44" covered="73"/><counter type="METHOD" missed="11" covered="32"/><counter type="CLASS" missed="0" covered="6"/></package><package name="org/wso2/balana/attr/xacml3"><class name="org/wso2/balana/attr/xacml3/AttributeSelector"><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;ZLjava/lang/String;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/attr/xacml3/AttributeSelector;" line="102"><counter type="INSTRUCTION" missed="40" covered="74"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="11" covered="22"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="180"><counter type="INSTRUCTION" missed="52" covered="28"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="9" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluatesToBag" desc="()Z" line="218"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="222"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnsBag" desc="()Z" line="228"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="234"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="97" covered="129"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="23" covered="38"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/xacml3/XPathAttribute"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="83"><counter type="INSTRUCTION" missed="10" covered="16"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/xacml3/XPathAttribute;" line="112"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/wso2/balana/attr/xacml3/XPathAttribute;" line="133"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="142"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXPathCategory" desc="()Ljava/lang/String;" line="151"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="163"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="178"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="183"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeWithTags" desc="(Z)Ljava/lang/String;" line="189"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="102" covered="55"/><counter type="BRANCH" missed="14" covered="4"/><counter type="LINE" missed="24" covered="19"/><counter type="COMPLEXITY" missed="13" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/xacml3/AttributeDesignator"><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/net/URI;ZLjava/net/URI;)V" line="71"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/net/URI;ZLjava/lang/String;Ljava/net/URI;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/xacml3/AttributeDesignator;" line="103"><counter type="INSTRUCTION" missed="51" covered="75"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="13" covered="22"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/net/URI;" line="166"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/net/URI;" line="175"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCategory" desc="()Ljava/net/URI;" line="184"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssuer" desc="()Ljava/lang/String;" line="193"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mustBePresent" desc="()Z" line="202"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnsBag" desc="()Z" line="211"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluatesToBag" desc="()Z" line="222"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="231"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="243"><counter type="INSTRUCTION" missed="2" covered="91"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="302"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="140" covered="193"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="33" covered="50"/><counter type="COMPLEXITY" missed="14" covered="9"/><counter type="METHOD" missed="8" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="XPathAttribute.java"><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="1" cb="1"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="1" cb="1"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="1" cb="1"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="1" cb="1"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="2" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="16" ci="0" mb="4" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="4" cb="0"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="193" mi="6" ci="0" mb="0" cb="0"/><line nr="194" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="55"/><counter type="BRANCH" missed="14" covered="4"/><counter type="LINE" missed="24" covered="19"/><counter type="COMPLEXITY" missed="13" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AttributeSelector.java"><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="1" cb="1"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="6" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="6" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="2"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="10" mb="0" cb="0"/><line nr="180" mi="0" ci="13" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="2"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="1" cb="1"/><line nr="190" mi="3" ci="0" mb="2" cb="0"/><line nr="192" mi="3" ci="0" mb="2" cb="0"/><line nr="193" mi="11" ci="0" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="200" mi="12" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="9" ci="0" mb="0" cb="0"/><line nr="205" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="97" covered="129"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="23" covered="38"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AttributeDesignator.java"><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="1" cb="1"/><line nr="112" mi="8" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="2"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="6" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="1" cb="1"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="6" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="9" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="11" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="1" cb="1"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="2"/><line nr="256" mi="0" ci="3" mb="0" cb="2"/><line nr="257" mi="0" ci="3" mb="1" cb="1"/><line nr="258" mi="0" ci="9" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="14" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="10" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="4" ci="0" mb="0" cb="0"/><line nr="304" mi="10" ci="0" mb="0" cb="0"/><line nr="305" mi="10" ci="0" mb="0" cb="0"/><line nr="306" mi="10" ci="0" mb="0" cb="0"/><line nr="308" mi="3" ci="0" mb="2" cb="0"/><line nr="309" mi="9" ci="0" mb="0" cb="0"/><line nr="312" mi="3" ci="0" mb="2" cb="0"/><line nr="313" mi="5" ci="0" mb="0" cb="0"/><line nr="315" mi="4" ci="0" mb="0" cb="0"/><line nr="318" mi="4" ci="0" mb="0" cb="0"/><line nr="319" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="140" covered="193"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="33" covered="50"/><counter type="COMPLEXITY" missed="14" covered="9"/><counter type="METHOD" missed="8" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="339" covered="377"/><counter type="BRANCH" missed="28" covered="20"/><counter type="LINE" missed="80" covered="107"/><counter type="COMPLEXITY" missed="34" covered="22"/><counter type="METHOD" missed="15" covered="17"/><counter type="CLASS" missed="0" covered="3"/></package><package name="org/wso2/balana/attr"><class name="org/wso2/balana/attr/DNSNameAttribute"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="104"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/wso2/balana/attr/PortRange;)V" line="94"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidHostName" desc="(Ljava/lang/String;)Z" line="143"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/DNSNameAttribute;" line="162"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/DNSNameAttribute;" line="176"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHostName" desc="()Ljava/lang/String;" line="195"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPortRange" desc="()Lorg/wso2/balana/attr/PortRange;" line="205"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSubdomain" desc="()Z" line="215"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="227"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="251"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="260"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="267"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="80"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="187" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/attr/AttributeFactory$1"><method name="&lt;init&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFactory" desc="()Lorg/wso2/balana/attr/AttributeFactory;" line="73"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/Base64"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="([B)Ljava/lang/String;" line="152"><counter type="INSTRUCTION" missed="155" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initDecodeArray" desc="()V" line="212"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="(Ljava/lang/String;Z)[B" line="240"><counter type="INSTRUCTION" missed="51" covered="153"/><counter type="BRANCH" missed="14" covered="17"/><counter type="LINE" missed="15" covered="36"/><counter type="COMPLEXITY" missed="12" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="209" covered="180"/><counter type="BRANCH" missed="28" covered="21"/><counter type="LINE" missed="44" covered="45"/><counter type="COMPLEXITY" missed="21" covered="11"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/IPv4AddressAttribute"><method name="&lt;init&gt;" desc="(Ljava/net/InetAddress;)V" line="56"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/InetAddress;Ljava/net/InetAddress;)V" line="66"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/InetAddress;Lorg/wso2/balana/attr/PortRange;)V" line="76"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/InetAddress;Ljava/net/InetAddress;Lorg/wso2/balana/attr/PortRange;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getV4Instance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/IPAddressAttribute;" line="105"><counter type="INSTRUCTION" missed="55" covered="32"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="144"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="114" covered="38"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="20" covered="11"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/AbstractDesignator"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/DateTimeAttribute"><method name="&lt;init&gt;" desc="()V" line="176"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Date;)V" line="169"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Date;III)V" line="169"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Ljava/util/Date;III)V" line="227"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/DateTimeAttribute;" line="248"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/DateTimeAttribute;" line="263"><counter type="INSTRUCTION" missed="137" covered="104"/><counter type="BRANCH" missed="21" covered="5"/><counter type="LINE" missed="23" covered="20"/><counter type="COMPLEXITY" missed="13" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strictParse" desc="(Ljava/text/DateFormat;Ljava/lang/String;)Ljava/util/Date;" line="362"><counter type="INSTRUCTION" missed="11" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initParsers" desc="()V" line="377"><counter type="INSTRUCTION" missed="7" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/util/Date;" line="408"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNanoseconds" desc="()I" line="417"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeZone" desc="()I" line="426"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultedTimeZone" desc="()I" line="436"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="451"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="471"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="482"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="502"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatDateTimeWithTZ" desc="()Ljava/lang/String;" line="534"><counter type="INSTRUCTION" missed="176" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultTZOffset" desc="(Ljava/util/Date;)I" line="605"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combineNanos" desc="(Ljava/util/Date;I)I" line="621"><counter type="INSTRUCTION" missed="5" covered="48"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="94"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="476" covered="325"/><counter type="BRANCH" missed="41" covered="17"/><counter type="LINE" missed="91" covered="78"/><counter type="COMPLEXITY" missed="30" covered="19"/><counter type="METHOD" missed="4" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/IntegerAttribute"><method name="&lt;init&gt;" desc="(J)V" line="96"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/IntegerAttribute;" line="115"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/IntegerAttribute;" line="130"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()J" line="141"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="153"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="168"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="175"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="59"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="7" covered="15"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/Base64BinaryAttribute"><method name="&lt;init&gt;" desc="([B)V" line="106"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/Base64BinaryAttribute;" line="126"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/Base64BinaryAttribute;" line="138"><counter type="INSTRUCTION" missed="14" covered="12"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()[B" line="156"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="168"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="183"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeStringRep" desc="()Ljava/lang/String;" line="199"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="208"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="218"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="83"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="66" covered="75"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="15" covered="20"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/DayTimeDurationAttribute"><method name="&lt;init&gt;" desc="(ZJJJJI)V" line="182"><counter type="INSTRUCTION" missed="45" covered="60"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="11" covered="12"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/DayTimeDurationAttribute;" line="251"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseGroup" desc="(Ljava/util/regex/Matcher;I)J" line="267"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/DayTimeDurationAttribute;" line="286"><counter type="INSTRUCTION" missed="58" covered="72"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="16" covered="21"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNegative" desc="()Z" line="380"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDays" desc="()J" line="389"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHours" desc="()J" line="398"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinutes" desc="()J" line="407"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSeconds" desc="()J" line="416"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNanoseconds" desc="()I" line="425"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTotalSeconds" desc="()J" line="434"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="446"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="464"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="477"><counter type="INSTRUCTION" missed="99" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="500"><counter type="INSTRUCTION" missed="138" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="87"><counter type="INSTRUCTION" missed="9" covered="19"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="388" covered="207"/><counter type="BRANCH" missed="49" covered="17"/><counter type="LINE" missed="78" covered="51"/><counter type="COMPLEXITY" missed="38" covered="11"/><counter type="METHOD" missed="7" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/X500NameAttribute"><method name="&lt;init&gt;" desc="(Ljavax/security/auth/x500/X500Principal;)V" line="96"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/X500NameAttribute;" line="113"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/X500NameAttribute;" line="125"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljavax/security/auth/x500/X500Principal;" line="134"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="152"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="167"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="174"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="83"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="48"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="14"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/DoubleAttribute"><method name="&lt;init&gt;" desc="(D)V" line="97"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/DoubleAttribute;" line="116"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/DoubleAttribute;" line="130"><counter type="INSTRUCTION" missed="16" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()D" line="144"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="156"><counter type="INSTRUCTION" missed="10" covered="20"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="185"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="193"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="41" covered="65"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="11" covered="17"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/IPv6AddressAttribute"><method name="&lt;init&gt;" desc="(Ljava/net/InetAddress;)V" line="56"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/InetAddress;Ljava/net/InetAddress;)V" line="66"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/InetAddress;Lorg/wso2/balana/attr/PortRange;)V" line="76"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/InetAddress;Ljava/net/InetAddress;Lorg/wso2/balana/attr/PortRange;)V" line="87"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getV6Instance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/IPAddressAttribute;" line="105"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="155" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/attr/StandardAttributeFactory"><method name="&lt;init&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initDatatypes" desc="()V" line="94"><counter type="INSTRUCTION" missed="0" covered="142"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFactory" desc="()Lorg/wso2/balana/attr/StandardAttributeFactory;" line="141"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNewFactory" desc="()Lorg/wso2/balana/attr/AttributeFactory;" line="165"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStandardDatatypes" desc="(Ljava/lang/String;)Ljava/util/Set;" line="184"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addDatatype" desc="(Ljava/lang/String;Lorg/wso2/balana/attr/AttributeProxy;)V" line="205"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="179"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="8" covered="38"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/HexBinaryAttribute"><method name="&lt;init&gt;" desc="([B)V" line="104"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/HexBinaryAttribute;" line="124"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/HexBinaryAttribute;" line="136"><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()[B" line="151"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="161"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="180"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hexToBinNibble" desc="(C)I" line="193"><counter type="INSTRUCTION" missed="10" covered="30"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hexToBin" desc="(Ljava/lang/String;)[B" line="217"><counter type="INSTRUCTION" missed="4" covered="50"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="binToHexNibble" desc="(I)C" line="242"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="binToHex" desc="([B)Ljava/lang/String;" line="260"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="279"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="289"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="140" covered="153"/><counter type="BRANCH" missed="20" covered="16"/><counter type="LINE" missed="29" covered="37"/><counter type="COMPLEXITY" missed="20" covered="11"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/BagAttribute$ImmutableIterator"><method name="&lt;init&gt;" desc="(Ljava/util/Iterator;)V" line="186"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="194"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="201"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="208"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/YearMonthDurationAttribute"><method name="&lt;init&gt;" desc="(ZJJ)V" line="150"><counter type="INSTRUCTION" missed="36" covered="40"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="10" covered="9"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/YearMonthDurationAttribute;" line="211"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseGroup" desc="(Ljava/util/regex/Matcher;I)J" line="227"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/YearMonthDurationAttribute;" line="247"><counter type="INSTRUCTION" missed="17" covered="44"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="5" covered="15"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNegative" desc="()Z" line="298"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getYears" desc="()J" line="307"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMonths" desc="()J" line="316"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="328"><counter type="INSTRUCTION" missed="3" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="343"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="352"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="370"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="87"><counter type="INSTRUCTION" missed="9" covered="13"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="190" covered="142"/><counter type="BRANCH" missed="21" covered="13"/><counter type="LINE" missed="41" covered="40"/><counter type="COMPLEXITY" missed="17" covered="12"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/AnyURIAttribute"><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="86"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AnyURIAttribute;" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AnyURIAttribute;" line="117"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/net/URI;" line="126"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="138"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="153"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="162"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="169"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="45"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="8" covered="13"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/AttributeSelectorFactory"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAbstractSelector" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/attr/AbstractAttributeSelector;" line="36"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFactory" desc="()Lorg/wso2/balana/attr/AttributeSelectorFactory;" line="51"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="28"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/DateAttribute"><method name="&lt;init&gt;" desc="()V" line="207"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Date;)V" line="200"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Date;II)V" line="200"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Ljava/util/Date;II)V" line="268"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/DateAttribute;" line="285"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/DateAttribute;" line="297"><counter type="INSTRUCTION" missed="77" covered="59"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="11" covered="13"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strictParse" desc="(Ljava/text/DateFormat;Ljava/lang/String;)Ljava/util/Date;" line="351"><counter type="INSTRUCTION" missed="11" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initParsers" desc="()V" line="366"><counter type="INSTRUCTION" missed="8" covered="28"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/util/Date;" line="396"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeZone" desc="()I" line="405"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultedTimeZone" desc="()I" line="415"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="430"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="447"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="456"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="475"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatDateWithTZ" desc="()Ljava/lang/String;" line="504"><counter type="INSTRUCTION" missed="120" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeroPadIntString" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="566"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeroPadInt" desc="(II)Ljava/lang/String;" line="618"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="92"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="394" covered="217"/><counter type="BRANCH" missed="30" covered="10"/><counter type="LINE" missed="84" covered="57"/><counter type="COMPLEXITY" missed="25" covered="14"/><counter type="METHOD" missed="6" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/AbstractAttributeSelector"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/net/URI;" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMustBePresent" desc="()Z" line="61"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXPathVersion" desc="()Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/TimeAttribute"><method name="&lt;init&gt;" desc="()V" line="141"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Date;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Date;III)V" line="134"><counter type="INSTRUCTION" missed="8" covered="16"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Ljava/util/Date;III)V" line="201"><counter type="INSTRUCTION" missed="8" covered="44"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/TimeAttribute;" line="237"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/TimeAttribute;" line="254"><counter type="INSTRUCTION" missed="20" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/util/Date;" line="283"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMilliseconds" desc="()J" line="294"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNanoseconds" desc="()I" line="303"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeZone" desc="()I" line="312"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultedTimeZone" desc="()I" line="322"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="334"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="350"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="366"><counter type="INSTRUCTION" missed="157" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="398"><counter type="INSTRUCTION" missed="167" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="386" covered="168"/><counter type="BRANCH" missed="29" covered="11"/><counter type="LINE" missed="68" covered="37"/><counter type="COMPLEXITY" missed="24" covered="12"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/AttributeDesignatorFactory"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAbstractDesignator" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/attr/AbstractDesignator;" line="37"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFactory" desc="()Lorg/wso2/balana/attr/AttributeDesignatorFactory;" line="52"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="30"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/BagAttribute"><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/util/List;)V" line="69"><counter type="INSTRUCTION" missed="15" covered="42"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBag" desc="()Z" line="107"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createEmptyBag" desc="(Ljava/net/URI;)Lorg/wso2/balana/attr/BagAttribute;" line="118"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="128"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="137"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/wso2/balana/attr/AttributeValue;)Z" line="151"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsAll" desc="(Lorg/wso2/balana/attr/BagAttribute;)Z" line="164"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="171"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="218"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="80"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="4" covered="19"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/IPAddressAttribute"><method name="&lt;init&gt;" desc="(Ljava/net/InetAddress;Ljava/net/InetAddress;Lorg/wso2/balana/attr/PortRange;)V" line="112"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/IPAddressAttribute;" line="135"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/IPAddressAttribute;" line="151"><counter type="INSTRUCTION" missed="10" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAddress" desc="()Ljava/net/InetAddress;" line="166"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMask" desc="()Ljava/net/InetAddress;" line="175"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRange" desc="()Lorg/wso2/balana/attr/PortRange;" line="185"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="197"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="232"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="241"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="88" covered="37"/><counter type="BRANCH" missed="16" covered="2"/><counter type="LINE" missed="26" covered="13"/><counter type="COMPLEXITY" missed="14" covered="5"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/AttributeDesignator"><method name="&lt;init&gt;" desc="(ILjava/net/URI;Ljava/net/URI;Z)V" line="127"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/net/URI;Ljava/net/URI;ZLjava/lang/String;)V" line="142"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/net/URI;Ljava/net/URI;ZLjava/lang/String;Ljava/net/URI;)V" line="157"><counter type="INSTRUCTION" missed="5" covered="32"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeDesignator;" line="180"><counter type="INSTRUCTION" missed="34" covered="142"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="8" covered="39"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDesignatorType" desc="()I" line="262"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/net/URI;" line="272"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/net/URI;" line="281"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCategory" desc="()Ljava/net/URI;" line="291"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssuer" desc="()Ljava/lang/String;" line="300"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mustBePresent" desc="()Z" line="309"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnsBag" desc="()Z" line="318"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluatesToBag" desc="()Z" line="329"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="338"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="351"><counter type="INSTRUCTION" missed="61" covered="145"/><counter type="BRANCH" missed="4" covered="11"/><counter type="LINE" missed="9" covered="27"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="436"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="95"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="208" covered="347"/><counter type="BRANCH" missed="16" covered="39"/><counter type="LINE" missed="40" covered="79"/><counter type="COMPLEXITY" missed="22" covered="23"/><counter type="METHOD" missed="10" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/PortRange"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="72"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(II)V" line="82"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/PortRange;" line="97"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLowerBound" desc="()I" line="136"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUpperBound" desc="()I" line="147"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLowerBounded" desc="()Z" line="156"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUpperBounded" desc="()Z" line="165"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSinglePort" desc="()Z" line="174"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnbound" desc="()Z" line="184"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="196"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="213"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="223"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="207" covered="14"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="42" covered="6"/><counter type="COMPLEXITY" missed="29" covered="2"/><counter type="METHOD" missed="11" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/StringAttribute"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="104"><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/StringAttribute;" line="125"><counter type="INSTRUCTION" missed="13" covered="15"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/StringAttribute;" line="155"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="164"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="176"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="191"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="200"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="207"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="60"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="9" covered="20"/><counter type="COMPLEXITY" missed="8" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/BaseAttributeFactory"><method name="&lt;init&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="84"><counter type="INSTRUCTION" missed="6" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addDatatype" desc="(Ljava/lang/String;Lorg/wso2/balana/attr/AttributeProxy;)V" line="110"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSupportedDatatypes" desc="()Ljava/util/Set;" line="122"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createValue" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="140"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createValue" desc="(Lorg/w3c/dom/Node;Ljava/net/URI;)Lorg/wso2/balana/attr/AttributeValue;" line="158"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createValue" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="176"><counter type="INSTRUCTION" missed="29" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createValue" desc="(Ljava/net/URI;Ljava/lang/String;[Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="212"><counter type="INSTRUCTION" missed="14" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="79" covered="115"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="14" covered="25"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/AttributeValue"><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/net/URI;" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnsBag" desc="()Z" line="96"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluatesToBag" desc="()Z" line="112"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="121"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBag" desc="()Z" line="132"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="145"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="166"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodeWithTags" desc="(Z)Ljava/lang/String;" line="182"><counter type="INSTRUCTION" missed="12" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/RFC822NameAttribute"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="93"><counter type="INSTRUCTION" missed="14" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/RFC822NameAttribute;" line="119"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/RFC822NameAttribute;" line="130"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="139"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="151"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="166"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="173"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="67"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="7" covered="16"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/BooleanAttribute"><method name="&lt;init&gt;" desc="(Z)V" line="118"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/BooleanAttribute;" line="132"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/BooleanAttribute;" line="145"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Z)Lorg/wso2/balana/attr/BooleanAttribute;" line="165"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTrueInstance" desc="()Lorg/wso2/balana/attr/BooleanAttribute;" line="182"><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFalseInstance" desc="()Lorg/wso2/balana/attr/BooleanAttribute;" line="196"><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Z" line="208"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="220"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="237"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="244"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="95"><counter type="INSTRUCTION" missed="9" covered="17"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="89"/><counter type="BRANCH" missed="7" covered="15"/><counter type="LINE" missed="9" covered="28"/><counter type="COMPLEXITY" missed="7" covered="15"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/AttributeSelector"><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;ZLjava/lang/String;)V" line="99"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/w3c/dom/Node;ZLjava/lang/String;)V" line="114"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeSelector;" line="141"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/attr/AttributeSelector;" line="159"><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContextPath" desc="()Ljava/lang/String;" line="221"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnsBag" desc="()Z" line="230"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluatesToBag" desc="()Z" line="242"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="251"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="270"><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="314"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="264" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="65" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/attr/AttributeFactory"><method name="&lt;init&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="()Lorg/wso2/balana/attr/AttributeFactory;" line="99"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeFactory;" line="116"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultFactory" desc="(Lorg/wso2/balana/attr/AttributeFactoryProxy;)V" line="132"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerFactory" desc="(Ljava/lang/String;Lorg/wso2/balana/attr/AttributeFactoryProxy;)V" line="147"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createValue" desc="(Ljava/net/URI;Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="233"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="63" covered="35"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="10"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RFC822NameAttribute.java"><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="1" cb="1"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="1" cb="1"/><line nr="104" mi="12" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="17" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="1" cb="1"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="67"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="7" covered="16"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoubleAttribute.java"><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="1" cb="1"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="1" cb="1"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="12" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="1" cb="1"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="1" cb="1"/><line nr="165" mi="4" ci="0" mb="2" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="10" mb="0" cb="2"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="0"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="65"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="11" covered="17"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PortRange.java"><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="7" ci="0" mb="4" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="2" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="2" cb="0"/><line nr="121" mi="8" ci="0" mb="0" cb="0"/><line nr="125" mi="6" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="8" ci="0" mb="2" cb="0"/><line nr="165" mi="8" ci="0" mb="2" cb="0"/><line nr="174" mi="13" ci="0" mb="4" cb="0"/><line nr="184" mi="12" ci="0" mb="4" cb="0"/><line nr="196" mi="3" ci="0" mb="2" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="2" cb="0"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="2" cb="0"/><line nr="205" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="7" ci="0" mb="0" cb="0"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="2" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="3" ci="0" mb="2" cb="0"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="229" mi="3" ci="0" mb="2" cb="0"/><line nr="230" mi="11" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="2" cb="0"/><line nr="233" mi="11" ci="0" mb="0" cb="0"/><line nr="235" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="207" covered="14"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="42" covered="6"/><counter type="COMPLEXITY" missed="29" covered="2"/><counter type="METHOD" missed="11" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateTimeAttribute.java"><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="1" cb="1"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="1" cb="1"/><line nr="273" mi="15" ci="0" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="4" ci="14" mb="2" cb="2"/><line nr="280" mi="4" ci="3" mb="2" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="1" cb="1"/><line nr="288" mi="3" ci="0" mb="0" cb="0"/><line nr="289" mi="2" ci="0" mb="2" cb="0"/><line nr="290" mi="1" ci="0" mb="0" cb="0"/><line nr="292" mi="7" ci="0" mb="0" cb="0"/><line nr="294" mi="9" ci="0" mb="2" cb="0"/><line nr="295" mi="4" ci="0" mb="0" cb="0"/><line nr="296" mi="6" ci="0" mb="4" cb="0"/><line nr="297" mi="5" ci="0" mb="0" cb="0"/><line nr="301" mi="4" ci="0" mb="2" cb="0"/><line nr="302" mi="5" ci="0" mb="0" cb="0"/><line nr="303" mi="4" ci="0" mb="2" cb="0"/><line nr="304" mi="5" ci="0" mb="0" cb="0"/><line nr="306" mi="3" ci="0" mb="0" cb="0"/><line nr="311" mi="4" ci="0" mb="2" cb="0"/><line nr="312" mi="5" ci="0" mb="0" cb="0"/><line nr="315" mi="3" ci="0" mb="0" cb="0"/><line nr="318" mi="16" ci="0" mb="0" cb="0"/><line nr="322" mi="0" ci="2" mb="1" cb="1"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="16" mb="0" cb="0"/><line nr="331" mi="0" ci="19" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="7" mb="0" cb="0"/><line nr="334" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="0" cb="0"/><line nr="336" mi="0" ci="1" mb="0" cb="0"/><line nr="338" mi="4" ci="0" mb="0" cb="0"/><line nr="339" mi="2" ci="0" mb="0" cb="0"/><line nr="341" mi="11" ci="0" mb="0" cb="0"/><line nr="342" mi="7" ci="0" mb="0" cb="0"/><line nr="343" mi="4" ci="0" mb="0" cb="0"/><line nr="349" mi="0" ci="8" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="362" mi="0" ci="5" mb="0" cb="0"/><line nr="364" mi="0" ci="4" mb="0" cb="0"/><line nr="365" mi="0" ci="5" mb="0" cb="0"/><line nr="366" mi="5" ci="3" mb="0" cb="0"/><line nr="367" mi="0" ci="5" mb="1" cb="1"/><line nr="368" mi="6" ci="0" mb="0" cb="0"/><line nr="369" mi="0" ci="2" mb="0" cb="0"/><line nr="377" mi="0" ci="2" mb="0" cb="2"/><line nr="378" mi="0" ci="1" mb="0" cb="0"/><line nr="381" mi="0" ci="2" mb="1" cb="1"/><line nr="382" mi="2" ci="0" mb="0" cb="0"/><line nr="386" mi="0" ci="4" mb="0" cb="0"/><line nr="388" mi="0" ci="5" mb="0" cb="0"/><line nr="389" mi="0" ci="3" mb="0" cb="0"/><line nr="392" mi="0" ci="5" mb="0" cb="0"/><line nr="393" mi="0" ci="3" mb="0" cb="0"/><line nr="394" mi="5" ci="3" mb="0" cb="0"/><line nr="395" mi="0" ci="1" mb="0" cb="0"/><line nr="408" mi="0" ci="5" mb="0" cb="0"/><line nr="417" mi="0" ci="3" mb="0" cb="0"/><line nr="426" mi="0" ci="3" mb="0" cb="0"/><line nr="436" mi="0" ci="3" mb="0" cb="0"/><line nr="451" mi="0" ci="3" mb="1" cb="1"/><line nr="452" mi="2" ci="0" mb="0" cb="0"/><line nr="454" mi="0" ci="3" mb="0" cb="0"/><line nr="458" mi="0" ci="15" mb="1" cb="3"/><line nr="471" mi="0" ci="4" mb="0" cb="0"/><line nr="472" mi="0" ci="7" mb="0" cb="0"/><line nr="473" mi="0" ci="2" mb="0" cb="0"/><line nr="482" mi="4" ci="0" mb="0" cb="0"/><line nr="484" mi="4" ci="0" mb="0" cb="0"/><line nr="485" mi="14" ci="0" mb="0" cb="0"/><line nr="486" mi="12" ci="0" mb="0" cb="0"/><line nr="487" mi="12" ci="0" mb="0" cb="0"/><line nr="488" mi="12" ci="0" mb="0" cb="0"/><line nr="489" mi="4" ci="0" mb="0" cb="0"/><line nr="491" mi="3" ci="0" mb="0" cb="0"/><line nr="502" mi="3" ci="0" mb="2" cb="0"/><line nr="503" mi="3" ci="0" mb="0" cb="0"/><line nr="505" mi="4" ci="0" mb="2" cb="0"/><line nr="508" mi="1" ci="0" mb="0" cb="0"/><line nr="509" mi="4" ci="0" mb="0" cb="0"/><line nr="510" mi="6" ci="0" mb="0" cb="0"/><line nr="511" mi="8" ci="0" mb="0" cb="0"/><line nr="512" mi="3" ci="0" mb="2" cb="0"/><line nr="513" mi="17" ci="0" mb="0" cb="0"/><line nr="522" mi="4" ci="0" mb="0" cb="0"/><line nr="524" mi="3" ci="0" mb="0" cb="0"/><line nr="534" mi="2" ci="0" mb="2" cb="0"/><line nr="535" mi="3" ci="0" mb="0" cb="0"/><line nr="543" mi="4" ci="0" mb="0" cb="0"/><line nr="548" mi="5" ci="0" mb="0" cb="0"/><line nr="550" mi="4" ci="0" mb="0" cb="0"/><line nr="552" mi="4" ci="0" mb="0" cb="0"/><line nr="555" mi="5" ci="0" mb="0" cb="0"/><line nr="558" mi="4" ci="0" mb="0" cb="0"/><line nr="559" mi="6" ci="0" mb="0" cb="0"/><line nr="560" mi="4" ci="0" mb="0" cb="0"/><line nr="562" mi="6" ci="0" mb="0" cb="0"/><line nr="563" mi="6" ci="0" mb="0" cb="0"/><line nr="564" mi="4" ci="0" mb="0" cb="0"/><line nr="565" mi="4" ci="0" mb="0" cb="0"/><line nr="566" mi="6" ci="0" mb="0" cb="0"/><line nr="567" mi="4" ci="0" mb="0" cb="0"/><line nr="568" mi="4" ci="0" mb="0" cb="0"/><line nr="569" mi="6" ci="0" mb="0" cb="0"/><line nr="570" mi="4" ci="0" mb="0" cb="0"/><line nr="571" mi="4" ci="0" mb="0" cb="0"/><line nr="572" mi="6" ci="0" mb="0" cb="0"/><line nr="573" mi="4" ci="0" mb="0" cb="0"/><line nr="574" mi="4" ci="0" mb="0" cb="0"/><line nr="575" mi="6" ci="0" mb="0" cb="0"/><line nr="576" mi="8" ci="0" mb="0" cb="0"/><line nr="578" mi="3" ci="0" mb="2" cb="0"/><line nr="579" mi="4" ci="0" mb="0" cb="0"/><line nr="580" mi="7" ci="0" mb="0" cb="0"/><line nr="583" mi="3" ci="0" mb="0" cb="0"/><line nr="584" mi="3" ci="0" mb="2" cb="0"/><line nr="585" mi="3" ci="0" mb="0" cb="0"/><line nr="586" mi="5" ci="0" mb="0" cb="0"/><line nr="588" mi="4" ci="0" mb="0" cb="0"/><line nr="589" mi="4" ci="0" mb="0" cb="0"/><line nr="590" mi="6" ci="0" mb="0" cb="0"/><line nr="591" mi="4" ci="0" mb="0" cb="0"/><line nr="592" mi="4" ci="0" mb="0" cb="0"/><line nr="593" mi="6" ci="0" mb="0" cb="0"/><line nr="595" mi="3" ci="0" mb="0" cb="0"/><line nr="605" mi="0" ci="5" mb="0" cb="0"/><line nr="606" mi="0" ci="4" mb="0" cb="0"/><line nr="607" mi="0" ci="2" mb="0" cb="0"/><line nr="621" mi="0" ci="3" mb="0" cb="0"/><line nr="622" mi="0" ci="5" mb="0" cb="0"/><line nr="625" mi="3" ci="4" mb="3" cb="3"/><line nr="627" mi="2" ci="0" mb="0" cb="0"/><line nr="630" mi="0" ci="5" mb="0" cb="0"/><line nr="632" mi="0" ci="3" mb="0" cb="0"/><line nr="633" mi="0" ci="7" mb="0" cb="0"/><line nr="636" mi="0" ci="5" mb="0" cb="0"/><line nr="638" mi="0" ci="5" mb="0" cb="0"/><line nr="640" mi="0" ci="6" mb="0" cb="0"/><line nr="641" mi="0" ci="3" mb="0" cb="0"/><line nr="643" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="476" covered="325"/><counter type="BRANCH" missed="41" covered="17"/><counter type="LINE" missed="91" covered="78"/><counter type="COMPLEXITY" missed="30" covered="19"/><counter type="METHOD" missed="4" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractDesignator.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Base64BinaryAttribute.java"><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="1" cb="1"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="13" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="6" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="1" cb="1"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="9" mb="0" cb="2"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="7" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="2" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="12" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="2" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="75"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="15" covered="20"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BooleanAttribute.java"><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="1" cb="1"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="2"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="2"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="1" cb="1"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="2"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="1" cb="1"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="1" cb="1"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="1" cb="1"/><line nr="221" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="9" mb="0" cb="2"/><line nr="237" mi="0" ci="7" mb="0" cb="2"/><line nr="244" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="26" covered="89"/><counter type="BRANCH" missed="7" covered="15"/><counter type="LINE" missed="9" covered="28"/><counter type="COMPLEXITY" missed="7" covered="15"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringAttribute.java"><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="1" cb="1"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="1" cb="1"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="1" cb="1"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="6" ci="3" mb="5" cb="1"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="1" cb="1"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="12" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="60"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="9" covered="20"/><counter type="COMPLEXITY" missed="8" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntegerAttribute.java"><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="1" cb="1"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="9" mb="2" cb="2"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="1" cb="1"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="10" mb="0" cb="2"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="59"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="7" covered="15"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BagAttribute.java"><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="1" cb="1"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="4"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="2"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="1" cb="1"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="1" cb="1"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="2"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="94"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="5" covered="24"/><counter type="COMPLEXITY" missed="5" covered="15"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="IPAddressAttribute.java"><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="1" cb="1"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="1" cb="1"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="6" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="2" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="6" ci="0" mb="2" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="2" cb="0"/><line nr="206" mi="3" ci="0" mb="2" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="6" ci="0" mb="2" cb="0"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="3" ci="0" mb="2" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="6" ci="0" mb="2" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="88" covered="37"/><counter type="BRANCH" missed="16" covered="2"/><counter type="LINE" missed="26" covered="13"/><counter type="COMPLEXITY" missed="14" covered="5"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimeAttribute.java"><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="3" ci="3" mb="3" cb="1"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="1" cb="1"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="10" mb="1" cb="3"/><line nr="219" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="1" cb="1"/><line nr="223" mi="6" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="9" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="1" cb="1"/><line nr="265" mi="5" ci="0" mb="0" cb="0"/><line nr="266" mi="13" ci="0" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="10" mb="0" cb="0"/><line nr="283" mi="0" ci="6" mb="0" cb="0"/><line nr="294" mi="3" ci="0" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="0" cb="0"/><line nr="312" mi="3" ci="0" mb="0" cb="0"/><line nr="322" mi="3" ci="0" mb="0" cb="0"/><line nr="334" mi="0" ci="3" mb="1" cb="1"/><line nr="335" mi="2" ci="0" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="15" mb="1" cb="3"/><line nr="350" mi="0" ci="9" mb="0" cb="0"/><line nr="355" mi="0" ci="7" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="366" mi="4" ci="0" mb="0" cb="0"/><line nr="367" mi="4" ci="0" mb="0" cb="0"/><line nr="370" mi="5" ci="0" mb="0" cb="0"/><line nr="371" mi="4" ci="0" mb="0" cb="0"/><line nr="372" mi="4" ci="0" mb="0" cb="0"/><line nr="373" mi="4" ci="0" mb="0" cb="0"/><line nr="374" mi="4" ci="0" mb="0" cb="0"/><line nr="377" mi="22" ci="0" mb="2" cb="0"/><line nr="378" mi="22" ci="0" mb="2" cb="0"/><line nr="379" mi="22" ci="0" mb="2" cb="0"/><line nr="381" mi="19" ci="0" mb="0" cb="0"/><line nr="382" mi="12" ci="0" mb="0" cb="0"/><line nr="383" mi="12" ci="0" mb="0" cb="0"/><line nr="384" mi="12" ci="0" mb="0" cb="0"/><line nr="385" mi="4" ci="0" mb="0" cb="0"/><line nr="387" mi="3" ci="0" mb="0" cb="0"/><line nr="398" mi="3" ci="0" mb="2" cb="0"/><line nr="399" mi="3" ci="0" mb="0" cb="0"/><line nr="402" mi="5" ci="0" mb="0" cb="0"/><line nr="405" mi="4" ci="0" mb="0" cb="0"/><line nr="406" mi="4" ci="0" mb="2" cb="0"/><line nr="407" mi="8" ci="0" mb="0" cb="0"/><line nr="409" mi="7" ci="0" mb="0" cb="0"/><line nr="411" mi="2" ci="0" mb="2" cb="0"/><line nr="412" mi="7" ci="0" mb="0" cb="0"/><line nr="413" mi="5" ci="0" mb="2" cb="0"/><line nr="414" mi="6" ci="0" mb="0" cb="0"/><line nr="418" mi="4" ci="0" mb="0" cb="0"/><line nr="419" mi="4" ci="0" mb="0" cb="0"/><line nr="420" mi="6" ci="0" mb="0" cb="0"/><line nr="421" mi="4" ci="0" mb="0" cb="0"/><line nr="422" mi="4" ci="0" mb="0" cb="0"/><line nr="423" mi="4" ci="0" mb="0" cb="0"/><line nr="424" mi="6" ci="0" mb="0" cb="0"/><line nr="425" mi="4" ci="0" mb="0" cb="0"/><line nr="426" mi="4" ci="0" mb="0" cb="0"/><line nr="427" mi="6" ci="0" mb="0" cb="0"/><line nr="430" mi="3" ci="0" mb="2" cb="0"/><line nr="431" mi="4" ci="0" mb="0" cb="0"/><line nr="432" mi="7" ci="0" mb="0" cb="0"/><line nr="436" mi="4" ci="0" mb="2" cb="0"/><line nr="437" mi="3" ci="0" mb="0" cb="0"/><line nr="438" mi="3" ci="0" mb="2" cb="0"/><line nr="439" mi="3" ci="0" mb="0" cb="0"/><line nr="440" mi="5" ci="0" mb="0" cb="0"/><line nr="442" mi="4" ci="0" mb="0" cb="0"/><line nr="443" mi="4" ci="0" mb="0" cb="0"/><line nr="444" mi="6" ci="0" mb="0" cb="0"/><line nr="445" mi="4" ci="0" mb="0" cb="0"/><line nr="446" mi="4" ci="0" mb="0" cb="0"/><line nr="447" mi="6" ci="0" mb="0" cb="0"/><line nr="451" mi="4" ci="0" mb="0" cb="0"/><line nr="453" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="386" covered="168"/><counter type="BRANCH" missed="29" covered="11"/><counter type="LINE" missed="68" covered="37"/><counter type="COMPLEXITY" missed="24" covered="12"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="X500NameAttribute.java"><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="1" cb="1"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="1" cb="1"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="48"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="14"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AttributeSelector.java"><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="7" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="8" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="2" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="8" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="1" ci="0" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="2" cb="0"/><line nr="191" mi="5" ci="0" mb="2" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="197" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="6" ci="0" mb="4" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="212" mi="9" ci="0" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="11" ci="0" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="2" cb="0"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="2" cb="0"/><line nr="279" mi="3" ci="0" mb="2" cb="0"/><line nr="281" mi="3" ci="0" mb="2" cb="0"/><line nr="282" mi="11" ci="0" mb="0" cb="0"/><line nr="286" mi="4" ci="0" mb="0" cb="0"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><line nr="288" mi="12" ci="0" mb="0" cb="0"/><line nr="289" mi="4" ci="0" mb="0" cb="0"/><line nr="290" mi="9" ci="0" mb="0" cb="0"/><line nr="293" mi="2" ci="0" mb="0" cb="0"/><line nr="297" mi="2" ci="0" mb="0" cb="0"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="314" mi="12" ci="0" mb="0" cb="0"/><line nr="315" mi="6" ci="0" mb="0" cb="0"/><line nr="317" mi="3" ci="0" mb="2" cb="0"/><line nr="318" mi="9" ci="0" mb="0" cb="0"/><line nr="320" mi="9" ci="0" mb="0" cb="0"/><line nr="322" mi="4" ci="0" mb="0" cb="0"/><line nr="323" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="264" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="65" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BaseAttributeFactory.java"><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="2" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="2"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="14" ci="0" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="14" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="1" cb="1"/><line nr="191" mi="14" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="1" cb="1"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="16" mb="0" cb="0"/><line nr="223" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="115"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="14" covered="25"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateAttribute.java"><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="1" ci="0" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="7" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="0" ci="7" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="1" cb="1"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="2" mb="0" cb="2"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="1" cb="1"/><line nr="308" mi="15" ci="0" mb="0" cb="0"/><line nr="309" mi="4" ci="0" mb="0" cb="0"/><line nr="310" mi="2" ci="0" mb="0" cb="0"/><line nr="311" mi="3" ci="0" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="10" mb="2" cb="2"/><line nr="321" mi="16" ci="0" mb="0" cb="0"/><line nr="322" mi="19" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="0" cb="0"/><line nr="324" mi="7" ci="0" mb="0" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="326" mi="2" ci="0" mb="0" cb="0"/><line nr="327" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="331" mi="0" ci="11" mb="0" cb="0"/><line nr="332" mi="0" ci="7" mb="0" cb="0"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="7" mb="0" cb="0"/><line nr="340" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="0" ci="5" mb="0" cb="0"/><line nr="355" mi="5" ci="3" mb="0" cb="0"/><line nr="356" mi="0" ci="5" mb="1" cb="1"/><line nr="357" mi="6" ci="0" mb="0" cb="0"/><line nr="358" mi="0" ci="2" mb="0" cb="0"/><line nr="366" mi="0" ci="2" mb="1" cb="1"/><line nr="367" mi="1" ci="0" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="1" cb="1"/><line nr="371" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="0" ci="4" mb="0" cb="0"/><line nr="377" mi="0" ci="5" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="3" mb="0" cb="0"/><line nr="383" mi="5" ci="3" mb="0" cb="0"/><line nr="384" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="0" ci="5" mb="0" cb="0"/><line nr="405" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="0" cb="0"/><line nr="430" mi="0" ci="3" mb="1" cb="1"/><line nr="431" mi="2" ci="0" mb="0" cb="0"/><line nr="433" mi="0" ci="3" mb="0" cb="0"/><line nr="435" mi="0" ci="6" mb="0" cb="0"/><line nr="447" mi="0" ci="4" mb="0" cb="0"/><line nr="456" mi="4" ci="0" mb="0" cb="0"/><line nr="458" mi="4" ci="0" mb="0" cb="0"/><line nr="459" mi="14" ci="0" mb="0" cb="0"/><line nr="460" mi="12" ci="0" mb="0" cb="0"/><line nr="461" mi="12" ci="0" mb="0" cb="0"/><line nr="462" mi="4" ci="0" mb="0" cb="0"/><line nr="464" mi="3" ci="0" mb="0" cb="0"/><line nr="475" mi="3" ci="0" mb="2" cb="0"/><line nr="476" mi="3" ci="0" mb="0" cb="0"/><line nr="478" mi="4" ci="0" mb="2" cb="0"/><line nr="481" mi="1" ci="0" mb="0" cb="0"/><line nr="482" mi="4" ci="0" mb="0" cb="0"/><line nr="483" mi="6" ci="0" mb="0" cb="0"/><line nr="484" mi="9" ci="0" mb="0" cb="0"/><line nr="492" mi="4" ci="0" mb="0" cb="0"/><line nr="494" mi="3" ci="0" mb="0" cb="0"/><line nr="504" mi="2" ci="0" mb="2" cb="0"/><line nr="505" mi="3" ci="0" mb="0" cb="0"/><line nr="513" mi="4" ci="0" mb="0" cb="0"/><line nr="518" mi="5" ci="0" mb="0" cb="0"/><line nr="520" mi="4" ci="0" mb="0" cb="0"/><line nr="524" mi="4" ci="0" mb="0" cb="0"/><line nr="527" mi="5" ci="0" mb="0" cb="0"/><line nr="530" mi="4" ci="0" mb="0" cb="0"/><line nr="531" mi="6" ci="0" mb="0" cb="0"/><line nr="532" mi="4" ci="0" mb="0" cb="0"/><line nr="534" mi="6" ci="0" mb="0" cb="0"/><line nr="535" mi="6" ci="0" mb="0" cb="0"/><line nr="536" mi="4" ci="0" mb="0" cb="0"/><line nr="537" mi="4" ci="0" mb="0" cb="0"/><line nr="538" mi="6" ci="0" mb="0" cb="0"/><line nr="539" mi="8" ci="0" mb="0" cb="0"/><line nr="541" mi="3" ci="0" mb="0" cb="0"/><line nr="542" mi="3" ci="0" mb="2" cb="0"/><line nr="543" mi="3" ci="0" mb="0" cb="0"/><line nr="544" mi="5" ci="0" mb="0" cb="0"/><line nr="546" mi="4" ci="0" mb="0" cb="0"/><line nr="547" mi="4" ci="0" mb="0" cb="0"/><line nr="548" mi="6" ci="0" mb="0" cb="0"/><line nr="549" mi="4" ci="0" mb="0" cb="0"/><line nr="550" mi="4" ci="0" mb="0" cb="0"/><line nr="551" mi="6" ci="0" mb="0" cb="0"/><line nr="553" mi="3" ci="0" mb="0" cb="0"/><line nr="566" mi="3" ci="0" mb="0" cb="0"/><line nr="569" mi="4" ci="0" mb="0" cb="0"/><line nr="570" mi="6" ci="0" mb="4" cb="0"/><line nr="571" mi="2" ci="0" mb="0" cb="0"/><line nr="575" mi="2" ci="0" mb="0" cb="0"/><line nr="576" mi="2" ci="0" mb="2" cb="0"/><line nr="577" mi="1" ci="0" mb="0" cb="0"/><line nr="580" mi="3" ci="0" mb="2" cb="0"/><line nr="581" mi="2" ci="0" mb="0" cb="0"/><line nr="584" mi="4" ci="0" mb="0" cb="0"/><line nr="587" mi="2" ci="0" mb="2" cb="0"/><line nr="588" mi="4" ci="0" mb="0" cb="0"/><line nr="592" mi="4" ci="0" mb="0" cb="0"/><line nr="593" mi="3" ci="0" mb="2" cb="0"/><line nr="594" mi="5" ci="0" mb="0" cb="0"/><line nr="597" mi="2" ci="0" mb="2" cb="0"/><line nr="599" mi="8" ci="0" mb="0" cb="0"/><line nr="601" mi="4" ci="0" mb="0" cb="0"/><line nr="604" mi="3" ci="0" mb="0" cb="0"/><line nr="618" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="394" covered="217"/><counter type="BRANCH" missed="30" covered="10"/><counter type="LINE" missed="84" covered="57"/><counter type="COMPLEXITY" missed="25" covered="14"/><counter type="METHOD" missed="6" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="YearMonthDurationAttribute.java"><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="1" cb="1"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="8" mb="2" cb="2"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="0" cb="0"/><line nr="189" mi="5" ci="0" mb="2" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="2" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="14" mb="0" cb="2"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="1" cb="1"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="2"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="1" ci="0" mb="0" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="1" cb="1"/><line nr="267" mi="5" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="2"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="280" mi="1" ci="0" mb="0" cb="0"/><line nr="284" mi="5" ci="0" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="7" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="1" cb="1"/><line nr="329" mi="2" ci="0" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="333" mi="1" ci="9" mb="1" cb="1"/><line nr="343" mi="10" ci="0" mb="0" cb="0"/><line nr="352" mi="4" ci="0" mb="0" cb="0"/><line nr="353" mi="4" ci="0" mb="0" cb="0"/><line nr="354" mi="12" ci="0" mb="0" cb="0"/><line nr="355" mi="12" ci="0" mb="0" cb="0"/><line nr="356" mi="12" ci="0" mb="0" cb="0"/><line nr="357" mi="4" ci="0" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="0" cb="0"/><line nr="370" mi="3" ci="0" mb="2" cb="0"/><line nr="371" mi="3" ci="0" mb="0" cb="0"/><line nr="374" mi="5" ci="0" mb="0" cb="0"/><line nr="376" mi="3" ci="0" mb="2" cb="0"/><line nr="377" mi="4" ci="0" mb="0" cb="0"/><line nr="378" mi="4" ci="0" mb="0" cb="0"/><line nr="379" mi="10" ci="0" mb="4" cb="0"/><line nr="380" mi="6" ci="0" mb="0" cb="0"/><line nr="381" mi="4" ci="0" mb="0" cb="0"/><line nr="383" mi="5" ci="0" mb="2" cb="0"/><line nr="384" mi="6" ci="0" mb="0" cb="0"/><line nr="385" mi="4" ci="0" mb="0" cb="0"/><line nr="388" mi="4" ci="0" mb="0" cb="0"/><line nr="390" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="190" covered="142"/><counter type="BRANCH" missed="21" covered="13"/><counter type="LINE" missed="41" covered="40"/><counter type="COMPLEXITY" missed="17" covered="12"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AttributeFactory.java"><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="2" cb="0"/><line nr="119" mi="12" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="2" cb="0"/><line nr="149" mi="12" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="8" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="65" covered="38"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="10"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AbstractAttributeSelector.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AttributeValue.java"><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="2" cb="2"/><line nr="183" mi="0" ci="18" mb="0" cb="0"/><line nr="186" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnyURIAttribute.java"><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="1" cb="1"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="8" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="1" cb="1"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="13" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="45"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="8" covered="13"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AttributeDesignator.java"><line nr="95" mi="0" ci="19" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="8" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="11" mb="1" cb="7"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="2"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="2"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="2"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="1" cb="1"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="8" ci="0" mb="0" cb="0"/><line nr="199" mi="5" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="8" mb="0" cb="0"/><line nr="207" mi="1" ci="0" mb="0" cb="0"/><line nr="208" mi="6" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="8" mb="0" cb="0"/><line nr="215" mi="1" ci="0" mb="0" cb="0"/><line nr="216" mi="6" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="2"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="2"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="2"/><line nr="229" mi="0" ci="7" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="2"/><line nr="234" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="2"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="1" cb="1"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="2"/><line nr="244" mi="0" ci="5" mb="1" cb="1"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="1" ci="0" mb="0" cb="0"/><line nr="249" mi="6" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="10" mb="0" cb="0"/><line nr="262" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="3" ci="0" mb="0" cb="0"/><line nr="291" mi="3" ci="0" mb="0" cb="0"/><line nr="300" mi="3" ci="0" mb="0" cb="0"/><line nr="309" mi="3" ci="0" mb="0" cb="0"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><line nr="329" mi="2" ci="0" mb="0" cb="0"/><line nr="338" mi="2" ci="0" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="1" cb="4"/><line nr="356" mi="0" ci="11" mb="0" cb="0"/><line nr="357" mi="0" ci="1" mb="0" cb="0"/><line nr="359" mi="0" ci="11" mb="0" cb="0"/><line nr="360" mi="0" ci="1" mb="0" cb="0"/><line nr="362" mi="0" ci="11" mb="0" cb="0"/><line nr="363" mi="0" ci="1" mb="0" cb="0"/><line nr="365" mi="0" ci="11" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="1" cb="1"/><line nr="371" mi="0" ci="3" mb="1" cb="1"/><line nr="372" mi="2" ci="0" mb="0" cb="0"/><line nr="374" mi="0" ci="5" mb="0" cb="0"/><line nr="376" mi="0" ci="3" mb="0" cb="2"/><line nr="378" mi="0" ci="3" mb="0" cb="2"/><line nr="379" mi="0" ci="3" mb="1" cb="1"/><line nr="380" mi="0" ci="9" mb="0" cb="0"/><line nr="381" mi="0" ci="3" mb="0" cb="0"/><line nr="384" mi="0" ci="4" mb="0" cb="0"/><line nr="385" mi="0" ci="4" mb="0" cb="0"/><line nr="386" mi="0" ci="4" mb="0" cb="0"/><line nr="387" mi="0" ci="14" mb="0" cb="0"/><line nr="389" mi="0" ci="4" mb="0" cb="0"/><line nr="390" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="0" ci="14" mb="0" cb="0"/><line nr="406" mi="0" ci="10" mb="0" cb="0"/><line nr="409" mi="0" ci="1" mb="0" cb="0"/><line nr="410" mi="4" ci="0" mb="0" cb="0"/><line nr="411" mi="4" ci="0" mb="0" cb="0"/><line nr="412" mi="4" ci="0" mb="0" cb="0"/><line nr="413" mi="14" ci="0" mb="0" cb="0"/><line nr="415" mi="4" ci="0" mb="0" cb="0"/><line nr="416" mi="5" ci="0" mb="0" cb="0"/><line nr="417" mi="14" ci="0" mb="0" cb="0"/><line nr="419" mi="10" ci="0" mb="0" cb="0"/><line nr="424" mi="0" ci="2" mb="0" cb="0"/><line nr="436" mi="11" ci="0" mb="0" cb="0"/><line nr="438" mi="6" ci="0" mb="4" cb="0"/><line nr="439" mi="10" ci="0" mb="0" cb="0"/><line nr="442" mi="10" ci="0" mb="0" cb="0"/><line nr="443" mi="10" ci="0" mb="0" cb="0"/><line nr="445" mi="3" ci="0" mb="2" cb="0"/><line nr="446" mi="9" ci="0" mb="0" cb="0"/><line nr="448" mi="3" ci="0" mb="2" cb="0"/><line nr="449" mi="4" ci="0" mb="0" cb="0"/><line nr="452" mi="4" ci="0" mb="0" cb="0"/><line nr="453" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="208" covered="347"/><counter type="BRANCH" missed="16" covered="39"/><counter type="LINE" missed="40" covered="79"/><counter type="COMPLEXITY" missed="22" covered="23"/><counter type="METHOD" missed="10" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StandardAttributeFactory.java"><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="1" cb="1"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="7" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="122" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="2"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="1" cb="1"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="5" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="2" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="2" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="2" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="12" ci="0" mb="0" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="179"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="8" covered="38"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IPv6AddressAttribute.java"><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="2" cb="0"/><line nr="117" mi="7" ci="0" mb="2" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="6" ci="0" mb="0" cb="0"/><line nr="124" mi="12" ci="0" mb="4" cb="0"/><line nr="125" mi="8" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="7" ci="0" mb="0" cb="0"/><line nr="138" mi="13" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="2" cb="0"/><line nr="141" mi="15" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="2" cb="0"/><line nr="144" mi="13" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="155" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AttributeSelectorFactory.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="1" cb="1"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="2"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="1" cb="1"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="5" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="28"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Base64.java"><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="7" ci="0" mb="2" cb="0"/><line nr="163" mi="8" ci="0" mb="0" cb="0"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="167" mi="8" ci="0" mb="0" cb="0"/><line nr="168" mi="5" ci="0" mb="2" cb="0"/><line nr="169" mi="12" ci="0" mb="0" cb="0"/><line nr="171" mi="6" ci="0" mb="0" cb="0"/><line nr="175" mi="5" ci="0" mb="2" cb="0"/><line nr="176" mi="10" ci="0" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="2" cb="0"/><line nr="178" mi="13" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="0" cb="0"/><line nr="187" mi="5" ci="0" mb="2" cb="0"/><line nr="188" mi="9" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="6" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="2" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="5" ci="0" mb="2" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="2"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="7" mb="0" cb="2"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="7" mb="0" cb="2"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="1" cb="1"/><line nr="261" mi="3" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="1" cb="1"/><line nr="267" mi="2" ci="0" mb="2" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="269" mi="5" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="1" cb="1"/><line nr="272" mi="1" ci="0" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="3" cb="4"/><line nr="278" mi="0" ci="3" mb="1" cb="1"/><line nr="279" mi="5" ci="0" mb="0" cb="0"/><line nr="281" mi="0" ci="9" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="1" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="1" cb="1"/><line nr="286" mi="5" ci="0" mb="0" cb="0"/><line nr="288" mi="0" ci="13" mb="0" cb="0"/><line nr="289" mi="0" ci="9" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="1" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="1" cb="1"/><line nr="294" mi="5" ci="0" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="297" mi="0" ci="13" mb="0" cb="0"/><line nr="298" mi="0" ci="9" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="0" cb="2"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="9" mb="0" cb="0"/><line nr="308" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="313" mi="3" ci="0" mb="2" cb="0"/><line nr="314" mi="5" ci="0" mb="0" cb="0"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><line nr="317" mi="1" ci="0" mb="0" cb="0"/><line nr="319" mi="5" ci="0" mb="0" cb="0"/><line nr="324" mi="0" ci="5" mb="1" cb="3"/><line nr="325" mi="5" ci="0" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="209" covered="180"/><counter type="BRANCH" missed="28" covered="21"/><counter type="LINE" missed="44" covered="45"/><counter type="COMPLEXITY" missed="21" covered="11"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DayTimeDurationAttribute.java"><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="1" cb="1"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="16" mb="4" cb="4"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="8" ci="0" mb="0" cb="0"/><line nr="224" mi="8" ci="0" mb="0" cb="0"/><line nr="230" mi="5" ci="0" mb="2" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="1" ci="0" mb="0" cb="0"/><line nr="237" mi="0" ci="17" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="1" cb="1"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="2"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="301" mi="5" ci="0" mb="0" cb="0"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="2" mb="1" cb="1"/><line nr="311" mi="5" ci="0" mb="0" cb="0"/><line nr="315" mi="0" ci="5" mb="1" cb="1"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="4" mb="0" cb="0"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="5" mb="1" cb="1"/><line nr="334" mi="4" ci="0" mb="0" cb="0"/><line nr="338" mi="4" ci="0" mb="2" cb="0"/><line nr="339" mi="5" ci="0" mb="0" cb="0"/><line nr="340" mi="4" ci="0" mb="2" cb="0"/><line nr="341" mi="5" ci="0" mb="0" cb="0"/><line nr="343" mi="3" ci="0" mb="0" cb="0"/><line nr="348" mi="4" ci="0" mb="2" cb="0"/><line nr="349" mi="5" ci="0" mb="0" cb="0"/><line nr="352" mi="3" ci="0" mb="0" cb="0"/><line nr="354" mi="1" ci="0" mb="0" cb="0"/><line nr="358" mi="2" ci="0" mb="0" cb="0"/><line nr="359" mi="0" ci="1" mb="0" cb="0"/><line nr="366" mi="0" ci="8" mb="1" cb="1"/><line nr="367" mi="5" ci="0" mb="0" cb="0"/><line nr="371" mi="0" ci="10" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="389" mi="3" ci="0" mb="0" cb="0"/><line nr="398" mi="3" ci="0" mb="0" cb="0"/><line nr="407" mi="3" ci="0" mb="0" cb="0"/><line nr="416" mi="3" ci="0" mb="0" cb="0"/><line nr="425" mi="0" ci="3" mb="0" cb="0"/><line nr="434" mi="0" ci="3" mb="0" cb="0"/><line nr="446" mi="0" ci="3" mb="1" cb="1"/><line nr="447" mi="2" ci="0" mb="0" cb="0"/><line nr="449" mi="0" ci="3" mb="0" cb="0"/><line nr="451" mi="0" ci="20" mb="2" cb="4"/><line nr="464" mi="10" ci="0" mb="0" cb="0"/><line nr="465" mi="7" ci="0" mb="0" cb="0"/><line nr="466" mi="3" ci="0" mb="2" cb="0"/><line nr="467" mi="3" ci="0" mb="0" cb="0"/><line nr="468" mi="2" ci="0" mb="0" cb="0"/><line nr="477" mi="4" ci="0" mb="0" cb="0"/><line nr="479" mi="4" ci="0" mb="0" cb="0"/><line nr="480" mi="12" ci="0" mb="0" cb="0"/><line nr="481" mi="12" ci="0" mb="0" cb="0"/><line nr="482" mi="12" ci="0" mb="0" cb="0"/><line nr="483" mi="12" ci="0" mb="0" cb="0"/><line nr="484" mi="12" ci="0" mb="0" cb="0"/><line nr="485" mi="12" ci="0" mb="0" cb="0"/><line nr="486" mi="12" ci="0" mb="0" cb="0"/><line nr="487" mi="4" ci="0" mb="0" cb="0"/><line nr="489" mi="3" ci="0" mb="0" cb="0"/><line nr="500" mi="3" ci="0" mb="2" cb="0"/><line nr="501" mi="3" ci="0" mb="0" cb="0"/><line nr="504" mi="5" ci="0" mb="0" cb="0"/><line nr="506" mi="3" ci="0" mb="2" cb="0"/><line nr="507" mi="4" ci="0" mb="0" cb="0"/><line nr="508" mi="4" ci="0" mb="0" cb="0"/><line nr="509" mi="5" ci="0" mb="2" cb="0"/><line nr="510" mi="6" ci="0" mb="0" cb="0"/><line nr="511" mi="4" ci="0" mb="0" cb="0"/><line nr="513" mi="18" ci="0" mb="8" cb="0"/><line nr="515" mi="5" ci="0" mb="0" cb="0"/><line nr="518" mi="5" ci="0" mb="2" cb="0"/><line nr="519" mi="4" ci="0" mb="0" cb="0"/><line nr="521" mi="5" ci="0" mb="2" cb="0"/><line nr="522" mi="6" ci="0" mb="0" cb="0"/><line nr="523" mi="4" ci="0" mb="0" cb="0"/><line nr="525" mi="5" ci="0" mb="2" cb="0"/><line nr="526" mi="6" ci="0" mb="0" cb="0"/><line nr="527" mi="4" ci="0" mb="0" cb="0"/><line nr="529" mi="8" ci="0" mb="4" cb="0"/><line nr="530" mi="6" ci="0" mb="0" cb="0"/><line nr="531" mi="3" ci="0" mb="2" cb="0"/><line nr="532" mi="4" ci="0" mb="0" cb="0"/><line nr="533" mi="7" ci="0" mb="0" cb="0"/><line nr="535" mi="4" ci="0" mb="0" cb="0"/><line nr="538" mi="4" ci="0" mb="0" cb="0"/><line nr="540" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="388" covered="207"/><counter type="BRANCH" missed="49" covered="17"/><counter type="LINE" missed="78" covered="51"/><counter type="COMPLEXITY" missed="38" covered="11"/><counter type="METHOD" missed="7" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DNSNameAttribute.java"><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="2" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="2" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="2" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="15" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="2" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="5" ci="0" mb="0" cb="0"/><line nr="184" mi="9" ci="0" mb="0" cb="0"/><line nr="185" mi="6" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="3" ci="0" mb="0" cb="0"/><line nr="227" mi="3" ci="0" mb="2" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="3" ci="0" mb="0" cb="0"/><line nr="232" mi="8" ci="0" mb="2" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="6" ci="0" mb="2" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="12" ci="0" mb="0" cb="0"/><line nr="267" mi="4" ci="0" mb="2" cb="0"/><line nr="268" mi="3" ci="0" mb="0" cb="0"/><line nr="270" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="187" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="HexBinaryAttribute.java"><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="1" cb="1"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="1" cb="1"/><line nr="139" mi="12" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="6" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="9" mb="0" cb="2"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="1" cb="1"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="1" cb="3"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="3" ci="3" mb="3" cb="1"/><line nr="199" mi="7" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="2" cb="2"/><line nr="202" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="1" cb="1"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="7" mb="0" cb="2"/><line nr="226" mi="0" ci="6" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="2" cb="2"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="0" ci="9" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="244" mi="3" ci="0" mb="2" cb="0"/><line nr="245" mi="6" ci="0" mb="0" cb="0"/><line nr="247" mi="7" ci="0" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="5" ci="0" mb="0" cb="0"/><line nr="262" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="7" ci="0" mb="2" cb="0"/><line nr="265" mi="4" ci="0" mb="0" cb="0"/><line nr="266" mi="10" ci="0" mb="0" cb="0"/><line nr="267" mi="8" ci="0" mb="0" cb="0"/><line nr="270" mi="5" ci="0" mb="0" cb="0"/><line nr="279" mi="3" ci="0" mb="2" cb="0"/><line nr="280" mi="5" ci="0" mb="0" cb="0"/><line nr="282" mi="12" ci="0" mb="0" cb="0"/><line nr="289" mi="3" ci="0" mb="2" cb="0"/><line nr="290" mi="5" ci="0" mb="0" cb="0"/><line nr="292" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="140" covered="153"/><counter type="BRANCH" missed="20" covered="16"/><counter type="LINE" missed="29" covered="37"/><counter type="COMPLEXITY" missed="20" covered="11"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IPv4AddressAttribute.java"><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="1" cb="1"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="2" cb="0"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="2" cb="0"/><line nr="122" mi="8" ci="0" mb="0" cb="0"/><line nr="123" mi="10" ci="0" mb="0" cb="0"/><line nr="126" mi="10" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="9" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="2" cb="0"/><line nr="147" mi="11" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="2" cb="0"/><line nr="150" mi="13" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="114" covered="38"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="20" covered="11"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AttributeDesignatorFactory.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="2"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="2"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="1" cb="1"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="5" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="30"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="3925" covered="2878"/><counter type="BRANCH" missed="406" covered="222"/><counter type="LINE" missed="822" covered="727"/><counter type="COMPLEXITY" missed="383" covered="239"/><counter type="METHOD" missed="122" covered="182"/><counter type="CLASS" missed="3" covered="30"/></package><package name="org/wso2/balana/cond/cluster/xacml3"><class name="org/wso2/balana/cond/cluster/xacml3/StringConversionFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="33"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/xacml3/StringCreationFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="35"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/xacml3/XACML3HigherOrderFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="37"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/xacml3/SubStringFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="35"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/xacml3/XPathFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="34"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/xacml3/StringComparingFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="35"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SubStringFunctionCluster.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="2"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringCreationFunctionCluster.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="2"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringConversionFunctionCluster.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="10" mb="0" cb="2"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringComparingFunctionCluster.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="2"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XACML3HigherOrderFunctionCluster.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="11" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XPathFunctionCluster.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="2"/><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="161"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="6"/></package><package name="org/wso2/balana/combine"><class name="org/wso2/balana/combine/PolicyCombinerElement"><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/AbstractPolicy;)V" line="65"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/AbstractPolicy;Ljava/util/List;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPolicy" desc="()Lorg/wso2/balana/AbstractPolicy;" line="87"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="97"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeParamaters" desc="(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V" line="127"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="100" covered="10"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="23" covered="3"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/CombiningAlgorithm"><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIdentifier" desc="()Ljava/net/URI;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/BaseCombiningAlgFactory"><method name="&lt;init&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="80"><counter type="INSTRUCTION" missed="6" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAlgorithm" desc="(Lorg/wso2/balana/combine/CombiningAlgorithm;)V" line="104"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSupportedAlgorithms" desc="()Ljava/util/Set;" line="120"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createAlgorithm" desc="(Ljava/net/URI;)Lorg/wso2/balana/combine/CombiningAlgorithm;" line="133"><counter type="INSTRUCTION" missed="12" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="59" covered="44"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="12" covered="11"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/RuleCombinerElement"><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/Rule;)V" line="62"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/Rule;Ljava/util/List;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRule" desc="()Lorg/wso2/balana/Rule;" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="94"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="10"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/CombinerParameter"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/wso2/balana/attr/AttributeValue;)V" line="72"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/combine/CombinerParameter;" line="88"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Lorg/wso2/balana/attr/AttributeValue;" line="118"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="129"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/combine/PolicyCombiningAlgorithm"><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/StandardCombiningAlgFactory"><method name="&lt;init&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initAlgorithms" desc="()V" line="93"><counter type="INSTRUCTION" missed="0" covered="248"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="52"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFactory" desc="()Lorg/wso2/balana/combine/StandardCombiningAlgFactory;" line="172"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNewFactory" desc="()Lorg/wso2/balana/combine/CombiningAlgFactory;" line="196"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStandardAlgorithms" desc="(Ljava/lang/String;)Ljava/util/Set;" line="215"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAlgorithm" desc="(Lorg/wso2/balana/combine/CombiningAlgorithm;)V" line="233"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="285"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="6" covered="66"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/CombiningAlgFactory"><method name="&lt;init&gt;" desc="()V" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="()Lorg/wso2/balana/combine/CombiningAlgFactory;" line="94"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/combine/CombiningAlgFactory;" line="112"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultFactory" desc="(Lorg/wso2/balana/combine/CombiningAlgFactoryProxy;)V" line="128"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerFactory" desc="(Ljava/lang/String;Lorg/wso2/balana/combine/CombiningAlgFactoryProxy;)V" line="143"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addCombiningAlg" desc="(Lorg/wso2/balana/combine/CombiningAlgorithm;)V" line="176"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createCombiningAlg" desc="(Ljava/net/URI;)Lorg/wso2/balana/combine/CombiningAlgorithm;" line="213"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="70" covered="29"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="9"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/CombiningAlgFactory$1"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFactory" desc="()Lorg/wso2/balana/combine/CombiningAlgFactory;" line="68"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/RuleCombiningAlgorithm"><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/CombinerElement"><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/PolicyTreeElement;)V" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/PolicyTreeElement;Ljava/util/List;)V" line="80"><counter type="INSTRUCTION" missed="7" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElement" desc="()Lorg/wso2/balana/PolicyTreeElement;" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()Ljava/util/List;" line="104"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BaseCombiningAlgFactory.java"><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="2" cb="0"/><line nr="108" mi="12" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="1" cb="1"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="44"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="12" covered="11"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RuleCombiningAlgorithm.java"><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StandardCombiningAlgFactory.java"><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="1" cb="1"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="2"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="1" cb="1"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="5" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="6" ci="0" mb="2" cb="0"/><line nr="216" mi="4" ci="0" mb="2" cb="0"/><line nr="217" mi="2" ci="0" mb="2" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="221" mi="12" ci="0" mb="0" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="285"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="6" covered="66"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CombiningAlgorithm.java"><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PolicyCombiningAlgorithm.java"><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RuleCombinerElement.java"><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="2" cb="0"/><line nr="97" mi="10" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="2" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="10"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CombinerElement.java"><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="1" cb="1"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PolicyCombinerElement.java"><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="2" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="8" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="2" cb="0"/><line nr="105" mi="8" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="8" ci="0" mb="0" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="8" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="2" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="8" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="100" covered="10"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="23" covered="3"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CombinerParameter.java"><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="7" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="9" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CombiningAlgFactory.java"><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="2" cb="0"/><line nr="114" mi="12" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="2" cb="0"/><line nr="145" mi="12" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="8" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="72" covered="32"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="9"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="7" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="388" covered="416"/><counter type="BRANCH" missed="30" covered="8"/><counter type="LINE" missed="92" covered="106"/><counter type="COMPLEXITY" missed="41" covered="22"/><counter type="METHOD" missed="24" covered="20"/><counter type="CLASS" missed="1" covered="10"/></package><package name="org/wso2/balana/cond"><class name="org/wso2/balana/cond/BagFunction"><method name="getOneAndOnlyInstance" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/wso2/balana/cond/BagFunction;" line="142"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBagSizeInstance" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/wso2/balana/cond/BagFunction;" line="157"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsInInstance" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/wso2/balana/cond/BagFunction;" line="172"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBagInstance" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/wso2/balana/cond/BagFunction;" line="187"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;ZILjava/lang/String;Z)V" line="206"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I[Ljava/lang/String;)V" line="220"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="229"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="96"><counter type="INSTRUCTION" missed="0" covered="152"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="41" covered="171"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/ModFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="71"><counter type="INSTRUCTION" missed="12" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="84"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="103"><counter type="INSTRUCTION" missed="2" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="58"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/VariableDefinition"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/wso2/balana/cond/Expression;)V" line="71"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;Lorg/wso2/balana/cond/VariableManager;)Lorg/wso2/balana/cond/VariableDefinition;" line="88"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVariableId" desc="()Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExpression" desc="()Lorg/wso2/balana/cond/Expression;" line="118"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="140"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/cond/AbsFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="90"><counter type="INSTRUCTION" missed="12" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="116"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="136"><counter type="INSTRUCTION" missed="2" covered="53"/><counter type="BRANCH" missed="2" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="100"/><counter type="BRANCH" missed="3" covered="8"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/RoundFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="73"><counter type="INSTRUCTION" missed="12" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="86"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="105"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="59"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/MapFunctionProxy"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/wso2/balana/cond/Function;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/Condition"><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/cond/Function;Ljava/util/List;)V" line="102"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/cond/Expression;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkExpression" desc="(Lorg/wso2/balana/cond/Expression;)V" line="147"><counter type="INSTRUCTION" missed="18" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;Lorg/wso2/balana/cond/VariableManager;)Lorg/wso2/balana/cond/Condition;" line="168"><counter type="INSTRUCTION" missed="14" covered="36"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunction" desc="()Lorg/wso2/balana/cond/Function;" line="193"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="203"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/net/URI;" line="213"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnsBag" desc="()Z" line="223"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluatesToBag" desc="()Z" line="236"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="253"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="262"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="276"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="3" covered="7"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="124" covered="86"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="31" covered="24"/><counter type="COMPLEXITY" missed="14" covered="6"/><counter type="METHOD" missed="8" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/TimeInRangeFunction"><method name="&lt;init&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="97"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveTime" desc="(Lorg/wso2/balana/attr/TimeAttribute;Lorg/wso2/balana/attr/TimeAttribute;)J" line="145"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleWrap" desc="(J)J" line="179"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="146" covered="10"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="32" covered="2"/><counter type="COMPLEXITY" missed="14" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/NumericConvertFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="91"><counter type="INSTRUCTION" missed="12" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="105"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="119"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReturnType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="131"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="149"><counter type="INSTRUCTION" missed="2" covered="53"/><counter type="BRANCH" missed="2" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="108"/><counter type="BRANCH" missed="3" covered="10"/><counter type="LINE" missed="2" covered="30"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/StringFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="82"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="100"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="56" covered="21"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/VariableManager"><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lorg/wso2/balana/PolicyMetaData;)V" line="92"><counter type="INSTRUCTION" missed="25" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefinition" desc="(Ljava/lang/String;)Lorg/wso2/balana/cond/VariableDefinition;" line="121"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="discoverApplyType" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/cond/VariableManager$VariableState;)V" line="177"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVariableType" desc="(Ljava/lang/String;)Ljava/net/URI;" line="214"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnsBag" desc="(Ljava/lang/String;)Z" line="251"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="251" covered="18"/><counter type="BRANCH" missed="29" covered="1"/><counter type="LINE" missed="55" covered="6"/><counter type="COMPLEXITY" missed="19" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/StringNormalizeFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="90"><counter type="INSTRUCTION" missed="12" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="104"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="123"><counter type="INSTRUCTION" missed="2" covered="84"/><counter type="BRANCH" missed="4" covered="9"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="121"/><counter type="BRANCH" missed="5" covered="12"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/LogicalFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="92"><counter type="INSTRUCTION" missed="12" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="106"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="128"><counter type="INSTRUCTION" missed="2" covered="44"/><counter type="BRANCH" missed="2" covered="11"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="81"/><counter type="BRANCH" missed="3" covered="14"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/VariableManager$VariableState"><method name="&lt;init&gt;" desc="()V" line="295"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/cond/VariableDefinition;Lorg/w3c/dom/Node;Ljava/net/URI;ZZ)V" line="304"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/cond/NotFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="72"><counter type="INSTRUCTION" missed="12" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="85"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="104"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="49"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/BaseFunctionFactory"><method name="&lt;init&gt;" desc="()V" line="80"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/cond/FunctionFactory;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;Ljava/util/Map;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/cond/FunctionFactory;Ljava/util/Set;Ljava/util/Map;)V" line="122"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFunction" desc="(Lorg/wso2/balana/cond/Function;)V" line="149"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAbstractFunction" desc="(Lorg/wso2/balana/cond/FunctionProxy;Ljava/net/URI;)V" line="175"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="195"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFunction" desc="(Ljava/net/URI;)Lorg/wso2/balana/cond/Function;" line="214"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFunction" desc="(Ljava/lang/String;)Lorg/wso2/balana/cond/Function;" line="228"><counter type="INSTRUCTION" missed="14" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAbstractFunction" desc="(Ljava/net/URI;Lorg/w3c/dom/Node;)Lorg/wso2/balana/cond/Function;" line="258"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createAbstractFunction" desc="(Ljava/net/URI;Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/wso2/balana/cond/Function;" line="276"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createAbstractFunction" desc="(Ljava/lang/String;Lorg/w3c/dom/Node;)Lorg/wso2/balana/cond/Function;" line="292"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createAbstractFunction" desc="(Ljava/lang/String;Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/wso2/balana/cond/Function;" line="310"><counter type="INSTRUCTION" missed="33" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="145" covered="114"/><counter type="BRANCH" missed="13" covered="9"/><counter type="LINE" missed="28" covered="31"/><counter type="COMPLEXITY" missed="15" covered="9"/><counter type="METHOD" missed="7" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/SetFunction"><method name="getIntersectionInstance" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/wso2/balana/cond/SetFunction;" line="147"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtLeastOneInstance" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/wso2/balana/cond/SetFunction;" line="162"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUnionInstance" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/wso2/balana/cond/SetFunction;" line="177"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubsetInstance" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/wso2/balana/cond/SetFunction;" line="191"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSetEqualsInstance" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/wso2/balana/cond/SetFunction;" line="205"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Z)V" line="221"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="230"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="105"><counter type="INSTRUCTION" missed="0" covered="141"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="49" covered="151"/><counter type="LINE" missed="9" covered="6"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/MatchFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="158"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="166"><counter type="INSTRUCTION" missed="24" covered="42"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="5" covered="14"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentTypes" desc="(Ljava/lang/String;)[Ljava/lang/String;" line="194"><counter type="INSTRUCTION" missed="14" covered="42"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="5" covered="14"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="222"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="249"><counter type="INSTRUCTION" missed="115" covered="115"/><counter type="BRANCH" missed="11" covered="8"/><counter type="LINE" missed="23" covered="25"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="regexpHelper" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="372"><counter type="INSTRUCTION" missed="42" covered="64"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="6" covered="15"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="128"><counter type="INSTRUCTION" missed="0" covered="111"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="195" covered="427"/><counter type="BRANCH" missed="26" covered="39"/><counter type="LINE" missed="39" covered="91"/><counter type="COMPLEXITY" missed="21" covered="22"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/ConditionSetFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="139"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="146"><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="160"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="169"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="184"><counter type="INSTRUCTION" missed="3" covered="97"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="76"><counter type="INSTRUCTION" missed="0" covered="230"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="354"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="4" covered="54"/><counter type="COMPLEXITY" missed="8" covered="10"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/ConditionBagFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="103"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArguments" desc="(Ljava/lang/String;)[Ljava/lang/String;" line="110"><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="124"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="139"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="136"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/ExpressionHandler"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseExpression" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;Lorg/wso2/balana/cond/VariableManager;)Lorg/wso2/balana/cond/Expression;" line="50"><counter type="INSTRUCTION" missed="12" covered="90"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunction" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;Lorg/wso2/balana/cond/FunctionFactory;)Lorg/wso2/balana/cond/Function;" line="91"><counter type="INSTRUCTION" missed="28" covered="23"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="43" covered="113"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="10" covered="28"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/FunctionTypeException"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="86"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="4"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/HigherOrderFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="151"><counter type="INSTRUCTION" missed="18" covered="35"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="178"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIdentifier" desc="()Ljava/net/URI;" line="187"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/net/URI;" line="197"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReturnType" desc="()Ljava/net/URI;" line="206"><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnsBag" desc="()Z" line="218"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="232"><counter type="INSTRUCTION" missed="15" covered="211"/><counter type="BRANCH" missed="8" covered="17"/><counter type="LINE" missed="7" covered="44"/><counter type="COMPLEXITY" missed="8" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkInputs" desc="(Ljava/util/List;)V" line="377"><counter type="INSTRUCTION" missed="44" covered="66"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="10" covered="16"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkInputsNoBag" desc="(Ljava/util/List;)V" line="434"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="any" desc="(Lorg/wso2/balana/attr/AttributeValue;Lorg/wso2/balana/attr/BagAttribute;Lorg/wso2/balana/cond/Function;Lorg/wso2/balana/ctx/EvaluationCtx;Z)Lorg/wso2/balana/cond/EvaluationResult;" line="443"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="all" desc="(Lorg/wso2/balana/attr/AttributeValue;Lorg/wso2/balana/attr/BagAttribute;Lorg/wso2/balana/cond/Function;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="451"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="anyAndAllHelper" desc="(Lorg/wso2/balana/attr/AttributeValue;Lorg/wso2/balana/attr/BagAttribute;Lorg/wso2/balana/cond/Function;Lorg/wso2/balana/ctx/EvaluationCtx;ZZ)Lorg/wso2/balana/cond/EvaluationResult;" line="460"><counter type="INSTRUCTION" missed="2" covered="64"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="anyOfAll" desc="(Lorg/wso2/balana/attr/BagAttribute;Lorg/wso2/balana/attr/BagAttribute;Lorg/wso2/balana/cond/Function;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="494"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allOfAny" desc="(Lorg/wso2/balana/attr/BagAttribute;Lorg/wso2/balana/attr/BagAttribute;Lorg/wso2/balana/cond/Function;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="502"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allAnyHelper" desc="(Lorg/wso2/balana/attr/BagAttribute;Lorg/wso2/balana/attr/BagAttribute;Lorg/wso2/balana/cond/Function;Lorg/wso2/balana/ctx/EvaluationCtx;Z)Lorg/wso2/balana/cond/EvaluationResult;" line="510"><counter type="INSTRUCTION" missed="4" covered="34"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="532"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="544"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="128"><counter type="INSTRUCTION" missed="9" covered="47"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="123" covered="504"/><counter type="BRANCH" missed="23" covered="42"/><counter type="LINE" missed="34" covered="114"/><counter type="COMPLEXITY" missed="25" covered="28"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/SubtractFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="90"><counter type="INSTRUCTION" missed="12" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="116"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="136"><counter type="INSTRUCTION" missed="2" covered="67"/><counter type="BRANCH" missed="2" covered="3"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="114"/><counter type="BRANCH" missed="3" covered="8"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/VariableReference"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/cond/VariableDefinition;)V" line="63"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/wso2/balana/cond/VariableManager;)V" line="63"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;Lorg/wso2/balana/cond/VariableManager;)Lorg/wso2/balana/cond/VariableReference;" line="119"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVariableId" desc="()Ljava/lang/String;" line="133"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReferencedDefinition" desc="()Lorg/wso2/balana/cond/VariableDefinition;" line="145"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="164"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/net/URI;" line="186"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnsBag" desc="()Z" line="204"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluatesToBag" desc="()Z" line="223"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="235"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="244"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="256"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/cond/FloorFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="72"><counter type="INSTRUCTION" missed="12" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="85"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="104"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="51"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/GeneralBagFunction$BagParameters"><method name="&lt;init&gt;" desc="(ILjava/lang/String;ZILjava/lang/String;Z)V" line="293"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/FunctionFactory"><method name="&lt;init&gt;" desc="()V" line="102"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetInstance" desc="()Lorg/wso2/balana/cond/FunctionFactory;" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/cond/FunctionFactory;" line="130"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConditionInstance" desc="()Lorg/wso2/balana/cond/FunctionFactory;" line="140"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConditionInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/cond/FunctionFactory;" line="157"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGeneralInstance" desc="()Lorg/wso2/balana/cond/FunctionFactory;" line="167"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGeneralInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/cond/FunctionFactory;" line="184"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="()Lorg/wso2/balana/cond/FunctionFactoryProxy;" line="193"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/cond/FunctionFactoryProxy;" line="210"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRegisteredProxy" desc="(Ljava/lang/String;)Lorg/wso2/balana/cond/FunctionFactoryProxy;" line="219"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultFactory" desc="(Lorg/wso2/balana/cond/FunctionFactoryProxy;)V" line="235"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerFactory" desc="(Ljava/lang/String;Lorg/wso2/balana/cond/FunctionFactoryProxy;)V" line="250"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addTargetFunction" desc="(Lorg/wso2/balana/cond/Function;)V" line="295"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAbstractTargetFunction" desc="(Lorg/wso2/balana/cond/FunctionProxy;Ljava/net/URI;)V" line="312"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addConditionFunction" desc="(Lorg/wso2/balana/cond/Function;)V" line="328"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAbstractConditionFunction" desc="(Lorg/wso2/balana/cond/FunctionProxy;Ljava/net/URI;)V" line="345"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addGeneralFunction" desc="(Lorg/wso2/balana/cond/Function;)V" line="361"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAbstractGeneralFunction" desc="(Lorg/wso2/balana/cond/FunctionProxy;Ljava/net/URI;)V" line="378"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="103" covered="38"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="28" covered="13"/><counter type="COMPLEXITY" missed="16" covered="5"/><counter type="METHOD" missed="14" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/MapFunction"><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="108"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/cond/MapFunction;" line="126"><counter type="INSTRUCTION" missed="29" covered="45"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="9" covered="12"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIdentifier" desc="()Ljava/net/URI;" line="170"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/net/URI;" line="183"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReturnType" desc="()Ljava/net/URI;" line="192"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnsBag" desc="()Z" line="201"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeProcessingError" desc="(Ljava/lang/String;)Lorg/wso2/balana/cond/EvaluationResult;" line="208"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="225"><counter type="INSTRUCTION" missed="11" covered="77"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="4" covered="19"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkInputs" desc="(Ljava/util/List;)V" line="277"><counter type="INSTRUCTION" missed="34" covered="46"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="8" covered="12"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkInputsNoBag" desc="(Ljava/util/List;)V" line="315"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="324"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="336"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="139" covered="186"/><counter type="BRANCH" missed="15" covered="13"/><counter type="LINE" missed="40" covered="51"/><counter type="COMPLEXITY" missed="19" covered="9"/><counter type="METHOD" missed="7" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/EvaluationResult"><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/attr/AttributeValue;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/ctx/Status;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchResult" desc="()Lorg/wso2/balana/MatchResult;" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMatchResult" desc="(Lorg/wso2/balana/MatchResult;)V" line="101"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indeterminate" desc="()Z" line="110"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeValue" desc="()Lorg/wso2/balana/attr/AttributeValue;" line="119"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStatus" desc="()Lorg/wso2/balana/ctx/Status;" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Z)Lorg/wso2/balana/cond/EvaluationResult;" line="138"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFalseInstance" desc="()Lorg/wso2/balana/cond/EvaluationResult;" line="150"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTrueInstance" desc="()Lorg/wso2/balana/cond/EvaluationResult;" line="162"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="57"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="3" covered="22"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/Apply"><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/cond/Function;Ljava/util/List;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/cond/Function;Ljava/util/List;Z)V" line="111"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConditionInstance" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;Lorg/wso2/balana/cond/VariableManager;)Lorg/wso2/balana/cond/Apply;" line="148"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConditionInstance" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/wso2/balana/cond/Apply;" line="172"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;Lorg/wso2/balana/cond/VariableManager;)Lorg/wso2/balana/cond/Apply;" line="188"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/wso2/balana/cond/Apply;" line="206"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/cond/FunctionFactory;Lorg/wso2/balana/PolicyMetaData;Lorg/wso2/balana/cond/VariableManager;)Lorg/wso2/balana/cond/Apply;" line="216"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunction" desc="()Lorg/wso2/balana/cond/Function;" line="236"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="246"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCondition" desc="()Z" line="259"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="277"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/net/URI;" line="288"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnsBag" desc="()Z" line="297"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluatesToBag" desc="()Z" line="310"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="319"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="333"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="106" covered="76"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="25" covered="17"/><counter type="COMPLEXITY" missed="12" covered="8"/><counter type="METHOD" missed="10" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/MultiplyFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="90"><counter type="INSTRUCTION" missed="12" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="116"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="136"><counter type="INSTRUCTION" missed="2" covered="67"/><counter type="BRANCH" missed="2" covered="3"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="114"/><counter type="BRANCH" missed="3" covered="8"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/FunctionBase"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;ZILjava/lang/String;Z)V" line="124"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;ZIILjava/lang/String;Z)V" line="154"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I[Ljava/lang/String;[ZLjava/lang/String;Z)V" line="178"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Z)V" line="197"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIdentifier" desc="()Ljava/net/URI;" line="216"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunctionName" desc="()Ljava/lang/String;" line="228"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunctionId" desc="()I" line="237"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/net/URI;" line="247"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReturnType" desc="()Ljava/net/URI;" line="257"><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnsBag" desc="()Z" line="269"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReturnTypeAsString" desc="()Ljava/lang/String;" line="278"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeProcessingError" desc="(Ljava/lang/String;)Lorg/wso2/balana/cond/EvaluationResult;" line="290"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evalArgs" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;[Lorg/wso2/balana/attr/AttributeValue;)Lorg/wso2/balana/cond/EvaluationResult;" line="316"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkInputs" desc="(Ljava/util/List;)V" line="347"><counter type="INSTRUCTION" missed="49" covered="80"/><counter type="BRANCH" missed="7" covered="15"/><counter type="LINE" missed="5" covered="21"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkInputsNoBag" desc="(Ljava/util/List;)V" line="398"><counter type="INSTRUCTION" missed="67" covered="71"/><counter type="BRANCH" missed="9" covered="13"/><counter type="LINE" missed="7" covered="19"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="446"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="458"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="151" covered="306"/><counter type="BRANCH" missed="16" covered="34"/><counter type="LINE" missed="23" covered="87"/><counter type="COMPLEXITY" missed="19" covered="24"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/IPInRangeFunction"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="61"><counter type="INSTRUCTION" missed="2" covered="56"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ipToLong" desc="(Ljava/net/InetAddress;)J" line="90"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="100"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/FunctionFactory$1"><method name="&lt;init&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetFactory" desc="()Lorg/wso2/balana/cond/FunctionFactory;" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConditionFactory" desc="()Lorg/wso2/balana/cond/FunctionFactory;" line="83"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGeneralFactory" desc="()Lorg/wso2/balana/cond/FunctionFactory;" line="87"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/DivideFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="90"><counter type="INSTRUCTION" missed="12" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="116"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="136"><counter type="INSTRUCTION" missed="10" covered="75"/><counter type="BRANCH" missed="4" covered="5"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="122"/><counter type="BRANCH" missed="5" covered="10"/><counter type="LINE" missed="6" covered="31"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/EqualFunction"><method name="getEqualInstance" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/wso2/balana/cond/EqualFunction;" line="208"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="222"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="234"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="241"><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="257"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="270"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="285"><counter type="INSTRUCTION" missed="3" covered="53"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="171"><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="182"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="3" covered="40"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/AddFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="90"><counter type="INSTRUCTION" missed="12" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="116"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="136"><counter type="INSTRUCTION" missed="2" covered="75"/><counter type="BRANCH" missed="2" covered="7"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="123"/><counter type="BRANCH" missed="3" covered="12"/><counter type="LINE" missed="2" covered="31"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/URLStringCatFunction"><method name="&lt;init&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkInputs" desc="(Ljava/util/List;)V" line="83"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkInputsNoBag" desc="(Ljava/util/List;)V" line="103"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="132"><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="147" covered="7"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="29" covered="2"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/NOfFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="78"><counter type="INSTRUCTION" missed="12" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="90"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="111"><counter type="INSTRUCTION" missed="31" covered="78"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="5" covered="18"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkInputs" desc="(Ljava/util/List;)V" line="166"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkInputsNoBag" desc="(Ljava/util/List;)V" line="180"><counter type="INSTRUCTION" missed="15" covered="37"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="63" covered="158"/><counter type="BRANCH" missed="10" covered="20"/><counter type="LINE" missed="10" covered="36"/><counter type="COMPLEXITY" missed="10" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/ComparisonFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="298"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="306"><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="320"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="329"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="343"><counter type="INSTRUCTION" missed="13" covered="605"/><counter type="BRANCH" missed="13" covered="62"/><counter type="LINE" missed="1" covered="110"/><counter type="COMPLEXITY" missed="13" covered="37"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubleCompare" desc="(DD)I" line="591"><counter type="INSTRUCTION" missed="15" covered="24"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dateCompare" desc="(Ljava/util/Date;ILjava/util/Date;I)I" line="633"><counter type="INSTRUCTION" missed="7" covered="13"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="230"><counter type="INSTRUCTION" missed="0" covered="273"/><counter type="LINE" missed="0" covered="55"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="47" covered="946"/><counter type="BRANCH" missed="22" covered="73"/><counter type="LINE" missed="8" covered="183"/><counter type="COMPLEXITY" missed="20" covered="47"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/StandardFunctionFactory"><method name="&lt;init&gt;" desc="(Ljava/util/Set;Ljava/util/Map;)V" line="117"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initTargetFunctions" desc="()V" line="139"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initConditionFunctions" desc="()V" line="167"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initGeneralFunctions" desc="()V" line="195"><counter type="INSTRUCTION" missed="6" covered="164"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="28"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetFactory" desc="()Lorg/wso2/balana/cond/StandardFunctionFactory;" line="263"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConditionFactory" desc="()Lorg/wso2/balana/cond/StandardFunctionFactory;" line="286"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGeneralFactory" desc="()Lorg/wso2/balana/cond/StandardFunctionFactory;" line="309"><counter type="INSTRUCTION" missed="5" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStandardFunctions" desc="(Ljava/lang/String;)Ljava/util/Set;" line="336"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStandardAbstractFunctions" desc="(Ljava/lang/String;)Ljava/util/Map;" line="347"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNewFactoryProxy" desc="()Lorg/wso2/balana/cond/FunctionFactoryProxy;" line="359"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFunction" desc="(Lorg/wso2/balana/cond/Function;)V" line="383"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAbstractFunction" desc="(Lorg/wso2/balana/cond/FunctionProxy;Ljava/net/URI;)V" line="398"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="99"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="85" covered="376"/><counter type="BRANCH" missed="18" covered="8"/><counter type="LINE" missed="22" covered="81"/><counter type="COMPLEXITY" missed="18" covered="8"/><counter type="METHOD" missed="6" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/BasicFunctionFactoryProxy"><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/cond/FunctionFactory;Lorg/wso2/balana/cond/FunctionFactory;Lorg/wso2/balana/cond/FunctionFactory;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetFactory" desc="()Lorg/wso2/balana/cond/FunctionFactory;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConditionFactory" desc="()Lorg/wso2/balana/cond/FunctionFactory;" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGeneralFactory" desc="()Lorg/wso2/balana/cond/FunctionFactory;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/GeneralBagFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="124"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="139"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="148"><counter type="INSTRUCTION" missed="12" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="162"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIsBag" desc="(Ljava/lang/String;)Z" line="171"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumArgs" desc="(Ljava/lang/String;)I" line="180"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReturnType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="189"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReturnsBag" desc="(Ljava/lang/String;)Z" line="198"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCustomReturnType" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="207"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="221"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="236"><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="217"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="41" covered="363"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="9" covered="50"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/GeneralSetFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="120"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="127"><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="141"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="150"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="165"><counter type="INSTRUCTION" missed="2" covered="128"/><counter type="BRANCH" missed="3" covered="10"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="167"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="325"/><counter type="BRANCH" missed="4" covered="15"/><counter type="LINE" missed="4" covered="52"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/DateMathFunction"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="164"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)I" line="172"><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentTypes" desc="(Ljava/lang/String;)[Ljava/lang/String;" line="186"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReturnType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="195"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedIdentifiers" desc="()Ljava/util/Set;" line="208"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="223"><counter type="INSTRUCTION" missed="36" covered="254"/><counter type="BRANCH" missed="16" covered="22"/><counter type="LINE" missed="11" covered="56"/><counter type="COMPLEXITY" missed="16" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="113"><counter type="INSTRUCTION" missed="0" covered="119"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="417"/><counter type="BRANCH" missed="17" covered="27"/><counter type="LINE" missed="12" covered="92"/><counter type="COMPLEXITY" missed="17" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BaseFunctionFactory.java"><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="2"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="2"/><line nr="132" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="2" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="2" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="6" ci="0" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="2" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="3" ci="0" mb="2" cb="0"/><line nr="183" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="6" ci="0" mb="0" cb="0"/><line nr="187" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="7" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="2" cb="0"/><line nr="198" mi="6" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="1" cb="1"/><line nr="231" mi="0" ci="3" mb="0" cb="2"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="14" ci="0" mb="0" cb="0"/><line nr="258" mi="7" ci="0" mb="0" cb="0"/><line nr="276" mi="7" ci="0" mb="0" cb="0"/><line nr="292" mi="6" ci="0" mb="0" cb="0"/><line nr="310" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="1" cb="1"/><line nr="313" mi="0" ci="3" mb="1" cb="1"/><line nr="315" mi="0" ci="6" mb="0" cb="0"/><line nr="316" mi="1" ci="0" mb="0" cb="0"/><line nr="317" mi="13" ci="0" mb="0" cb="0"/><line nr="323" mi="5" ci="0" mb="0" cb="0"/><line nr="327" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="145" covered="114"/><counter type="BRANCH" missed="13" covered="9"/><counter type="LINE" missed="28" covered="31"/><counter type="COMPLEXITY" missed="15" covered="9"/><counter type="METHOD" missed="7" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MatchFunction.java"><line nr="128" mi="0" ci="11" mb="0" cb="0"/><line nr="130" mi="0" ci="11" mb="0" cb="0"/><line nr="132" mi="0" ci="11" mb="0" cb="0"/><line nr="134" mi="0" ci="11" mb="0" cb="0"/><line nr="136" mi="0" ci="11" mb="0" cb="0"/><line nr="138" mi="0" ci="11" mb="0" cb="0"/><line nr="140" mi="0" ci="11" mb="0" cb="0"/><line nr="142" mi="0" ci="11" mb="0" cb="0"/><line nr="144" mi="0" ci="11" mb="0" cb="0"/><line nr="148" mi="0" ci="12" mb="0" cb="0"/><line nr="158" mi="0" ci="10" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="2"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="2"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="2"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="2"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="2"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="2"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="1" cb="1"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="2" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="2" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="12" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="2"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="2"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="2"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="2"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="2"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="2"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="1" cb="1"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="2" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="2" cb="0"/><line nr="211" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="1" cb="1"/><line nr="254" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="6" cb="3"/><line nr="265" mi="0" ci="7" mb="0" cb="0"/><line nr="266" mi="0" ci="7" mb="0" cb="0"/><line nr="268" mi="4" ci="3" mb="3" cb="1"/><line nr="269" mi="3" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="0" ci="7" mb="0" cb="0"/><line nr="279" mi="0" ci="7" mb="0" cb="0"/><line nr="281" mi="0" ci="7" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="0" ci="7" mb="0" cb="0"/><line nr="289" mi="0" ci="7" mb="0" cb="0"/><line nr="291" mi="0" ci="5" mb="0" cb="2"/><line nr="293" mi="0" ci="6" mb="0" cb="0"/><line nr="294" mi="0" ci="4" mb="0" cb="0"/><line nr="295" mi="0" ci="6" mb="1" cb="1"/><line nr="297" mi="6" ci="0" mb="0" cb="0"/><line nr="300" mi="0" ci="8" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="309" mi="7" ci="0" mb="0" cb="0"/><line nr="310" mi="7" ci="0" mb="0" cb="0"/><line nr="312" mi="5" ci="0" mb="0" cb="0"/><line nr="314" mi="1" ci="0" mb="0" cb="0"/><line nr="319" mi="7" ci="0" mb="0" cb="0"/><line nr="320" mi="7" ci="0" mb="0" cb="0"/><line nr="322" mi="5" ci="0" mb="0" cb="0"/><line nr="324" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="7" ci="0" mb="0" cb="0"/><line nr="330" mi="7" ci="0" mb="0" cb="0"/><line nr="332" mi="5" ci="0" mb="0" cb="0"/><line nr="334" mi="1" ci="0" mb="0" cb="0"/><line nr="339" mi="7" ci="0" mb="0" cb="0"/><line nr="340" mi="7" ci="0" mb="0" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="344" mi="1" ci="0" mb="0" cb="0"/><line nr="349" mi="7" ci="0" mb="0" cb="0"/><line nr="350" mi="7" ci="0" mb="0" cb="0"/><line nr="352" mi="5" ci="0" mb="0" cb="0"/><line nr="354" mi="1" ci="0" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="5" mb="1" cb="1"/><line nr="380" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="8" mb="1" cb="1"/><line nr="383" mi="0" ci="6" mb="0" cb="0"/><line nr="388" mi="0" ci="2" mb="0" cb="0"/><line nr="389" mi="0" ci="5" mb="0" cb="0"/><line nr="390" mi="0" ci="3" mb="1" cb="1"/><line nr="391" mi="8" ci="0" mb="0" cb="0"/><line nr="392" mi="6" ci="0" mb="0" cb="0"/><line nr="398" mi="0" ci="2" mb="0" cb="0"/><line nr="399" mi="0" ci="5" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="1" cb="1"/><line nr="401" mi="8" ci="0" mb="0" cb="0"/><line nr="402" mi="6" ci="0" mb="0" cb="0"/><line nr="408" mi="0" ci="2" mb="0" cb="0"/><line nr="409" mi="0" ci="5" mb="0" cb="0"/><line nr="410" mi="0" ci="3" mb="1" cb="1"/><line nr="411" mi="8" ci="0" mb="0" cb="0"/><line nr="412" mi="6" ci="0" mb="0" cb="0"/><line nr="415" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="195" covered="427"/><counter type="BRANCH" missed="26" covered="39"/><counter type="LINE" missed="39" covered="91"/><counter type="COMPLEXITY" missed="21" covered="22"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Condition.java"><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="1" cb="1"/><line nr="148" mi="8" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="1" cb="1"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="1" cb="1"/><line nr="169" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="8" mb="1" cb="1"/><line nr="176" mi="0" ci="6" mb="0" cb="2"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="0" cb="0"/><line nr="262" mi="4" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="264" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="3" ci="0" mb="2" cb="0"/><line nr="277" mi="10" ci="0" mb="0" cb="0"/><line nr="279" mi="11" ci="0" mb="2" cb="0"/><line nr="280" mi="3" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="283" mi="4" ci="0" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><line nr="288" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="124" covered="86"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="31" covered="24"/><counter type="COMPLEXITY" missed="14" covered="6"/><counter type="METHOD" missed="8" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BasicFunctionFactoryProxy.java"><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NumericConvertFunction.java"><line nr="83" mi="0" ci="10" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="1" cb="1"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="12" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="2"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="2"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="1" cb="1"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="1" cb="2"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="8" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="8" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="108"/><counter type="BRANCH" missed="3" covered="10"/><counter type="LINE" missed="2" covered="30"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NOfFunction.java"><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="1" cb="1"/><line nr="81" mi="12" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="1" cb="1"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="1" cb="1"/><line nr="124" mi="13" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="1" cb="1"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="1" cb="1"/><line nr="134" mi="12" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="2"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="1" cb="1"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="2"/><line nr="149" mi="0" ci="8" mb="0" cb="2"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="2"/><line nr="168" mi="0" ci="7" mb="1" cb="1"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="1" cb="1"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="1" cb="1"/><line nr="189" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="8" mb="0" cb="2"/><line nr="193" mi="0" ci="10" mb="1" cb="1"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="63" covered="158"/><counter type="BRANCH" missed="10" covered="20"/><counter type="LINE" missed="10" covered="36"/><counter type="COMPLEXITY" missed="10" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConditionSetFunction.java"><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="2"/><line nr="80" mi="0" ci="11" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="12" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="13" mb="0" cb="0"/><line nr="86" mi="0" ci="13" mb="0" cb="0"/><line nr="88" mi="0" ci="12" mb="0" cb="0"/><line nr="89" mi="0" ci="12" mb="0" cb="0"/><line nr="90" mi="0" ci="12" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="2"/><line nr="94" mi="0" ci="11" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="12" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="13" mb="0" cb="0"/><line nr="100" mi="0" ci="13" mb="0" cb="0"/><line nr="102" mi="0" ci="12" mb="0" cb="0"/><line nr="103" mi="0" ci="12" mb="0" cb="0"/><line nr="104" mi="0" ci="12" mb="0" cb="0"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="8" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="1" cb="1"/><line nr="149" mi="12" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="1" cb="1"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="8" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="1" cb="3"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="1" cb="1"/><line nr="207" mi="0" ci="9" mb="1" cb="1"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="0" ci="8" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="238" mi="1" ci="19" mb="2" cb="2"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="354"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="4" covered="54"/><counter type="COMPLEXITY" missed="8" covered="10"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionFactory.java"><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="0" cb="0"/><line nr="219" mi="6" ci="0" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="2" cb="0"/><line nr="222" mi="12" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="4" ci="0" mb="2" cb="0"/><line nr="252" mi="12" ci="0" mb="0" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="256" mi="8" ci="0" mb="0" cb="0"/><line nr="257" mi="1" ci="0" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="296" mi="1" ci="0" mb="0" cb="0"/><line nr="312" mi="4" ci="0" mb="0" cb="0"/><line nr="313" mi="1" ci="0" mb="0" cb="0"/><line nr="328" mi="3" ci="0" mb="0" cb="0"/><line nr="329" mi="1" ci="0" mb="0" cb="0"/><line nr="345" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="1" ci="0" mb="0" cb="0"/><line nr="361" mi="3" ci="0" mb="0" cb="0"/><line nr="362" mi="1" ci="0" mb="0" cb="0"/><line nr="378" mi="4" ci="0" mb="0" cb="0"/><line nr="379" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="109" covered="41"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="31" covered="13"/><counter type="COMPLEXITY" missed="19" covered="6"/><counter type="METHOD" missed="17" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LogicalFunction.java"><line nr="84" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="2"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="1" cb="1"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="12" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="1" cb="1"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="1" cb="2"/><line nr="142" mi="0" ci="2" mb="0" cb="2"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="2"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="81"/><counter type="BRANCH" missed="3" covered="14"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BagFunction.java"><line nr="96" mi="0" ci="11" mb="0" cb="0"/><line nr="101" mi="0" ci="59" mb="0" cb="0"/><line nr="112" mi="0" ci="11" mb="0" cb="0"/><line nr="119" mi="0" ci="59" mb="0" cb="0"/><line nr="128" mi="0" ci="12" mb="0" cb="0"/><line nr="142" mi="7" ci="0" mb="0" cb="0"/><line nr="157" mi="7" ci="0" mb="0" cb="0"/><line nr="172" mi="6" ci="0" mb="0" cb="0"/><line nr="187" mi="7" ci="0" mb="0" cb="0"/><line nr="206" mi="0" ci="9" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="8" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="232" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="171"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VariableManager.java"><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="13" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="7" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="2" cb="0"/><line nr="125" mi="12" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="2" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="2" cb="0"/><line nr="138" mi="3" ci="0" mb="2" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="8" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="6" ci="0" mb="0" cb="0"/><line nr="160" mi="12" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="2" cb="0"/><line nr="181" mi="6" ci="0" mb="0" cb="0"/><line nr="184" mi="5" ci="0" mb="2" cb="0"/><line nr="187" mi="5" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="197" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="7" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="2" cb="0"/><line nr="218" mi="12" ci="0" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="2" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="3" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="2" cb="0"/><line nr="228" mi="4" ci="0" mb="0" cb="0"/><line nr="231" mi="2" ci="0" mb="2" cb="0"/><line nr="232" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="12" ci="0" mb="0" cb="0"/><line nr="251" mi="7" ci="0" mb="0" cb="0"/><line nr="254" mi="2" ci="0" mb="2" cb="0"/><line nr="255" mi="12" ci="0" mb="0" cb="0"/><line nr="258" mi="3" ci="0" mb="2" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="2" cb="0"/><line nr="265" mi="4" ci="0" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="2" cb="0"/><line nr="269" mi="4" ci="0" mb="0" cb="0"/><line nr="272" mi="12" ci="0" mb="0" cb="0"/><line nr="295" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="3" ci="0" mb="0" cb="0"/><line nr="297" mi="3" ci="0" mb="0" cb="0"/><line nr="298" mi="3" ci="0" mb="0" cb="0"/><line nr="299" mi="3" ci="0" mb="0" cb="0"/><line nr="300" mi="3" ci="0" mb="0" cb="0"/><line nr="301" mi="1" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="0" cb="0"/><line nr="305" mi="3" ci="0" mb="0" cb="0"/><line nr="306" mi="3" ci="0" mb="0" cb="0"/><line nr="307" mi="3" ci="0" mb="0" cb="0"/><line nr="308" mi="3" ci="0" mb="0" cb="0"/><line nr="309" mi="3" ci="0" mb="0" cb="0"/><line nr="310" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="287" covered="18"/><counter type="BRANCH" missed="29" covered="1"/><counter type="LINE" missed="69" covered="6"/><counter type="COMPLEXITY" missed="21" covered="1"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="MapFunction.java"><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="8" mb="1" cb="1"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="2"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="1" cb="1"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="2" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="9" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="1" cb="1"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="1" cb="1"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="2"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="1" cb="1"/><line nr="261" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="10" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="1" cb="1"/><line nr="281" mi="5" ci="0" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="1" cb="1"/><line nr="287" mi="0" ci="7" mb="0" cb="0"/><line nr="288" mi="5" ci="0" mb="2" cb="0"/><line nr="289" mi="6" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="3" ci="0" mb="2" cb="0"/><line nr="292" mi="3" ci="0" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="1" cb="1"/><line nr="296" mi="5" ci="0" mb="0" cb="0"/><line nr="297" mi="0" ci="6" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="1" cb="1"/><line nr="299" mi="5" ci="0" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="6" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="305" mi="0" ci="1" mb="0" cb="0"/><line nr="315" mi="5" ci="0" mb="0" cb="0"/><line nr="324" mi="4" ci="0" mb="0" cb="0"/><line nr="325" mi="3" ci="0" mb="0" cb="0"/><line nr="326" mi="3" ci="0" mb="0" cb="0"/><line nr="336" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="139" covered="186"/><counter type="BRANCH" missed="15" covered="13"/><counter type="LINE" missed="40" covered="51"/><counter type="COMPLEXITY" missed="19" covered="9"/><counter type="METHOD" missed="7" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StandardFunctionFactory.java"><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="1" cb="1"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="1" cb="1"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="1" cb="1"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="1" cb="1"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="1" cb="1"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="7" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="0"/><line nr="215" mi="0" ci="7" mb="0" cb="0"/><line nr="217" mi="0" ci="7" mb="0" cb="0"/><line nr="219" mi="0" ci="7" mb="0" cb="0"/><line nr="221" mi="0" ci="7" mb="0" cb="0"/><line nr="223" mi="0" ci="7" mb="0" cb="0"/><line nr="225" mi="0" ci="7" mb="0" cb="0"/><line nr="227" mi="0" ci="7" mb="0" cb="0"/><line nr="229" mi="0" ci="7" mb="0" cb="0"/><line nr="231" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="7" mb="0" cb="0"/><line nr="235" mi="0" ci="7" mb="0" cb="0"/><line nr="237" mi="0" ci="7" mb="0" cb="0"/><line nr="239" mi="0" ci="7" mb="0" cb="0"/><line nr="241" mi="0" ci="7" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="10" mb="0" cb="0"/><line nr="248" mi="1" ci="0" mb="0" cb="0"/><line nr="250" mi="5" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="2" cb="0"/><line nr="264" mi="4" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="2" cb="0"/><line nr="266" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="2" ci="0" mb="2" cb="0"/><line nr="268" mi="6" ci="0" mb="0" cb="0"/><line nr="270" mi="8" ci="0" mb="0" cb="0"/><line nr="273" mi="2" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="2" cb="0"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><line nr="288" mi="2" ci="0" mb="2" cb="0"/><line nr="289" mi="1" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="2" cb="0"/><line nr="291" mi="6" ci="0" mb="0" cb="0"/><line nr="293" mi="8" ci="0" mb="0" cb="0"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="0" cb="2"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="1" cb="1"/><line nr="312" mi="0" ci="1" mb="0" cb="0"/><line nr="313" mi="0" ci="6" mb="0" cb="0"/><line nr="316" mi="5" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="336" mi="5" ci="0" mb="0" cb="0"/><line nr="347" mi="5" ci="0" mb="0" cb="0"/><line nr="359" mi="0" ci="2" mb="0" cb="0"/><line nr="362" mi="0" ci="6" mb="0" cb="0"/><line nr="365" mi="0" ci="7" mb="0" cb="0"/><line nr="368" mi="0" ci="7" mb="0" cb="0"/><line nr="371" mi="0" ci="7" mb="0" cb="0"/><line nr="383" mi="5" ci="0" mb="0" cb="0"/><line nr="398" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="85" covered="376"/><counter type="BRANCH" missed="18" covered="8"/><counter type="LINE" missed="22" covered="81"/><counter type="COMPLEXITY" missed="18" covered="8"/><counter type="METHOD" missed="6" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Apply.java"><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="2" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="7" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="10" ci="0" mb="0" cb="0"/><line nr="172" mi="10" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="10" ci="0" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="8" mb="0" cb="2"/><line nr="221" mi="0" ci="7" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="2"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="0" cb="0"/><line nr="246" mi="3" ci="0" mb="0" cb="0"/><line nr="259" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="0" ci="7" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="297" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="4" ci="0" mb="0" cb="0"/><line nr="319" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="3" ci="0" mb="0" cb="0"/><line nr="321" mi="3" ci="0" mb="0" cb="0"/><line nr="333" mi="10" ci="0" mb="0" cb="0"/><line nr="335" mi="4" ci="0" mb="0" cb="0"/><line nr="336" mi="3" ci="0" mb="2" cb="0"/><line nr="337" mi="5" ci="0" mb="0" cb="0"/><line nr="338" mi="3" ci="0" mb="0" cb="0"/><line nr="339" mi="1" ci="0" mb="0" cb="0"/><line nr="341" mi="4" ci="0" mb="0" cb="0"/><line nr="342" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="106" covered="76"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="25" covered="17"/><counter type="COMPLEXITY" missed="12" covered="8"/><counter type="METHOD" missed="10" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VariableDefinition.java"><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="2" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="9" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="URLStringCatFunction.java"><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="2" cb="0"/><line nr="85" mi="6" ci="0" mb="2" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="2" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="9" ci="0" mb="2" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="2" cb="0"/><line nr="115" mi="9" ci="0" mb="2" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="2" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="8" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="2" cb="0"/><line nr="143" mi="9" ci="0" mb="0" cb="0"/><line nr="148" mi="11" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="9" ci="0" mb="0" cb="0"/><line nr="155" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="147" covered="7"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="29" covered="2"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConditionBagFunction.java"><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="2"/><line nr="68" mi="0" ci="15" mb="0" cb="0"/><line nr="70" mi="0" ci="16" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="2"/><line nr="74" mi="0" ci="15" mb="0" cb="0"/><line nr="76" mi="0" ci="16" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="14" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="1" cb="1"/><line nr="113" mi="12" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="2"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="136"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExpressionHandler.java"><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="2"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="2"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="2"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="2"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="2"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="2"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="2"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="2"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="2"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="1" cb="1"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="113"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="10" covered="28"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EqualFunction.java"><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="6" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="10" mb="0" cb="0"/><line nr="235" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="1" cb="1"/><line nr="244" mi="12" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="0" cb="2"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="6" mb="0" cb="0"/><line nr="287" mi="0" ci="2" mb="0" cb="2"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="10" mb="0" cb="2"/><line nr="291" mi="0" ci="3" mb="1" cb="1"/><line nr="292" mi="3" ci="0" mb="0" cb="0"/><line nr="296" mi="0" ci="4" mb="0" cb="2"/><line nr="297" mi="0" ci="10" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="182"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="3" covered="40"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VariableReference.java"><line nr="63" mi="9" ci="0" mb="0" cb="0"/><line nr="66" mi="9" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="124" mi="6" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="2" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="2" cb="0"/><line nr="148" mi="6" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="2" cb="0"/><line nr="187" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="2" cb="0"/><line nr="190" mi="6" ci="0" mb="0" cb="0"/><line nr="193" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="2" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="2" cb="0"/><line nr="208" mi="6" ci="0" mb="0" cb="0"/><line nr="211" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="2" ci="0" mb="0" cb="0"/><line nr="244" mi="4" ci="0" mb="0" cb="0"/><line nr="245" mi="3" ci="0" mb="0" cb="0"/><line nr="246" mi="3" ci="0" mb="0" cb="0"/><line nr="256" mi="9" ci="0" mb="0" cb="0"/><line nr="257" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GeneralSetFunction.java"><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="2"/><line nr="73" mi="0" ci="11" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="13" mb="0" cb="0"/><line nr="77" mi="0" ci="13" mb="0" cb="0"/><line nr="79" mi="0" ci="12" mb="0" cb="0"/><line nr="80" mi="0" ci="12" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="2"/><line nr="84" mi="0" ci="11" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="13" mb="0" cb="0"/><line nr="88" mi="0" ci="13" mb="0" cb="0"/><line nr="90" mi="0" ci="12" mb="0" cb="0"/><line nr="91" mi="0" ci="12" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="8" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="1" cb="1"/><line nr="130" mi="12" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="1" cb="1"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="8" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="1" cb="2"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="2"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="1" cb="1"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="14" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="2"/><line nr="211" mi="0" ci="7" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="2"/><line nr="218" mi="0" ci="7" mb="0" cb="0"/><line nr="221" mi="0" ci="14" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="325"/><counter type="BRANCH" missed="4" covered="15"/><counter type="LINE" missed="4" covered="52"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HigherOrderFunction.java"><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="1" cb="1"/><line nr="155" mi="12" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="7" mb="0" cb="4"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="1" cb="1"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="1" cb="1"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="0" cb="0"/><line nr="242" mi="4" ci="0" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="1" cb="1"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="2"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="1" cb="6"/><line nr="274" mi="0" ci="14" mb="0" cb="0"/><line nr="275" mi="0" ci="1" mb="0" cb="0"/><line nr="286" mi="0" ci="13" mb="0" cb="0"/><line nr="287" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="6" mb="0" cb="0"/><line nr="299" mi="0" ci="6" mb="0" cb="0"/><line nr="300" mi="0" ci="6" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="1" cb="1"/><line nr="303" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="8" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="1" cb="1"/><line nr="307" mi="2" ci="0" mb="0" cb="0"/><line nr="309" mi="0" ci="6" mb="1" cb="1"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="311" mi="1" ci="0" mb="0" cb="0"/><line nr="323" mi="0" ci="15" mb="0" cb="0"/><line nr="324" mi="0" ci="1" mb="0" cb="0"/><line nr="335" mi="0" ci="15" mb="0" cb="0"/><line nr="336" mi="0" ci="1" mb="0" cb="0"/><line nr="347" mi="0" ci="6" mb="0" cb="0"/><line nr="348" mi="0" ci="6" mb="0" cb="0"/><line nr="349" mi="0" ci="6" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="2"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="7" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="1" cb="1"/><line nr="356" mi="2" ci="0" mb="0" cb="0"/><line nr="358" mi="0" ci="6" mb="1" cb="1"/><line nr="359" mi="1" ci="0" mb="0" cb="0"/><line nr="360" mi="0" ci="1" mb="0" cb="0"/><line nr="366" mi="0" ci="2" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="4" mb="1" cb="1"/><line nr="381" mi="5" ci="0" mb="0" cb="0"/><line nr="384" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="5" mb="1" cb="1"/><line nr="387" mi="0" ci="7" mb="0" cb="0"/><line nr="388" mi="5" ci="0" mb="2" cb="0"/><line nr="389" mi="6" ci="0" mb="0" cb="0"/><line nr="390" mi="2" ci="0" mb="0" cb="0"/><line nr="391" mi="3" ci="0" mb="2" cb="0"/><line nr="392" mi="3" ci="0" mb="0" cb="0"/><line nr="395" mi="0" ci="2" mb="1" cb="1"/><line nr="396" mi="5" ci="0" mb="0" cb="0"/><line nr="400" mi="0" ci="6" mb="1" cb="1"/><line nr="401" mi="5" ci="0" mb="0" cb="0"/><line nr="405" mi="0" ci="6" mb="0" cb="0"/><line nr="406" mi="0" ci="6" mb="0" cb="0"/><line nr="409" mi="0" ci="6" mb="1" cb="3"/><line nr="410" mi="5" ci="0" mb="0" cb="0"/><line nr="413" mi="0" ci="3" mb="1" cb="1"/><line nr="414" mi="5" ci="0" mb="0" cb="0"/><line nr="418" mi="0" ci="4" mb="0" cb="0"/><line nr="419" mi="0" ci="4" mb="0" cb="0"/><line nr="420" mi="0" ci="4" mb="0" cb="0"/><line nr="421" mi="0" ci="3" mb="0" cb="0"/><line nr="422" mi="0" ci="1" mb="0" cb="0"/><line nr="434" mi="5" ci="0" mb="0" cb="0"/><line nr="443" mi="0" ci="9" mb="0" cb="0"/><line nr="451" mi="0" ci="9" mb="0" cb="0"/><line nr="460" mi="0" ci="3" mb="0" cb="0"/><line nr="461" mi="0" ci="3" mb="0" cb="0"/><line nr="463" mi="0" ci="3" mb="0" cb="2"/><line nr="464" mi="0" ci="4" mb="0" cb="0"/><line nr="466" mi="0" ci="2" mb="0" cb="2"/><line nr="467" mi="0" ci="4" mb="0" cb="0"/><line nr="468" mi="0" ci="8" mb="0" cb="0"/><line nr="470" mi="0" ci="7" mb="0" cb="0"/><line nr="471" mi="0" ci="4" mb="0" cb="0"/><line nr="474" mi="0" ci="5" mb="0" cb="0"/><line nr="476" mi="0" ci="3" mb="1" cb="1"/><line nr="477" mi="2" ci="0" mb="0" cb="0"/><line nr="479" mi="0" ci="5" mb="0" cb="0"/><line nr="480" mi="0" ci="4" mb="0" cb="2"/><line nr="481" mi="0" ci="2" mb="0" cb="0"/><line nr="482" mi="0" ci="1" mb="0" cb="0"/><line nr="484" mi="0" ci="1" mb="0" cb="0"/><line nr="486" mi="0" ci="5" mb="0" cb="0"/><line nr="494" mi="0" ci="8" mb="0" cb="0"/><line nr="502" mi="0" ci="8" mb="0" cb="0"/><line nr="510" mi="0" ci="3" mb="0" cb="0"/><line nr="512" mi="0" ci="3" mb="0" cb="2"/><line nr="513" mi="0" ci="5" mb="0" cb="0"/><line nr="514" mi="0" ci="8" mb="0" cb="0"/><line nr="516" mi="0" ci="3" mb="1" cb="1"/><line nr="517" mi="2" ci="0" mb="0" cb="0"/><line nr="519" mi="0" ci="6" mb="1" cb="1"/><line nr="520" mi="2" ci="0" mb="0" cb="0"/><line nr="521" mi="0" ci="1" mb="0" cb="0"/><line nr="523" mi="0" ci="5" mb="0" cb="0"/><line nr="532" mi="4" ci="0" mb="0" cb="0"/><line nr="533" mi="3" ci="0" mb="0" cb="0"/><line nr="534" mi="3" ci="0" mb="0" cb="0"/><line nr="544" mi="10" ci="0" mb="0" cb="0"/><line nr="545" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="123" covered="504"/><counter type="BRANCH" missed="23" covered="42"/><counter type="LINE" missed="34" covered="114"/><counter type="COMPLEXITY" missed="25" covered="28"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimeInRangeFunction.java"><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="2" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="9" ci="0" mb="0" cb="0"/><line nr="108" mi="9" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="2" cb="0"/><line nr="113" mi="9" ci="0" mb="2" cb="0"/><line nr="126" mi="4" ci="0" mb="2" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="136" mi="13" ci="0" mb="4" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="2" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="2" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="2" cb="0"/><line nr="166" mi="9" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="2" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="2" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="146" covered="10"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="32" covered="2"/><counter type="COMPLEXITY" missed="14" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SubtractFunction.java"><line nr="82" mi="0" ci="10" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="1" cb="1"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="12" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="1" cb="1"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="1" cb="2"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="8" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="8" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="114"/><counter type="BRANCH" missed="3" covered="8"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComparisonFunction.java"><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="245" mi="0" ci="6" mb="0" cb="0"/><line nr="246" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="6" mb="0" cb="0"/><line nr="248" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="0" ci="6" mb="0" cb="0"/><line nr="250" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="0" ci="6" mb="0" cb="0"/><line nr="252" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="0" cb="0"/><line nr="254" mi="0" ci="6" mb="0" cb="0"/><line nr="255" mi="0" ci="6" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="6" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="287" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="11" mb="0" cb="0"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="308" mi="0" ci="2" mb="1" cb="1"/><line nr="309" mi="12" ci="0" mb="0" cb="0"/><line nr="311" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="6" mb="0" cb="0"/><line nr="345" mi="0" ci="2" mb="1" cb="1"/><line nr="346" mi="2" ci="0" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="1" cb="24"/><line nr="355" mi="0" ci="7" mb="0" cb="0"/><line nr="356" mi="0" ci="7" mb="0" cb="0"/><line nr="358" mi="0" ci="8" mb="0" cb="2"/><line nr="360" mi="0" ci="1" mb="0" cb="0"/><line nr="364" mi="0" ci="7" mb="0" cb="0"/><line nr="365" mi="0" ci="7" mb="0" cb="0"/><line nr="367" mi="0" ci="8" mb="0" cb="2"/><line nr="369" mi="0" ci="1" mb="0" cb="0"/><line nr="373" mi="0" ci="7" mb="0" cb="0"/><line nr="374" mi="0" ci="7" mb="0" cb="0"/><line nr="376" mi="1" ci="7" mb="1" cb="1"/><line nr="378" mi="0" ci="1" mb="0" cb="0"/><line nr="382" mi="0" ci="7" mb="0" cb="0"/><line nr="383" mi="0" ci="7" mb="0" cb="0"/><line nr="385" mi="0" ci="8" mb="0" cb="2"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><line nr="391" mi="0" ci="7" mb="0" cb="0"/><line nr="392" mi="0" ci="7" mb="0" cb="0"/><line nr="394" mi="0" ci="9" mb="0" cb="2"/><line nr="396" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="7" mb="0" cb="0"/><line nr="401" mi="0" ci="7" mb="0" cb="0"/><line nr="403" mi="0" ci="9" mb="0" cb="2"/><line nr="405" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="0" ci="7" mb="0" cb="0"/><line nr="410" mi="0" ci="7" mb="0" cb="0"/><line nr="412" mi="1" ci="8" mb="1" cb="1"/><line nr="414" mi="0" ci="1" mb="0" cb="0"/><line nr="418" mi="0" ci="7" mb="0" cb="0"/><line nr="419" mi="0" ci="7" mb="0" cb="0"/><line nr="421" mi="1" ci="8" mb="1" cb="1"/><line nr="423" mi="0" ci="1" mb="0" cb="0"/><line nr="427" mi="0" ci="7" mb="0" cb="0"/><line nr="428" mi="0" ci="7" mb="0" cb="0"/><line nr="430" mi="0" ci="8" mb="0" cb="2"/><line nr="432" mi="0" ci="1" mb="0" cb="0"/><line nr="436" mi="0" ci="7" mb="0" cb="0"/><line nr="437" mi="0" ci="7" mb="0" cb="0"/><line nr="439" mi="0" ci="8" mb="0" cb="2"/><line nr="441" mi="0" ci="1" mb="0" cb="0"/><line nr="445" mi="0" ci="7" mb="0" cb="0"/><line nr="446" mi="0" ci="7" mb="0" cb="0"/><line nr="448" mi="1" ci="7" mb="1" cb="1"/><line nr="450" mi="0" ci="1" mb="0" cb="0"/><line nr="454" mi="0" ci="7" mb="0" cb="0"/><line nr="455" mi="0" ci="7" mb="0" cb="0"/><line nr="457" mi="1" ci="7" mb="1" cb="1"/><line nr="459" mi="0" ci="1" mb="0" cb="0"/><line nr="463" mi="0" ci="6" mb="0" cb="0"/><line nr="464" mi="0" ci="6" mb="0" cb="0"/><line nr="466" mi="0" ci="14" mb="0" cb="2"/><line nr="467" mi="0" ci="1" mb="0" cb="0"/><line nr="469" mi="0" ci="1" mb="0" cb="0"/><line nr="473" mi="0" ci="6" mb="0" cb="0"/><line nr="474" mi="0" ci="6" mb="0" cb="0"/><line nr="476" mi="0" ci="14" mb="0" cb="2"/><line nr="477" mi="0" ci="1" mb="0" cb="0"/><line nr="479" mi="0" ci="1" mb="0" cb="0"/><line nr="483" mi="0" ci="6" mb="0" cb="0"/><line nr="484" mi="0" ci="6" mb="0" cb="0"/><line nr="486" mi="1" ci="13" mb="1" cb="1"/><line nr="487" mi="0" ci="1" mb="0" cb="0"/><line nr="489" mi="0" ci="1" mb="0" cb="0"/><line nr="493" mi="0" ci="6" mb="0" cb="0"/><line nr="494" mi="0" ci="6" mb="0" cb="0"/><line nr="496" mi="1" ci="13" mb="1" cb="1"/><line nr="497" mi="0" ci="1" mb="0" cb="0"/><line nr="499" mi="0" ci="1" mb="0" cb="0"/><line nr="503" mi="0" ci="6" mb="0" cb="0"/><line nr="504" mi="0" ci="6" mb="0" cb="0"/><line nr="506" mi="0" ci="14" mb="0" cb="2"/><line nr="507" mi="0" ci="1" mb="0" cb="0"/><line nr="509" mi="0" ci="1" mb="0" cb="0"/><line nr="513" mi="0" ci="6" mb="0" cb="0"/><line nr="514" mi="0" ci="6" mb="0" cb="0"/><line nr="516" mi="0" ci="14" mb="0" cb="2"/><line nr="517" mi="0" ci="1" mb="0" cb="0"/><line nr="519" mi="0" ci="1" mb="0" cb="0"/><line nr="523" mi="0" ci="6" mb="0" cb="0"/><line nr="524" mi="0" ci="6" mb="0" cb="0"/><line nr="526" mi="1" ci="13" mb="1" cb="1"/><line nr="527" mi="0" ci="1" mb="0" cb="0"/><line nr="529" mi="0" ci="1" mb="0" cb="0"/><line nr="533" mi="0" ci="6" mb="0" cb="0"/><line nr="534" mi="0" ci="6" mb="0" cb="0"/><line nr="536" mi="1" ci="13" mb="1" cb="1"/><line nr="537" mi="0" ci="1" mb="0" cb="0"/><line nr="539" mi="0" ci="1" mb="0" cb="0"/><line nr="543" mi="0" ci="7" mb="0" cb="0"/><line nr="544" mi="0" ci="7" mb="0" cb="0"/><line nr="546" mi="0" ci="8" mb="0" cb="2"/><line nr="548" mi="0" ci="1" mb="0" cb="0"/><line nr="552" mi="0" ci="7" mb="0" cb="0"/><line nr="553" mi="0" ci="7" mb="0" cb="0"/><line nr="555" mi="0" ci="8" mb="0" cb="2"/><line nr="557" mi="0" ci="1" mb="0" cb="0"/><line nr="561" mi="0" ci="7" mb="0" cb="0"/><line nr="562" mi="0" ci="7" mb="0" cb="0"/><line nr="564" mi="1" ci="7" mb="1" cb="1"/><line nr="566" mi="0" ci="1" mb="0" cb="0"/><line nr="570" mi="0" ci="7" mb="0" cb="0"/><line nr="571" mi="0" ci="7" mb="0" cb="0"/><line nr="573" mi="1" ci="7" mb="1" cb="1"/><line nr="575" mi="0" ci="1" mb="0" cb="0"/><line nr="581" mi="0" ci="3" mb="0" cb="0"/><line nr="591" mi="0" ci="4" mb="0" cb="2"/><line nr="594" mi="0" ci="4" mb="1" cb="1"/><line nr="595" mi="0" ci="2" mb="0" cb="0"/><line nr="599" mi="6" ci="0" mb="0" cb="0"/><line nr="603" mi="0" ci="3" mb="1" cb="1"/><line nr="605" mi="3" ci="0" mb="2" cb="0"/><line nr="607" mi="2" ci="0" mb="0" cb="0"/><line nr="610" mi="2" ci="0" mb="0" cb="0"/><line nr="615" mi="0" ci="3" mb="1" cb="1"/><line nr="617" mi="2" ci="0" mb="0" cb="0"/><line nr="624" mi="0" ci="8" mb="0" cb="2"/><line nr="633" mi="0" ci="4" mb="0" cb="0"/><line nr="636" mi="0" ci="2" mb="0" cb="2"/><line nr="637" mi="0" ci="2" mb="0" cb="0"/><line nr="640" mi="0" ci="3" mb="1" cb="1"/><line nr="641" mi="0" ci="2" mb="0" cb="0"/><line nr="645" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="47" covered="946"/><counter type="BRANCH" missed="22" covered="73"/><counter type="LINE" missed="8" covered="183"/><counter type="COMPLEXITY" missed="20" covered="47"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SetFunction.java"><line nr="105" mi="0" ci="59" mb="0" cb="0"/><line nr="116" mi="0" ci="11" mb="0" cb="0"/><line nr="124" mi="0" ci="59" mb="0" cb="0"/><line nr="133" mi="0" ci="12" mb="0" cb="0"/><line nr="147" mi="7" ci="0" mb="0" cb="0"/><line nr="162" mi="7" ci="0" mb="0" cb="0"/><line nr="177" mi="7" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="205" mi="7" ci="0" mb="0" cb="0"/><line nr="221" mi="0" ci="9" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="232" mi="4" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="151"/><counter type="LINE" missed="9" covered="6"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DivideFunction.java"><line nr="82" mi="0" ci="10" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="1" cb="1"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="12" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="1" cb="1"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="1" cb="2"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="1" cb="1"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="1" cb="1"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="8" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="122"/><counter type="BRANCH" missed="5" covered="10"/><counter type="LINE" missed="6" covered="31"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringFunction.java"><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="2" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="8" ci="0" mb="2" cb="0"/><line nr="110" mi="9" ci="0" mb="0" cb="0"/><line nr="112" mi="9" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="56" covered="21"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModFunction.java"><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="1" cb="1"/><line nr="75" mi="12" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="1" cb="1"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="58"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateMathFunction.java"><line nr="113" mi="0" ci="11" mb="0" cb="0"/><line nr="115" mi="0" ci="11" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="0"/><line nr="121" mi="0" ci="11" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="9" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="1" cb="1"/><line nr="175" mi="12" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="0" cb="2"/><line nr="196" mi="0" ci="2" mb="0" cb="2"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="1" cb="1"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="1" cb="3"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="2"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="1" cb="1"/><line nr="245" mi="3" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="8" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="1" cb="1"/><line nr="250" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="4" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="1" cb="1"/><line nr="254" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="4" ci="0" mb="0" cb="0"/><line nr="257" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="9" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="1" cb="1"/><line nr="272" mi="3" ci="0" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="1" cb="1"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="6" mb="0" cb="0"/><line nr="280" mi="0" ci="6" mb="0" cb="0"/><line nr="281" mi="0" ci="8" mb="2" cb="2"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="0" ci="8" mb="2" cb="2"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="287" mi="0" ci="5" mb="0" cb="0"/><line nr="289" mi="0" ci="7" mb="0" cb="0"/><line nr="290" mi="0" ci="5" mb="0" cb="0"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="4" mb="0" cb="2"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="1" cb="1"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="6" mb="0" cb="0"/><line nr="310" mi="0" ci="6" mb="0" cb="0"/><line nr="311" mi="0" ci="8" mb="2" cb="2"/><line nr="312" mi="3" ci="0" mb="0" cb="0"/><line nr="313" mi="0" ci="8" mb="2" cb="2"/><line nr="314" mi="3" ci="0" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="0" cb="0"/><line nr="317" mi="0" ci="5" mb="0" cb="0"/><line nr="319" mi="0" ci="7" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="417"/><counter type="BRANCH" missed="17" covered="27"/><counter type="LINE" missed="12" covered="92"/><counter type="COMPLEXITY" missed="17" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GeneralBagFunction.java"><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="0" ci="20" mb="0" cb="0"/><line nr="82" mi="0" ci="20" mb="0" cb="0"/><line nr="85" mi="0" ci="20" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="11" mb="0" cb="0"/><line nr="93" mi="0" ci="20" mb="0" cb="0"/><line nr="96" mi="0" ci="20" mb="0" cb="0"/><line nr="99" mi="0" ci="20" mb="0" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="13" mb="0" cb="0"/><line nr="107" mi="0" ci="13" mb="0" cb="0"/><line nr="109" mi="0" ci="13" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="9" ci="0" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="1" cb="1"/><line nr="151" mi="12" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="171" mi="0" ci="7" mb="0" cb="0"/><line nr="180" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="7" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="7" ci="0" mb="0" cb="0"/><line nr="209" mi="2" ci="0" mb="2" cb="0"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="2"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="1" cb="3"/><line nr="249" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="2"/><line nr="252" mi="0" ci="11" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="6" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="0" ci="6" mb="0" cb="0"/><line nr="264" mi="0" ci="7" mb="0" cb="0"/><line nr="265" mi="0" ci="1" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="7" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="384"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="9" covered="58"/><counter type="COMPLEXITY" missed="5" covered="17"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="NotFunction.java"><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="1" cb="1"/><line nr="76" mi="12" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="1" cb="1"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="2"/><counter type="INSTRUCTION" missed="14" covered="49"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultiplyFunction.java"><line nr="82" mi="0" ci="10" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="1" cb="1"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="12" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="1" cb="1"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="1" cb="2"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="8" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="8" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="114"/><counter type="BRANCH" missed="3" covered="8"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FloorFunction.java"><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="1" cb="1"/><line nr="76" mi="12" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="1" cb="1"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="51"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RoundFunction.java"><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="1" cb="1"/><line nr="77" mi="12" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="1" cb="1"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="59"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IPInRangeFunction.java"><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="1" cb="1"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="2"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="13" mb="0" cb="4"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="16" mb="0" cb="2"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="100"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EvaluationResult.java"><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="2"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="2"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="2"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="57"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="3" covered="22"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MapFunctionProxy.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AddFunction.java"><line nr="82" mi="0" ci="11" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="1" cb="1"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="12" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="1" cb="1"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="1" cb="2"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="2"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="2"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="123"/><counter type="BRANCH" missed="3" covered="12"/><counter type="LINE" missed="2" covered="31"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringNormalizeFunction.java"><line nr="82" mi="0" ci="10" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="1" cb="1"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="12" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="1" cb="1"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="1" cb="2"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="8" mb="1" cb="3"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="1" cb="3"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="8" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="121"/><counter type="BRANCH" missed="5" covered="12"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionBase.java"><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="6" mb="0" cb="0"/><line nr="217" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="5" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="0" ci="6" mb="0" cb="0"/><line nr="258" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="3" ci="0" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="2"/><line nr="291" mi="0" ci="7" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="6" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="3" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="2"/><line nr="321" mi="0" ci="5" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="3" mb="0" cb="2"/><line nr="326" mi="0" ci="2" mb="0" cb="0"/><line nr="329" mi="0" ci="6" mb="0" cb="0"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="333" mi="0" ci="2" mb="0" cb="0"/><line nr="347" mi="0" ci="3" mb="0" cb="2"/><line nr="349" mi="0" ci="4" mb="0" cb="2"/><line nr="350" mi="0" ci="5" mb="1" cb="1"/><line nr="351" mi="13" ci="0" mb="0" cb="0"/><line nr="354" mi="0" ci="5" mb="1" cb="1"/><line nr="355" mi="13" ci="0" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="2"/><line nr="361" mi="0" ci="5" mb="0" cb="0"/><line nr="363" mi="0" ci="8" mb="1" cb="1"/><line nr="364" mi="0" ci="4" mb="1" cb="1"/><line nr="365" mi="5" ci="0" mb="0" cb="0"/><line nr="366" mi="0" ci="1" mb="0" cb="0"/><line nr="367" mi="0" ci="1" mb="0" cb="0"/><line nr="369" mi="0" ci="6" mb="1" cb="1"/><line nr="370" mi="13" ci="0" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="2"/><line nr="376" mi="0" ci="5" mb="0" cb="0"/><line nr="378" mi="0" ci="10" mb="1" cb="1"/><line nr="379" mi="0" ci="6" mb="1" cb="1"/><line nr="380" mi="5" ci="0" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="1" mb="0" cb="0"/><line nr="385" mi="0" ci="1" mb="0" cb="0"/><line nr="398" mi="0" ci="3" mb="0" cb="2"/><line nr="400" mi="0" ci="3" mb="1" cb="1"/><line nr="401" mi="13" ci="0" mb="0" cb="0"/><line nr="404" mi="0" ci="4" mb="1" cb="1"/><line nr="405" mi="0" ci="5" mb="1" cb="1"/><line nr="406" mi="13" ci="0" mb="0" cb="0"/><line nr="409" mi="5" ci="0" mb="2" cb="0"/><line nr="410" mi="13" ci="0" mb="0" cb="0"/><line nr="414" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="0" cb="2"/><line nr="416" mi="0" ci="5" mb="0" cb="0"/><line nr="418" mi="0" ci="7" mb="1" cb="1"/><line nr="419" mi="5" ci="0" mb="0" cb="0"/><line nr="420" mi="0" ci="1" mb="0" cb="0"/><line nr="421" mi="0" ci="1" mb="0" cb="0"/><line nr="423" mi="0" ci="6" mb="1" cb="1"/><line nr="424" mi="13" ci="0" mb="0" cb="0"/><line nr="427" mi="0" ci="3" mb="0" cb="0"/><line nr="428" mi="0" ci="2" mb="0" cb="0"/><line nr="429" mi="0" ci="3" mb="0" cb="2"/><line nr="430" mi="0" ci="5" mb="0" cb="0"/><line nr="432" mi="0" ci="14" mb="2" cb="2"/><line nr="433" mi="5" ci="0" mb="0" cb="0"/><line nr="435" mi="0" ci="1" mb="0" cb="0"/><line nr="436" mi="0" ci="1" mb="0" cb="0"/><line nr="438" mi="0" ci="1" mb="0" cb="0"/><line nr="446" mi="4" ci="0" mb="0" cb="0"/><line nr="447" mi="3" ci="0" mb="0" cb="0"/><line nr="448" mi="3" ci="0" mb="0" cb="0"/><line nr="458" mi="9" ci="0" mb="0" cb="0"/><line nr="459" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="151" covered="306"/><counter type="BRANCH" missed="16" covered="34"/><counter type="LINE" missed="23" covered="87"/><counter type="COMPLEXITY" missed="19" covered="24"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionTypeException.java"><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="4"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbsFunction.java"><line nr="82" mi="0" ci="10" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="1" cb="1"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="12" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="1" cb="1"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="1" cb="2"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="100"/><counter type="BRANCH" missed="3" covered="8"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2669" covered="6797"/><counter type="BRANCH" missed="319" covered="459"/><counter type="LINE" missed="593" covered="1435"/><counter type="COMPLEXITY" missed="363" covered="377"/><counter type="METHOD" missed="118" covered="208"/><counter type="CLASS" missed="3" covered="43"/></package><package name="org/wso2/balana"><class name="org/wso2/balana/DefaultNamespaceContext"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNamespaceURI" desc="(Ljava/lang/String;)Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrefix" desc="(Ljava/lang/String;)Ljava/lang/String;" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrefixes" desc="(Ljava/lang/String;)Ljava/util/Iterator;" line="52"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/XACMLConstants"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/AbstractObligation"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFulfillOn" desc="()I" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/net/URI;" line="66"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/DOMHelper"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLocalName" desc="(Lorg/w3c/dom/Node;)Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/TargetFactory"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTarget" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/AbstractTarget;" line="42"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFactory" desc="()Lorg/wso2/balana/TargetFactory;" line="57"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="32"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/MatchResult"><method name="getSubjectPolicyValue" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSubjectPolicyValue" desc="(Ljava/lang/String;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResourcePolicyValue" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setResourcePolicyValue" desc="(Ljava/lang/String;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActionPolicyValue" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setActionPolicyValue" desc="(Ljava/lang/String;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnvPolicyValue" desc="()Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEnvPolicyValue" desc="(Ljava/lang/String;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPolicyValue" desc="()Ljava/lang/String;" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPolicyValue" desc="(Ljava/lang/String;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="121"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILorg/wso2/balana/ctx/Status;)V" line="132"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()I" line="148"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStatus" desc="()Lorg/wso2/balana/ctx/Status;" line="157"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="51"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="5" covered="20"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ObligationFactory"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObligation" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/AbstractObligation;" line="37"><counter type="INSTRUCTION" missed="3" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFactory" desc="()Lorg/wso2/balana/ObligationFactory;" line="53"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="33"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/AbstractPolicy"><method name="&lt;init&gt;" desc="()V" line="114"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/combine/CombiningAlgorithm;Ljava/lang/String;Lorg/wso2/balana/AbstractTarget;)V" line="130"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/combine/CombiningAlgorithm;Ljava/lang/String;Lorg/wso2/balana/AbstractTarget;Ljava/lang/String;)V" line="146"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/combine/CombiningAlgorithm;Ljava/lang/String;Lorg/wso2/balana/AbstractTarget;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;Ljava/util/List;)V" line="166"><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;Ljava/lang/String;)V" line="217"><counter type="INSTRUCTION" missed="43" covered="204"/><counter type="BRANCH" missed="5" covered="23"/><counter type="LINE" missed="7" covered="43"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubjectPolicyValue" desc="()Ljava/lang/String;" line="302"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSubjectPolicyValue" desc="(Ljava/lang/String;)V" line="306"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResourcePolicyValue" desc="()Ljava/lang/String;" line="310"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setResourcePolicyValue" desc="(Ljava/lang/String;)V" line="314"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActionPolicyValue" desc="()Ljava/lang/String;" line="318"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setActionPolicyValue" desc="(Ljava/lang/String;)V" line="322"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEnvPolicyValue" desc="()Ljava/lang/String;" line="326"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEnvPolicyValue" desc="(Ljava/lang/String;)V" line="330"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseObligationExpressions" desc="(Lorg/w3c/dom/Node;)V" line="340"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseAdviceExpressions" desc="(Lorg/w3c/dom/Node;)V" line="360"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleDefaults" desc="(Lorg/w3c/dom/Node;)V" line="377"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleParameters" desc="(Lorg/w3c/dom/Node;)V" line="394"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="()Ljava/net/URI;" line="410"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVersion" desc="()Ljava/lang/String;" line="420"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCombiningAlg" desc="()Lorg/wso2/balana/combine/CombiningAlgorithm;" line="429"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCombiningParameters" desc="()Ljava/util/List;" line="439"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="448"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTarget" desc="()Lorg/wso2/balana/AbstractTarget;" line="457"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultVersion" desc="()Ljava/lang/String;" line="466"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="477"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildElements" desc="()Ljava/util/List;" line="488"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObligationExpressions" desc="()Ljava/util/Set;" line="497"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAdviceExpressions" desc="()Ljava/util/Set;" line="506"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaData" desc="()Lorg/wso2/balana/PolicyMetaData;" line="513"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/MatchResult;" line="527"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setChildren" desc="(Ljava/util/List;)V" line="542"><counter type="INSTRUCTION" missed="6" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/ctx/AbstractResult;" line="570"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processObligationAndAdvices" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;ILorg/wso2/balana/ctx/AbstractResult;)V" line="601"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodeCommonElements" desc="(Ljava/lang/StringBuilder;)V" line="631"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="108"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="342" covered="461"/><counter type="BRANCH" missed="43" covered="61"/><counter type="LINE" missed="88" covered="100"/><counter type="COMPLEXITY" missed="50" covered="37"/><counter type="METHOD" missed="24" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/PolicyMetaData"><method name="&lt;init&gt;" desc="()V" line="91"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(II)V" line="101"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="115"><counter type="INSTRUCTION" missed="20" covered="34"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXACMLVersion" desc="()I" line="146"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXACMLIdentifier" desc="()Ljava/lang/String;" line="155"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXPathVersion" desc="()I" line="164"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXPathIdentifier" desc="()Ljava/lang/String;" line="174"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="73"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="11" covered="15"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/PDP"><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/PDPConfig;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/String;)Ljava/lang/String;" line="118"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/AbstractRequestCtx;)Lorg/wso2/balana/ctx/ResponseCtx;" line="151"><counter type="INSTRUCTION" missed="37" covered="12"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/ctx/ResponseCtx;" line="183"><counter type="INSTRUCTION" missed="56" covered="64"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="12" covered="15"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateContext" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/ctx/AbstractResult;" line="239"><counter type="INSTRUCTION" missed="20" covered="29"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateReturnResponseCtx" desc="(Ljava/lang/String;)Lorg/wso2/balana/ctx/ResponseCtx;" line="283"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Ljava/io/InputStream;)Ljava/io/OutputStream;" line="315"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processPolicyReferences" desc="(Lorg/wso2/balana/AbstractPolicy;Ljava/util/Set;)V" line="353"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="341" covered="128"/><counter type="BRANCH" missed="20" covered="18"/><counter type="LINE" missed="76" covered="33"/><counter type="COMPLEXITY" missed="17" covered="11"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/PolicySet"><method name="&lt;init&gt;" desc="(Ljava/net/URI;Lorg/wso2/balana/combine/PolicyCombiningAlgorithm;Lorg/wso2/balana/AbstractTarget;)V" line="73"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Lorg/wso2/balana/combine/PolicyCombiningAlgorithm;Lorg/wso2/balana/AbstractTarget;Ljava/util/List;)V" line="88"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/combine/PolicyCombiningAlgorithm;Ljava/lang/String;Lorg/wso2/balana/AbstractTarget;Ljava/util/List;)V" line="108"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/combine/PolicyCombiningAlgorithm;Ljava/lang/String;Lorg/wso2/balana/AbstractTarget;Ljava/util/List;Ljava/lang/String;)V" line="129"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/combine/PolicyCombiningAlgorithm;Ljava/lang/String;Lorg/wso2/balana/AbstractTarget;Ljava/util/List;Ljava/lang/String;Ljava/util/Set;)V" line="152"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/combine/PolicyCombiningAlgorithm;Ljava/lang/String;Lorg/wso2/balana/AbstractTarget;Ljava/util/List;Ljava/lang/String;Ljava/util/Set;Ljava/util/List;)V" line="200"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/finder/PolicyFinder;)V" line="228"><counter type="INSTRUCTION" missed="76" covered="115"/><counter type="BRANCH" missed="12" covered="14"/><counter type="LINE" missed="14" covered="29"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parameterHelper" desc="(Ljava/util/HashMap;Lorg/w3c/dom/Node;Ljava/lang/String;)V" line="311"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseParameters" desc="(Ljava/util/List;Lorg/w3c/dom/Node;)V" line="330"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/PolicySet;" line="351"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/finder/PolicyFinder;)Lorg/wso2/balana/PolicySet;" line="366"><counter type="INSTRUCTION" missed="13" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="380"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="392"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="365" covered="126"/><counter type="BRANCH" missed="35" covered="15"/><counter type="LINE" missed="82" covered="31"/><counter type="COMPLEXITY" missed="33" covered="5"/><counter type="METHOD" missed="11" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/Indenter"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="74"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="in" desc="()V" line="83"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="out" desc="()V" line="90"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeString" desc="()Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/ParsingException"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/TargetMatch"><method name="&lt;init&gt;" desc="(ILorg/wso2/balana/cond/Function;Lorg/wso2/balana/cond/Evaluatable;Lorg/wso2/balana/attr/AttributeValue;)V" line="124"><counter type="INSTRUCTION" missed="8" covered="23"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/cond/Function;Lorg/wso2/balana/cond/Evaluatable;Lorg/wso2/balana/attr/AttributeValue;)V" line="148"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;Ljava/lang/String;)Lorg/wso2/balana/TargetMatch;" line="178"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/TargetMatch;" line="191"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;ILorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/TargetMatch;" line="211"><counter type="INSTRUCTION" missed="40" covered="133"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="12" covered="30"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()I" line="282"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatchFunction" desc="()Lorg/wso2/balana/cond/Function;" line="291"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatchValue" desc="()Lorg/wso2/balana/attr/AttributeValue;" line="300"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatchEvaluatable" desc="()Lorg/wso2/balana/cond/Evaluatable;" line="310"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="match" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/MatchResult;" line="323"><counter type="INSTRUCTION" missed="13" covered="85"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="4" covered="22"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateMatch" desc="(Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/MatchResult;" line="395"><counter type="INSTRUCTION" missed="7" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="418"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="96"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="161" covered="305"/><counter type="BRANCH" missed="16" covered="36"/><counter type="LINE" missed="37" covered="72"/><counter type="COMPLEXITY" missed="16" covered="23"/><counter type="METHOD" missed="6" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ConfigurationStore$AFProxy"><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/attr/AttributeFactory;)V" line="968"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFactory" desc="()Lorg/wso2/balana/attr/AttributeFactory;" line="973"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/VersionConstraints"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="70"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVersionConstraint" desc="()Ljava/lang/String;" line="83"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEarliestConstraint" desc="()Ljava/lang/String;" line="93"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLatestConstraint" desc="()Ljava/lang/String;" line="103"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="meetsConstraint" desc="(Ljava/lang/String;)Z" line="114"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="127"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEarlier" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="139"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLater" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="151"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareHelper" desc="(Ljava/lang/String;Ljava/lang/String;I)Z" line="159"><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="150" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/AbstractTarget"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/Policy"><method name="&lt;init&gt;" desc="(Ljava/net/URI;Lorg/wso2/balana/combine/RuleCombiningAlgorithm;Lorg/wso2/balana/AbstractTarget;)V" line="78"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Lorg/wso2/balana/combine/RuleCombiningAlgorithm;Lorg/wso2/balana/AbstractTarget;Ljava/util/List;)V" line="93"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/combine/RuleCombiningAlgorithm;Ljava/lang/String;Lorg/wso2/balana/AbstractTarget;Ljava/util/List;)V" line="113"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/combine/RuleCombiningAlgorithm;Ljava/lang/String;Lorg/wso2/balana/AbstractTarget;Ljava/lang/String;Ljava/util/List;)V" line="134"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/combine/RuleCombiningAlgorithm;Ljava/lang/String;Lorg/wso2/balana/AbstractTarget;Ljava/lang/String;Ljava/util/List;Ljava/util/Set;)V" line="157"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/combine/RuleCombiningAlgorithm;Ljava/lang/String;Lorg/wso2/balana/AbstractTarget;Ljava/lang/String;Ljava/util/List;Ljava/util/Set;Ljava/util/Set;)V" line="184"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/combine/RuleCombiningAlgorithm;Ljava/lang/String;Lorg/wso2/balana/AbstractTarget;Ljava/lang/String;Ljava/util/List;Ljava/util/Set;Ljava/util/Set;Ljava/util/List;)V" line="236"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/w3c/dom/Node;)V" line="267"><counter type="INSTRUCTION" missed="79" covered="130"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="15" covered="28"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseParameters" desc="(Ljava/util/List;Lorg/w3c/dom/Node;)V" line="357"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/Policy;" line="377"><counter type="INSTRUCTION" missed="13" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableDefinitions" desc="()Ljava/util/Set;" line="391"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="400"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="413"><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="379" covered="140"/><counter type="BRANCH" missed="33" covered="13"/><counter type="LINE" missed="79" covered="30"/><counter type="COMPLEXITY" missed="30" covered="6"/><counter type="METHOD" missed="11" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ConfigurationStore$CAFProxy"><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/combine/CombiningAlgFactory;)V" line="983"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFactory" desc="()Lorg/wso2/balana/combine/CombiningAlgFactory;" line="988"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/PDPConfig"><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/finder/AttributeFinder;Lorg/wso2/balana/finder/PolicyFinder;Lorg/wso2/balana/finder/ResourceFinder;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/finder/AttributeFinder;Lorg/wso2/balana/finder/PolicyFinder;Lorg/wso2/balana/finder/ResourceFinder;Z)V" line="92"><counter type="INSTRUCTION" missed="15" covered="24"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeFinder" desc="()Lorg/wso2/balana/finder/AttributeFinder;" line="117"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPolicyFinder" desc="()Lorg/wso2/balana/finder/PolicyFinder;" line="126"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResourceFinder" desc="()Lorg/wso2/balana/finder/ResourceFinder;" line="135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMultipleRequestHandle" desc="()Z" line="144"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="43"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ProcessingException"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="62"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="86"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/ConfigurationStore"><method name="&lt;init&gt;" desc="()V" line="151"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="181"><counter type="INSTRUCTION" missed="7" covered="7"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupConfig" desc="(Ljava/io/File;)V" line="196"><counter type="INSTRUCTION" missed="98" covered="250"/><counter type="BRANCH" missed="11" covered="23"/><counter type="LINE" missed="16" covered="47"/><counter type="COMPLEXITY" missed="11" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultFactory" desc="(Lorg/w3c/dom/NamedNodeMap;Ljava/lang/String;)Ljava/lang/String;" line="299"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRootNode" desc="(Ljava/io/File;)Lorg/w3c/dom/Node;" line="310"><counter type="INSTRUCTION" missed="58" covered="45"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="12" covered="17"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsePDPConfig" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/PDPConfig;" line="356"><counter type="INSTRUCTION" missed="7" covered="86"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseAttributeFactory" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeFactoryProxy;" line="394"><counter type="INSTRUCTION" missed="47" covered="30"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="9" covered="8"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseCombiningAlgFactory" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/combine/CombiningAlgFactoryProxy;" line="432"><counter type="INSTRUCTION" missed="31" covered="41"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="7" covered="10"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseFunctionFactory" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/cond/FunctionFactoryProxy;" line="470"><counter type="INSTRUCTION" missed="67" covered="51"/><counter type="BRANCH" missed="15" covered="3"/><counter type="LINE" missed="17" covered="16"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="functionParserHelper" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/cond/FunctionFactory;)V" line="530"><counter type="INSTRUCTION" missed="117" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadClass" desc="(Ljava/lang/String;Lorg/w3c/dom/Node;)Ljava/lang/Object;" line="582"><counter type="INSTRUCTION" missed="99" covered="112"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="16" covered="32"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgs" desc="(Lorg/w3c/dom/Node;)Ljava/util/Set;" line="681"><counter type="INSTRUCTION" missed="12" covered="50"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="useStandard" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;)Z" line="707"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultPDPConfig" desc="()Lorg/wso2/balana/PDPConfig;" line="727"><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPDPConfig" desc="(Ljava/lang/String;)Lorg/wso2/balana/PDPConfig;" line="742"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSupportedPDPConfigurations" desc="()Ljava/util/Set;" line="756"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultAttributeFactoryProxy" desc="()Lorg/wso2/balana/attr/AttributeFactoryProxy;" line="765"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeFactory" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeFactory;" line="777"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSupportedAttributeFactories" desc="()Ljava/util/Set;" line="791"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerAttributeFactories" desc="()V" line="801"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultCombiningFactoryProxy" desc="()Lorg/wso2/balana/combine/CombiningAlgFactoryProxy;" line="824"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCombiningAlgFactory" desc="(Ljava/lang/String;)Lorg/wso2/balana/combine/CombiningAlgFactory;" line="837"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSupportedCombiningAlgFactories" desc="()Ljava/util/Set;" line="851"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerCombiningAlgFactories" desc="()V" line="861"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultFunctionFactoryProxy" desc="()Lorg/wso2/balana/cond/FunctionFactoryProxy;" line="883"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunctionFactoryProxy" desc="(Ljava/lang/String;)Lorg/wso2/balana/cond/FunctionFactoryProxy;" line="896"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSupportedFunctionFactories" desc="()Ljava/util/Set;" line="910"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerFunctionFactories" desc="()V" line="920"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="useDefaultFactories" desc="()V" line="943"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="141"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="852" covered="716"/><counter type="BRANCH" missed="89" covered="67"/><counter type="LINE" missed="190" covered="178"/><counter type="COMPLEXITY" missed="75" covered="33"/><counter type="METHOD" missed="14" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/PolicyReference"><method name="&lt;init&gt;" desc="(Ljava/net/URI;ILorg/wso2/balana/finder/PolicyFinder;Lorg/wso2/balana/PolicyMetaData;)V" line="121"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;ILorg/wso2/balana/VersionConstraints;Lorg/wso2/balana/finder/PolicyFinder;Lorg/wso2/balana/PolicyMetaData;)V" line="140"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/finder/PolicyFinder;)Lorg/wso2/balana/PolicyReference;" line="167"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/finder/PolicyFinder;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/PolicyReference;" line="186"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReference" desc="()Ljava/net/URI;" line="233"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConstraints" desc="()Lorg/wso2/balana/VersionConstraints;" line="243"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReferenceType" desc="()I" line="253"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="()Ljava/net/URI;" line="265"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVersion" desc="()Ljava/lang/String;" line="277"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCombiningAlg" desc="()Lorg/wso2/balana/combine/CombiningAlgorithm;" line="289"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="301"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTarget" desc="()Lorg/wso2/balana/AbstractTarget;" line="313"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultVersion" desc="()Ljava/lang/String;" line="325"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="337"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildElements" desc="()Ljava/util/List;" line="349"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObligationExpressions" desc="()Ljava/util/Set;" line="362"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaData" desc="()Lorg/wso2/balana/PolicyMetaData;" line="376"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="match" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/MatchResult;" line="391"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolvePolicy" desc="()Lorg/wso2/balana/AbstractPolicy;" line="406"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/ctx/AbstractResult;" line="438"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="467"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="480"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeConstraints" desc="()Ljava/lang/String;" line="495"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="106"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="428" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="96" covered="0"/><counter type="COMPLEXITY" missed="42" covered="0"/><counter type="METHOD" missed="24" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/Rule"><method name="&lt;init&gt;" desc="(Ljava/net/URI;ILjava/lang/String;Lorg/wso2/balana/AbstractTarget;Lorg/wso2/balana/cond/Condition;Ljava/util/Set;Ljava/util/Set;I)V" line="84"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;ILjava/lang/String;Lorg/wso2/balana/AbstractTarget;Lorg/wso2/balana/cond/Apply;I)V" line="84"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;ILjava/lang/String;Lorg/wso2/balana/AbstractTarget;Lorg/wso2/balana/cond/Condition;)V" line="84"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/wso2/balana/Rule;" line="178"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;Lorg/wso2/balana/cond/VariableManager;)Lorg/wso2/balana/Rule;" line="197"><counter type="INSTRUCTION" missed="19" covered="174"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="3" covered="41"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffect" desc="()I" line="268"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/net/URI;" line="277"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="286"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTarget" desc="()Lorg/wso2/balana/AbstractTarget;" line="295"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="305"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCondition" desc="()Lorg/wso2/balana/cond/Condition;" line="314"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="match" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/MatchResult;" line="328"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/ctx/AbstractResult;" line="358"><counter type="INSTRUCTION" missed="17" covered="111"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="5" covered="28"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processObligations" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Ljava/util/List;" line="437"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processAdvices" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Ljava/util/List;" line="457"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="470"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="477"><counter type="INSTRUCTION" missed="130" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="293" covered="403"/><counter type="BRANCH" missed="32" covered="54"/><counter type="LINE" missed="62" covered="100"/><counter type="COMPLEXITY" missed="29" covered="31"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/UnknownIdentifierException"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="4"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/Balana"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="111"><counter type="INSTRUCTION" missed="118" covered="116"/><counter type="BRANCH" missed="15" covered="15"/><counter type="LINE" missed="29" covered="32"/><counter type="COMPLEXITY" missed="15" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="()Lorg/wso2/balana/Balana;" line="225"><counter type="INSTRUCTION" missed="5" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/Balana;" line="244"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/wso2/balana/Balana;" line="266"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPdpConfig" desc="()Lorg/wso2/balana/PDPConfig;" line="279"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPdpConfig" desc="(Lorg/wso2/balana/PDPConfig;)V" line="283"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeFactory" desc="()Lorg/wso2/balana/attr/AttributeFactory;" line="287"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAttributeFactory" desc="(Lorg/wso2/balana/attr/AttributeFactory;)V" line="291"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFunctionTargetFactory" desc="()Lorg/wso2/balana/cond/FunctionFactory;" line="295"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFunctionTargetFactory" desc="(Lorg/wso2/balana/cond/FunctionFactory;)V" line="299"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFunctionConditionFactory" desc="()Lorg/wso2/balana/cond/FunctionFactory;" line="303"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFunctionConditionFactory" desc="(Lorg/wso2/balana/cond/FunctionFactory;)V" line="307"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFunctionGeneralFactory" desc="()Lorg/wso2/balana/cond/FunctionFactory;" line="311"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFunctionGeneralFactory" desc="(Lorg/wso2/balana/cond/FunctionFactory;)V" line="315"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCombiningAlgFactory" desc="()Lorg/wso2/balana/combine/CombiningAlgFactory;" line="319"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCombiningAlgFactory" desc="(Lorg/wso2/balana/combine/CombiningAlgFactory;)V" line="323"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBuilder" desc="()Ljavax/xml/parsers/DocumentBuilderFactory;" line="327"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="211" covered="154"/><counter type="BRANCH" missed="24" covered="18"/><counter type="LINE" missed="57" covered="43"/><counter type="COMPLEXITY" missed="32" covered="7"/><counter type="METHOD" missed="12" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Policy.java"><line nr="78" mi="10" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="10" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="10" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="10" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="11" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="11" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="2" cb="0"/><line nr="190" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="10" ci="0" mb="2" cb="0"/><line nr="192" mi="7" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="2" cb="0"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><line nr="202" mi="7" ci="0" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="11" ci="0" mb="0" cb="0"/><line nr="240" mi="2" ci="0" mb="2" cb="0"/><line nr="241" mi="9" ci="0" mb="2" cb="0"/><line nr="242" mi="3" ci="0" mb="2" cb="0"/><line nr="243" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="1" ci="0" mb="0" cb="0"/><line nr="248" mi="3" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="2" cb="0"/><line nr="252" mi="6" ci="0" mb="0" cb="0"/><line nr="254" mi="7" ci="0" mb="0" cb="0"/><line nr="255" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="8" mb="0" cb="2"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="1" cb="1"/><line nr="282" mi="6" ci="0" mb="0" cb="0"/><line nr="286" mi="4" ci="0" mb="2" cb="0"/><line nr="287" mi="12" ci="0" mb="0" cb="0"/><line nr="289" mi="5" ci="0" mb="0" cb="0"/><line nr="294" mi="0" ci="6" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="298" mi="0" ci="8" mb="0" cb="2"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="2"/><line nr="303" mi="0" ci="8" mb="0" cb="0"/><line nr="304" mi="0" ci="4" mb="1" cb="1"/><line nr="305" mi="6" ci="0" mb="0" cb="0"/><line nr="309" mi="4" ci="0" mb="2" cb="0"/><line nr="310" mi="5" ci="0" mb="0" cb="0"/><line nr="311" mi="4" ci="0" mb="0" cb="0"/><line nr="312" mi="1" ci="0" mb="0" cb="0"/><line nr="313" mi="4" ci="0" mb="0" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="315" mi="5" ci="0" mb="0" cb="0"/><line nr="317" mi="1" ci="4" mb="1" cb="1"/><line nr="318" mi="6" ci="0" mb="0" cb="0"/><line nr="328" mi="7" ci="0" mb="0" cb="0"/><line nr="332" mi="0" ci="5" mb="0" cb="0"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="10" mb="0" cb="2"/><line nr="339" mi="0" ci="4" mb="0" cb="0"/><line nr="340" mi="0" ci="5" mb="0" cb="0"/><line nr="342" mi="0" ci="8" mb="0" cb="0"/><line nr="343" mi="0" ci="1" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="1" cb="1"/><line nr="347" mi="5" ci="0" mb="0" cb="0"/><line nr="350" mi="0" ci="3" mb="0" cb="0"/><line nr="351" mi="0" ci="1" mb="0" cb="0"/><line nr="357" mi="3" ci="0" mb="0" cb="0"/><line nr="359" mi="8" ci="0" mb="2" cb="0"/><line nr="360" mi="4" ci="0" mb="0" cb="0"/><line nr="361" mi="5" ci="0" mb="2" cb="0"/><line nr="362" mi="5" ci="0" mb="0" cb="0"/><line nr="364" mi="1" ci="0" mb="0" cb="0"/><line nr="377" mi="0" ci="5" mb="1" cb="1"/><line nr="378" mi="8" ci="0" mb="0" cb="0"/><line nr="379" mi="5" ci="0" mb="0" cb="0"/><line nr="382" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="3" ci="0" mb="0" cb="0"/><line nr="400" mi="4" ci="0" mb="0" cb="0"/><line nr="401" mi="3" ci="0" mb="0" cb="0"/><line nr="402" mi="3" ci="0" mb="0" cb="0"/><line nr="413" mi="4" ci="0" mb="0" cb="0"/><line nr="415" mi="3" ci="0" mb="0" cb="0"/><line nr="417" mi="12" ci="0" mb="0" cb="0"/><line nr="418" mi="6" ci="0" mb="0" cb="0"/><line nr="419" mi="7" ci="0" mb="0" cb="0"/><line nr="421" mi="3" ci="0" mb="0" cb="0"/><line nr="422" mi="2" ci="0" mb="2" cb="0"/><line nr="423" mi="8" ci="0" mb="0" cb="0"/><line nr="426" mi="4" ci="0" mb="0" cb="0"/><line nr="427" mi="2" ci="0" mb="2" cb="0"/><line nr="428" mi="4" ci="0" mb="0" cb="0"/><line nr="429" mi="4" ci="0" mb="0" cb="0"/><line nr="432" mi="4" ci="0" mb="0" cb="0"/><line nr="434" mi="11" ci="0" mb="2" cb="0"/><line nr="435" mi="3" ci="0" mb="0" cb="0"/><line nr="436" mi="1" ci="0" mb="0" cb="0"/><line nr="438" mi="3" ci="0" mb="0" cb="0"/><line nr="440" mi="4" ci="0" mb="0" cb="0"/><line nr="441" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="379" covered="140"/><counter type="BRANCH" missed="33" covered="13"/><counter type="LINE" missed="79" covered="30"/><counter type="COMPLEXITY" missed="30" covered="6"/><counter type="METHOD" missed="11" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultNamespaceContext.java"><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="1" cb="1"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractTarget.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Balana.java"><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="1" cb="1"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="27" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="1" cb="1"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="1" cb="1"/><line nr="127" mi="0" ci="2" mb="1" cb="1"/><line nr="128" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="1" cb="1"/><line nr="134" mi="6" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="1" cb="1"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="1" cb="1"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="1" cb="1"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="1" cb="1"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="1" cb="1"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="9" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="1" cb="1"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="1" cb="1"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="1" cb="1"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="1" cb="1"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="1" cb="1"/><line nr="211" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="2"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="1" cb="1"/><line nr="228" mi="0" ci="8" mb="0" cb="0"/><line nr="230" mi="5" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="2" ci="0" mb="2" cb="0"/><line nr="245" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="2" ci="0" mb="2" cb="0"/><line nr="247" mi="8" ci="0" mb="0" cb="0"/><line nr="249" mi="8" ci="0" mb="0" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="2" cb="0"/><line nr="267" mi="4" ci="0" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="2" cb="0"/><line nr="269" mi="8" ci="0" mb="0" cb="0"/><line nr="272" mi="8" ci="0" mb="0" cb="0"/><line nr="274" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="3" ci="0" mb="0" cb="0"/><line nr="284" mi="1" ci="0" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="3" ci="0" mb="0" cb="0"/><line nr="292" mi="1" ci="0" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="299" mi="3" ci="0" mb="0" cb="0"/><line nr="300" mi="1" ci="0" mb="0" cb="0"/><line nr="303" mi="3" ci="0" mb="0" cb="0"/><line nr="307" mi="3" ci="0" mb="0" cb="0"/><line nr="308" mi="1" ci="0" mb="0" cb="0"/><line nr="311" mi="3" ci="0" mb="0" cb="0"/><line nr="315" mi="3" ci="0" mb="0" cb="0"/><line nr="316" mi="1" ci="0" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="323" mi="3" ci="0" mb="0" cb="0"/><line nr="324" mi="1" ci="0" mb="0" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="211" covered="154"/><counter type="BRANCH" missed="24" covered="18"/><counter type="LINE" missed="57" covered="43"/><counter type="COMPLEXITY" missed="32" covered="7"/><counter type="METHOD" missed="12" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PolicyMetaData.java"><line nr="58" mi="0" ci="19" mb="0" cb="0"/><line nr="78" mi="0" ci="12" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="1" cb="1"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="1" cb="1"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="2"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="1" cb="1"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="12" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="2"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="73"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="11" covered="15"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TargetMatch.java"><line nr="96" mi="0" ci="20" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="3" ci="8" mb="3" cb="5"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="10" ci="0" mb="4" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="2" cb="0"/><line nr="183" mi="5" ci="0" mb="0" cb="0"/><line nr="185" mi="9" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="6" ci="0" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><line nr="226" mi="6" ci="0" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="232" mi="1" ci="0" mb="0" cb="0"/><line nr="234" mi="6" ci="0" mb="0" cb="0"/><line nr="235" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="8" mb="0" cb="2"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="6" mb="0" cb="2"/><line nr="246" mi="0" ci="2" mb="0" cb="2"/><line nr="247" mi="0" ci="6" mb="0" cb="0"/><line nr="248" mi="0" ci="15" mb="0" cb="2"/><line nr="249" mi="0" ci="2" mb="0" cb="2"/><line nr="250" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="2"/><line nr="252" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="2"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="1" ci="0" mb="0" cb="0"/><line nr="257" mi="6" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="2"/><line nr="269" mi="0" ci="7" mb="0" cb="0"/><line nr="271" mi="0" ci="8" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="291" mi="3" ci="0" mb="0" cb="0"/><line nr="300" mi="3" ci="0" mb="0" cb="0"/><line nr="310" mi="3" ci="0" mb="0" cb="0"/><line nr="323" mi="0" ci="5" mb="0" cb="0"/><line nr="325" mi="0" ci="3" mb="0" cb="2"/><line nr="328" mi="0" ci="7" mb="0" cb="0"/><line nr="332" mi="0" ci="5" mb="0" cb="0"/><line nr="334" mi="0" ci="3" mb="0" cb="2"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="0" ci="2" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="0" cb="2"/><line nr="342" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="5" mb="0" cb="0"/><line nr="345" mi="0" ci="6" mb="0" cb="0"/><line nr="348" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="2"/><line nr="352" mi="0" ci="4" mb="0" cb="2"/><line nr="353" mi="0" ci="6" mb="0" cb="0"/><line nr="355" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="1" cb="1"/><line nr="361" mi="2" ci="0" mb="0" cb="0"/><line nr="366" mi="2" ci="0" mb="2" cb="0"/><line nr="367" mi="3" ci="0" mb="0" cb="0"/><line nr="369" mi="0" ci="1" mb="0" cb="0"/><line nr="373" mi="0" ci="2" mb="1" cb="1"/><line nr="374" mi="6" ci="0" mb="0" cb="0"/><line nr="376" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="5" mb="0" cb="0"/><line nr="395" mi="0" ci="6" mb="0" cb="0"/><line nr="398" mi="0" ci="3" mb="1" cb="1"/><line nr="399" mi="7" ci="0" mb="0" cb="0"/><line nr="402" mi="0" ci="5" mb="0" cb="0"/><line nr="404" mi="0" ci="3" mb="0" cb="2"/><line nr="405" mi="0" ci="5" mb="0" cb="0"/><line nr="407" mi="0" ci="5" mb="0" cb="0"/><line nr="418" mi="2" ci="0" mb="0" cb="0"/><line nr="420" mi="3" ci="0" mb="2" cb="0"/><line nr="421" mi="12" ci="0" mb="0" cb="0"/><line nr="424" mi="9" ci="0" mb="0" cb="0"/><line nr="425" mi="6" ci="0" mb="0" cb="0"/><line nr="427" mi="4" ci="0" mb="0" cb="0"/><line nr="428" mi="4" ci="0" mb="0" cb="0"/><line nr="430" mi="8" ci="0" mb="0" cb="0"/><line nr="431" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="161" covered="305"/><counter type="BRANCH" missed="16" covered="36"/><counter type="LINE" missed="37" covered="72"/><counter type="COMPLEXITY" missed="16" covered="23"/><counter type="METHOD" missed="6" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PDP.java"><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="1" cb="1"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="7" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="10" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="9" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="11" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="7" ci="0" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="2"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="1" cb="1"/><line nr="188" mi="6" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="10" mb="0" cb="2"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="2"/><line nr="206" mi="0" ci="2" mb="1" cb="1"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="6" ci="0" mb="0" cb="0"/><line nr="211" mi="7" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="2"/><line nr="215" mi="0" ci="4" mb="1" cb="1"/><line nr="216" mi="4" ci="0" mb="0" cb="0"/><line nr="217" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="6" ci="0" mb="0" cb="0"/><line nr="220" mi="7" ci="0" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="7" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="2"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="1" cb="1"/><line nr="247" mi="5" ci="0" mb="0" cb="0"/><line nr="248" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="0" ci="6" mb="0" cb="2"/><line nr="255" mi="0" ci="2" mb="1" cb="1"/><line nr="256" mi="4" ci="0" mb="0" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="7" ci="0" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="285" mi="1" ci="0" mb="0" cb="0"/><line nr="286" mi="10" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="0" cb="0"/><line nr="291" mi="4" ci="0" mb="0" cb="0"/><line nr="292" mi="4" ci="0" mb="0" cb="0"/><line nr="293" mi="6" ci="0" mb="0" cb="0"/><line nr="295" mi="9" ci="0" mb="0" cb="0"/><line nr="296" mi="1" ci="0" mb="0" cb="0"/><line nr="298" mi="2" ci="0" mb="0" cb="0"/><line nr="315" mi="2" ci="0" mb="0" cb="0"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><line nr="319" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="1" ci="0" mb="0" cb="0"/><line nr="322" mi="4" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="0" cb="0"/><line nr="324" mi="14" ci="0" mb="0" cb="0"/><line nr="326" mi="6" ci="0" mb="0" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><line nr="328" mi="1" ci="0" mb="0" cb="0"/><line nr="332" mi="2" ci="0" mb="2" cb="0"/><line nr="333" mi="4" ci="0" mb="0" cb="0"/><line nr="336" mi="4" ci="0" mb="0" cb="0"/><line nr="339" mi="5" ci="0" mb="0" cb="0"/><line nr="340" mi="1" ci="0" mb="0" cb="0"/><line nr="341" mi="4" ci="0" mb="0" cb="0"/><line nr="342" mi="1" ci="0" mb="0" cb="0"/><line nr="344" mi="2" ci="0" mb="0" cb="0"/><line nr="353" mi="3" ci="0" mb="2" cb="0"/><line nr="354" mi="12" ci="0" mb="0" cb="0"/><line nr="356" mi="3" ci="0" mb="2" cb="0"/><line nr="357" mi="3" ci="0" mb="0" cb="0"/><line nr="358" mi="5" ci="0" mb="4" cb="0"/><line nr="359" mi="10" ci="0" mb="2" cb="0"/><line nr="360" mi="3" ci="0" mb="0" cb="0"/><line nr="361" mi="3" ci="0" mb="2" cb="0"/><line nr="362" mi="6" ci="0" mb="0" cb="0"/><line nr="364" mi="11" ci="0" mb="0" cb="0"/><line nr="367" mi="1" ci="0" mb="0" cb="0"/><line nr="370" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="341" covered="128"/><counter type="BRANCH" missed="20" covered="18"/><counter type="LINE" missed="76" covered="33"/><counter type="COMPLEXITY" missed="17" covered="11"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Rule.java"><line nr="84" mi="6" ci="3" mb="0" cb="0"/><line nr="85" mi="6" ci="3" mb="0" cb="0"/><line nr="86" mi="6" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="9" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="9" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="9" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="8" mb="0" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="6" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="2"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="1" cb="1"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="12" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="8" mb="0" cb="2"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="2"/><line nr="231" mi="0" ci="3" mb="0" cb="2"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="2"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="2"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="2"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="8" mb="0" cb="2"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="2"/><line nr="243" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="2"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="8" mb="0" cb="2"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="2"/><line nr="252" mi="0" ci="6" mb="0" cb="0"/><line nr="257" mi="0" ci="11" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="3" ci="0" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="305" mi="2" ci="0" mb="0" cb="0"/><line nr="314" mi="3" ci="0" mb="0" cb="0"/><line nr="328" mi="3" ci="0" mb="2" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="330" mi="4" ci="0" mb="0" cb="0"/><line nr="331" mi="6" ci="0" mb="0" cb="0"/><line nr="333" mi="6" ci="0" mb="0" cb="0"/><line nr="336" mi="5" ci="0" mb="0" cb="0"/><line nr="358" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="2"/><line nr="362" mi="0" ci="5" mb="0" cb="0"/><line nr="363" mi="0" ci="3" mb="0" cb="0"/><line nr="366" mi="0" ci="3" mb="0" cb="2"/><line nr="367" mi="0" ci="5" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="2"/><line nr="374" mi="0" ci="4" mb="1" cb="1"/><line nr="375" mi="3" ci="0" mb="2" cb="0"/><line nr="376" mi="5" ci="0" mb="0" cb="0"/><line nr="377" mi="2" ci="0" mb="0" cb="0"/><line nr="379" mi="5" ci="0" mb="0" cb="0"/><line nr="380" mi="2" ci="0" mb="0" cb="0"/><line nr="384" mi="0" ci="5" mb="0" cb="0"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="390" mi="0" ci="3" mb="0" cb="2"/><line nr="392" mi="0" ci="10" mb="0" cb="0"/><line nr="393" mi="0" ci="2" mb="0" cb="0"/><line nr="397" mi="0" ci="5" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="2"/><line nr="402" mi="0" ci="4" mb="0" cb="2"/><line nr="403" mi="0" ci="3" mb="0" cb="2"/><line nr="404" mi="0" ci="5" mb="0" cb="0"/><line nr="405" mi="0" ci="2" mb="0" cb="0"/><line nr="407" mi="0" ci="5" mb="0" cb="0"/><line nr="408" mi="0" ci="2" mb="0" cb="0"/><line nr="413" mi="0" ci="5" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="0"/><line nr="417" mi="0" ci="5" mb="0" cb="0"/><line nr="419" mi="0" ci="3" mb="0" cb="2"/><line nr="421" mi="0" ci="10" mb="0" cb="0"/><line nr="422" mi="0" ci="2" mb="0" cb="0"/><line nr="424" mi="0" ci="5" mb="0" cb="0"/><line nr="437" mi="0" ci="7" mb="1" cb="3"/><line nr="438" mi="0" ci="4" mb="0" cb="0"/><line nr="439" mi="0" ci="11" mb="0" cb="2"/><line nr="440" mi="0" ci="5" mb="1" cb="1"/><line nr="441" mi="0" ci="6" mb="0" cb="0"/><line nr="444" mi="0" ci="1" mb="0" cb="0"/><line nr="445" mi="0" ci="2" mb="0" cb="0"/><line nr="447" mi="0" ci="2" mb="0" cb="0"/><line nr="457" mi="0" ci="7" mb="1" cb="3"/><line nr="458" mi="0" ci="4" mb="0" cb="0"/><line nr="459" mi="0" ci="11" mb="0" cb="2"/><line nr="460" mi="0" ci="5" mb="1" cb="1"/><line nr="461" mi="0" ci="6" mb="0" cb="0"/><line nr="463" mi="0" ci="1" mb="0" cb="0"/><line nr="464" mi="0" ci="2" mb="0" cb="0"/><line nr="466" mi="0" ci="2" mb="0" cb="0"/><line nr="470" mi="4" ci="0" mb="0" cb="0"/><line nr="471" mi="3" ci="0" mb="0" cb="0"/><line nr="472" mi="3" ci="0" mb="0" cb="0"/><line nr="477" mi="21" ci="0" mb="0" cb="0"/><line nr="481" mi="3" ci="0" mb="2" cb="0"/><line nr="482" mi="9" ci="0" mb="0" cb="0"/><line nr="485" mi="3" ci="0" mb="2" cb="0"/><line nr="486" mi="4" ci="0" mb="0" cb="0"/><line nr="489" mi="3" ci="0" mb="2" cb="0"/><line nr="490" mi="4" ci="0" mb="0" cb="0"/><line nr="493" mi="7" ci="0" mb="4" cb="0"/><line nr="495" mi="4" ci="0" mb="2" cb="0"/><line nr="496" mi="5" ci="0" mb="0" cb="0"/><line nr="498" mi="4" ci="0" mb="0" cb="0"/><line nr="501" mi="11" ci="0" mb="2" cb="0"/><line nr="502" mi="3" ci="0" mb="0" cb="0"/><line nr="503" mi="1" ci="0" mb="0" cb="0"/><line nr="505" mi="4" ci="0" mb="2" cb="0"/><line nr="506" mi="5" ci="0" mb="0" cb="0"/><line nr="508" mi="4" ci="0" mb="0" cb="0"/><line nr="512" mi="7" ci="0" mb="4" cb="0"/><line nr="513" mi="4" ci="0" mb="0" cb="0"/><line nr="514" mi="11" ci="0" mb="2" cb="0"/><line nr="515" mi="3" ci="0" mb="0" cb="0"/><line nr="516" mi="1" ci="0" mb="0" cb="0"/><line nr="517" mi="4" ci="0" mb="0" cb="0"/><line nr="520" mi="4" ci="0" mb="0" cb="0"/><line nr="521" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="293" covered="403"/><counter type="BRANCH" missed="32" covered="54"/><counter type="LINE" missed="62" covered="100"/><counter type="COMPLEXITY" missed="29" covered="31"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ParsingException.java"><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PolicyReference.java"><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="12" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="5" ci="0" mb="4" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="7" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="2" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="2" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="12" ci="0" mb="0" cb="0"/><line nr="197" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="6" ci="0" mb="0" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="2" ci="0" mb="0" cb="0"/><line nr="206" mi="4" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="2" cb="0"/><line nr="208" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><line nr="211" mi="4" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="2" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="4" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="2" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="7" ci="0" mb="0" cb="0"/><line nr="224" mi="9" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="3" ci="0" mb="0" cb="0"/><line nr="265" mi="4" ci="0" mb="0" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="4" ci="0" mb="0" cb="0"/><line nr="301" mi="4" ci="0" mb="0" cb="0"/><line nr="313" mi="4" ci="0" mb="0" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="349" mi="4" ci="0" mb="0" cb="0"/><line nr="362" mi="4" ci="0" mb="0" cb="0"/><line nr="376" mi="4" ci="0" mb="0" cb="0"/><line nr="391" mi="5" ci="0" mb="0" cb="0"/><line nr="392" mi="1" ci="0" mb="0" cb="0"/><line nr="394" mi="4" ci="0" mb="0" cb="0"/><line nr="395" mi="4" ci="0" mb="0" cb="0"/><line nr="396" mi="6" ci="0" mb="0" cb="0"/><line nr="397" mi="6" ci="0" mb="0" cb="0"/><line nr="406" mi="3" ci="0" mb="2" cb="0"/><line nr="407" mi="3" ci="0" mb="2" cb="0"/><line nr="408" mi="14" ci="0" mb="0" cb="0"/><line nr="412" mi="5" ci="0" mb="0" cb="0"/><line nr="415" mi="12" ci="0" mb="0" cb="0"/><line nr="418" mi="3" ci="0" mb="2" cb="0"/><line nr="419" mi="5" ci="0" mb="0" cb="0"/><line nr="421" mi="3" ci="0" mb="2" cb="0"/><line nr="422" mi="5" ci="0" mb="0" cb="0"/><line nr="424" mi="3" ci="0" mb="0" cb="0"/><line nr="438" mi="3" ci="0" mb="2" cb="0"/><line nr="440" mi="5" ci="0" mb="0" cb="0"/><line nr="443" mi="12" ci="0" mb="0" cb="0"/><line nr="447" mi="3" ci="0" mb="2" cb="0"/><line nr="449" mi="5" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="2" cb="0"/><line nr="455" mi="7" ci="0" mb="0" cb="0"/><line nr="458" mi="5" ci="0" mb="0" cb="0"/><line nr="467" mi="4" ci="0" mb="0" cb="0"/><line nr="468" mi="3" ci="0" mb="0" cb="0"/><line nr="469" mi="3" ci="0" mb="0" cb="0"/><line nr="480" mi="3" ci="0" mb="2" cb="0"/><line nr="481" mi="10" ci="0" mb="0" cb="0"/><line nr="482" mi="6" ci="0" mb="0" cb="0"/><line nr="484" mi="10" ci="0" mb="0" cb="0"/><line nr="485" mi="5" ci="0" mb="0" cb="0"/><line nr="487" mi="1" ci="0" mb="0" cb="0"/><line nr="495" mi="2" ci="0" mb="0" cb="0"/><line nr="496" mi="3" ci="0" mb="0" cb="0"/><line nr="498" mi="3" ci="0" mb="0" cb="0"/><line nr="499" mi="2" ci="0" mb="2" cb="0"/><line nr="500" mi="13" ci="0" mb="0" cb="0"/><line nr="502" mi="3" ci="0" mb="0" cb="0"/><line nr="503" mi="2" ci="0" mb="2" cb="0"/><line nr="504" mi="13" ci="0" mb="0" cb="0"/><line nr="506" mi="3" ci="0" mb="0" cb="0"/><line nr="507" mi="2" ci="0" mb="2" cb="0"/><line nr="508" mi="13" ci="0" mb="0" cb="0"/><line nr="510" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="428" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="96" covered="0"/><counter type="COMPLEXITY" missed="42" covered="0"/><counter type="METHOD" missed="24" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TargetFactory.java"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="2"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="1" cb="1"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="5" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="32"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProcessingException.java"><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractObligation.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PolicySet.java"><line nr="73" mi="10" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="10" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="10" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="10" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="11" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="2" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="2" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="2" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="8" ci="0" mb="0" cb="0"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="11" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="2" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="3" ci="0" mb="2" cb="0"/><line nr="207" mi="3" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="2" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="8" mb="0" cb="2"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="1" cb="1"/><line nr="244" mi="7" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="2"/><line nr="246" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="1" cb="1"/><line nr="248" mi="8" ci="0" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="1" cb="1"/><line nr="250" mi="8" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="1" cb="1"/><line nr="252" mi="6" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="1" cb="1"/><line nr="254" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="2"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="1" cb="1"/><line nr="272" mi="0" ci="8" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="2" cb="0"/><line nr="274" mi="8" ci="0" mb="0" cb="0"/><line nr="276" mi="3" ci="0" mb="0" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><line nr="278" mi="3" ci="0" mb="2" cb="0"/><line nr="279" mi="6" ci="0" mb="0" cb="0"/><line nr="281" mi="5" ci="0" mb="0" cb="0"/><line nr="285" mi="0" ci="8" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="1" cb="1"/><line nr="290" mi="5" ci="0" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="1" cb="1"/><line nr="294" mi="5" ci="0" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="311" mi="13" ci="0" mb="0" cb="0"/><line nr="313" mi="4" ci="0" mb="2" cb="0"/><line nr="314" mi="5" ci="0" mb="0" cb="0"/><line nr="315" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="1" ci="0" mb="0" cb="0"/><line nr="317" mi="4" ci="0" mb="0" cb="0"/><line nr="318" mi="4" ci="0" mb="0" cb="0"/><line nr="319" mi="5" ci="0" mb="0" cb="0"/><line nr="321" mi="1" ci="0" mb="0" cb="0"/><line nr="330" mi="3" ci="0" mb="0" cb="0"/><line nr="332" mi="8" ci="0" mb="2" cb="0"/><line nr="333" mi="4" ci="0" mb="0" cb="0"/><line nr="334" mi="5" ci="0" mb="2" cb="0"/><line nr="335" mi="5" ci="0" mb="0" cb="0"/><line nr="338" mi="1" ci="0" mb="0" cb="0"/><line nr="351" mi="4" ci="0" mb="0" cb="0"/><line nr="366" mi="0" ci="5" mb="1" cb="1"/><line nr="367" mi="8" ci="0" mb="0" cb="0"/><line nr="368" mi="5" ci="0" mb="0" cb="0"/><line nr="371" mi="0" ci="6" mb="0" cb="0"/><line nr="380" mi="4" ci="0" mb="0" cb="0"/><line nr="381" mi="3" ci="0" mb="0" cb="0"/><line nr="382" mi="3" ci="0" mb="0" cb="0"/><line nr="392" mi="4" ci="0" mb="0" cb="0"/><line nr="394" mi="3" ci="0" mb="0" cb="0"/><line nr="396" mi="8" ci="0" mb="0" cb="0"/><line nr="397" mi="6" ci="0" mb="0" cb="0"/><line nr="398" mi="7" ci="0" mb="0" cb="0"/><line nr="400" mi="3" ci="0" mb="0" cb="0"/><line nr="401" mi="2" ci="0" mb="2" cb="0"/><line nr="402" mi="8" ci="0" mb="0" cb="0"/><line nr="405" mi="4" ci="0" mb="0" cb="0"/><line nr="406" mi="2" ci="0" mb="2" cb="0"/><line nr="407" mi="4" ci="0" mb="0" cb="0"/><line nr="408" mi="4" ci="0" mb="0" cb="0"/><line nr="411" mi="4" ci="0" mb="0" cb="0"/><line nr="412" mi="3" ci="0" mb="0" cb="0"/><line nr="414" mi="4" ci="0" mb="0" cb="0"/><line nr="415" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="365" covered="126"/><counter type="BRANCH" missed="35" covered="15"/><counter type="LINE" missed="82" covered="31"/><counter type="COMPLEXITY" missed="33" covered="5"/><counter type="METHOD" missed="11" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VersionConstraints.java"><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="19" ci="0" mb="6" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="2" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="2" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="6" ci="0" mb="0" cb="0"/><line nr="171" mi="6" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="2" cb="0"/><line nr="176" mi="3" ci="0" mb="2" cb="0"/><line nr="177" mi="3" ci="0" mb="2" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="2" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="4" ci="0" mb="2" cb="0"/><line nr="194" mi="4" ci="0" mb="2" cb="0"/><line nr="196" mi="2" ci="0" mb="2" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="2" cb="0"/><line nr="205" mi="7" ci="0" mb="2" cb="0"/><line nr="207" mi="7" ci="0" mb="2" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="215" mi="3" ci="0" mb="2" cb="0"/><line nr="216" mi="3" ci="0" mb="2" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="150" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ConfigurationStore.java"><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="2" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="8" mb="0" cb="2"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="2"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="2"/><line nr="233" mi="0" ci="3" mb="1" cb="1"/><line nr="234" mi="0" ci="10" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="1" cb="1"/><line nr="236" mi="14" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="9" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="2"/><line nr="240" mi="0" ci="3" mb="1" cb="1"/><line nr="241" mi="0" ci="10" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="1" cb="1"/><line nr="243" mi="14" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="9" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="2"/><line nr="247" mi="0" ci="3" mb="1" cb="1"/><line nr="248" mi="0" ci="10" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="1" cb="1"/><line nr="250" mi="14" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="9" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="2"/><line nr="254" mi="0" ci="3" mb="1" cb="1"/><line nr="255" mi="0" ci="10" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="1" cb="1"/><line nr="257" mi="14" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="8" mb="0" cb="0"/><line nr="264" mi="0" ci="8" mb="0" cb="0"/><line nr="266" mi="0" ci="8" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="1" cb="1"/><line nr="269" mi="7" ci="0" mb="0" cb="0"/><line nr="270" mi="1" ci="0" mb="0" cb="0"/><line nr="271" mi="6" ci="0" mb="0" cb="0"/><line nr="272" mi="1" ci="0" mb="0" cb="0"/><line nr="275" mi="0" ci="8" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="1" cb="1"/><line nr="278" mi="7" ci="0" mb="0" cb="0"/><line nr="279" mi="1" ci="0" mb="0" cb="0"/><line nr="280" mi="6" ci="0" mb="0" cb="0"/><line nr="281" mi="1" ci="0" mb="0" cb="0"/><line nr="284" mi="0" ci="8" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="1" cb="1"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><line nr="288" mi="1" ci="0" mb="0" cb="0"/><line nr="289" mi="6" ci="0" mb="0" cb="0"/><line nr="290" mi="1" ci="0" mb="0" cb="0"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="1" cb="1"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="2" ci="0" mb="0" cb="0"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="2" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="1" ci="0" mb="0" cb="0"/><line nr="320" mi="6" ci="0" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="328" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="6" ci="0" mb="0" cb="0"/><line nr="330" mi="1" ci="0" mb="0" cb="0"/><line nr="331" mi="6" ci="0" mb="0" cb="0"/><line nr="332" mi="1" ci="0" mb="0" cb="0"/><line nr="333" mi="6" ci="0" mb="0" cb="0"/><line nr="335" mi="3" ci="2" mb="3" cb="1"/><line nr="337" mi="2" ci="2" mb="0" cb="0"/><line nr="338" mi="2" ci="0" mb="0" cb="0"/><line nr="339" mi="6" ci="0" mb="0" cb="0"/><line nr="340" mi="2" ci="1" mb="0" cb="0"/><line nr="342" mi="2" ci="0" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="5" mb="1" cb="1"/><line nr="347" mi="13" ci="0" mb="0" cb="0"/><line nr="349" mi="0" ci="2" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="8" mb="0" cb="2"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="364" mi="0" ci="3" mb="0" cb="0"/><line nr="366" mi="0" ci="4" mb="0" cb="2"/><line nr="367" mi="0" ci="8" mb="0" cb="0"/><line nr="368" mi="0" ci="4" mb="0" cb="2"/><line nr="369" mi="0" ci="8" mb="0" cb="0"/><line nr="370" mi="0" ci="4" mb="1" cb="1"/><line nr="371" mi="7" ci="0" mb="0" cb="0"/><line nr="378" mi="0" ci="4" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="3" mb="0" cb="0"/><line nr="384" mi="0" ci="4" mb="0" cb="0"/><line nr="385" mi="0" ci="3" mb="0" cb="0"/><line nr="387" mi="0" ci="7" mb="0" cb="0"/><line nr="394" mi="0" ci="2" mb="0" cb="0"/><line nr="397" mi="0" ci="5" mb="1" cb="1"/><line nr="398" mi="0" ci="3" mb="1" cb="1"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="3" mb="0" cb="0"/><line nr="403" mi="4" ci="0" mb="0" cb="0"/><line nr="408" mi="0" ci="3" mb="0" cb="0"/><line nr="409" mi="2" ci="6" mb="1" cb="1"/><line nr="410" mi="4" ci="0" mb="0" cb="0"/><line nr="412" mi="5" ci="0" mb="2" cb="0"/><line nr="414" mi="6" ci="0" mb="0" cb="0"/><line nr="415" mi="7" ci="0" mb="0" cb="0"/><line nr="418" mi="4" ci="0" mb="0" cb="0"/><line nr="419" mi="1" ci="0" mb="0" cb="0"/><line nr="420" mi="13" ci="0" mb="0" cb="0"/><line nr="421" mi="1" ci="0" mb="0" cb="0"/><line nr="425" mi="0" ci="5" mb="0" cb="0"/><line nr="432" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="0" ci="5" mb="1" cb="1"/><line nr="436" mi="0" ci="3" mb="1" cb="1"/><line nr="437" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="3" mb="0" cb="0"/><line nr="440" mi="4" ci="0" mb="0" cb="0"/><line nr="445" mi="0" ci="3" mb="0" cb="0"/><line nr="446" mi="0" ci="8" mb="0" cb="2"/><line nr="447" mi="0" ci="4" mb="0" cb="0"/><line nr="449" mi="0" ci="5" mb="1" cb="1"/><line nr="451" mi="7" ci="0" mb="0" cb="0"/><line nr="453" mi="3" ci="0" mb="0" cb="0"/><line nr="454" mi="1" ci="0" mb="0" cb="0"/><line nr="455" mi="8" ci="0" mb="0" cb="0"/><line nr="456" mi="7" ci="0" mb="0" cb="0"/><line nr="457" mi="1" ci="0" mb="0" cb="0"/><line nr="461" mi="0" ci="5" mb="0" cb="0"/><line nr="470" mi="0" ci="2" mb="0" cb="0"/><line nr="471" mi="0" ci="2" mb="0" cb="0"/><line nr="472" mi="0" ci="2" mb="0" cb="0"/><line nr="473" mi="0" ci="2" mb="0" cb="0"/><line nr="477" mi="0" ci="5" mb="1" cb="1"/><line nr="478" mi="0" ci="3" mb="1" cb="1"/><line nr="479" mi="0" ci="3" mb="0" cb="0"/><line nr="481" mi="0" ci="2" mb="0" cb="0"/><line nr="483" mi="0" ci="3" mb="0" cb="0"/><line nr="484" mi="0" ci="3" mb="0" cb="0"/><line nr="485" mi="0" ci="4" mb="0" cb="0"/><line nr="487" mi="4" ci="0" mb="0" cb="0"/><line nr="488" mi="5" ci="0" mb="0" cb="0"/><line nr="489" mi="5" ci="0" mb="0" cb="0"/><line nr="495" mi="0" ci="3" mb="0" cb="0"/><line nr="496" mi="2" ci="6" mb="1" cb="1"/><line nr="497" mi="4" ci="0" mb="0" cb="0"/><line nr="498" mi="3" ci="0" mb="0" cb="0"/><line nr="500" mi="4" ci="0" mb="2" cb="0"/><line nr="501" mi="3" ci="0" mb="2" cb="0"/><line nr="502" mi="3" ci="0" mb="0" cb="0"/><line nr="504" mi="5" ci="0" mb="0" cb="0"/><line nr="505" mi="4" ci="0" mb="2" cb="0"/><line nr="506" mi="3" ci="0" mb="2" cb="0"/><line nr="507" mi="3" ci="0" mb="0" cb="0"/><line nr="509" mi="5" ci="0" mb="0" cb="0"/><line nr="510" mi="4" ci="0" mb="2" cb="0"/><line nr="511" mi="3" ci="0" mb="2" cb="0"/><line nr="512" mi="3" ci="0" mb="0" cb="0"/><line nr="514" mi="4" ci="0" mb="0" cb="0"/><line nr="518" mi="0" ci="7" mb="0" cb="0"/><line nr="519" mi="0" ci="2" mb="0" cb="0"/><line nr="521" mi="0" ci="2" mb="0" cb="0"/><line nr="530" mi="3" ci="0" mb="0" cb="0"/><line nr="531" mi="8" ci="0" mb="2" cb="0"/><line nr="532" mi="4" ci="0" mb="0" cb="0"/><line nr="533" mi="3" ci="0" mb="0" cb="0"/><line nr="535" mi="4" ci="0" mb="2" cb="0"/><line nr="537" mi="7" ci="0" mb="0" cb="0"/><line nr="539" mi="3" ci="0" mb="0" cb="0"/><line nr="540" mi="1" ci="0" mb="0" cb="0"/><line nr="541" mi="6" ci="0" mb="0" cb="0"/><line nr="542" mi="1" ci="0" mb="0" cb="0"/><line nr="543" mi="5" ci="0" mb="2" cb="0"/><line nr="545" mi="2" ci="0" mb="0" cb="0"/><line nr="547" mi="6" ci="0" mb="0" cb="0"/><line nr="548" mi="3" ci="0" mb="0" cb="0"/><line nr="549" mi="1" ci="0" mb="0" cb="0"/><line nr="550" mi="6" ci="0" mb="0" cb="0"/><line nr="551" mi="1" ci="0" mb="0" cb="0"/><line nr="553" mi="7" ci="0" mb="0" cb="0"/><line nr="555" mi="4" ci="0" mb="0" cb="0"/><line nr="556" mi="1" ci="0" mb="0" cb="0"/><line nr="557" mi="6" ci="0" mb="0" cb="0"/><line nr="558" mi="1" ci="0" mb="0" cb="0"/><line nr="559" mi="5" ci="0" mb="2" cb="0"/><line nr="562" mi="7" ci="0" mb="0" cb="0"/><line nr="564" mi="4" ci="0" mb="0" cb="0"/><line nr="565" mi="3" ci="0" mb="2" cb="0"/><line nr="567" mi="6" ci="0" mb="0" cb="0"/><line nr="568" mi="1" ci="0" mb="0" cb="0"/><line nr="569" mi="6" ci="0" mb="0" cb="0"/><line nr="570" mi="1" ci="0" mb="0" cb="0"/><line nr="574" mi="1" ci="0" mb="0" cb="0"/><line nr="582" mi="0" ci="6" mb="0" cb="0"/><line nr="584" mi="0" ci="3" mb="1" cb="1"/><line nr="585" mi="0" ci="16" mb="0" cb="0"/><line nr="589" mi="0" ci="2" mb="0" cb="0"/><line nr="591" mi="0" ci="5" mb="0" cb="0"/><line nr="592" mi="1" ci="0" mb="0" cb="0"/><line nr="593" mi="13" ci="0" mb="0" cb="0"/><line nr="594" mi="0" ci="1" mb="0" cb="0"/><line nr="595" mi="0" ci="2" mb="0" cb="0"/><line nr="598" mi="0" ci="3" mb="0" cb="2"/><line nr="601" mi="0" ci="3" mb="0" cb="0"/><line nr="602" mi="1" ci="0" mb="0" cb="0"/><line nr="603" mi="15" ci="0" mb="0" cb="0"/><line nr="605" mi="1" ci="0" mb="0" cb="0"/><line nr="606" mi="13" ci="0" mb="0" cb="0"/><line nr="608" mi="0" ci="1" mb="0" cb="0"/><line nr="611" mi="0" ci="2" mb="0" cb="0"/><line nr="613" mi="0" ci="4" mb="0" cb="0"/><line nr="614" mi="1" ci="0" mb="0" cb="0"/><line nr="615" mi="6" ci="0" mb="0" cb="0"/><line nr="616" mi="0" ci="1" mb="0" cb="0"/><line nr="617" mi="0" ci="3" mb="0" cb="0"/><line nr="626" mi="0" ci="3" mb="0" cb="0"/><line nr="627" mi="0" ci="2" mb="0" cb="0"/><line nr="629" mi="0" ci="8" mb="1" cb="1"/><line nr="631" mi="0" ci="5" mb="0" cb="0"/><line nr="632" mi="0" ci="4" mb="0" cb="2"/><line nr="633" mi="0" ci="3" mb="0" cb="0"/><line nr="634" mi="0" ci="2" mb="0" cb="0"/><line nr="638" mi="0" ci="3" mb="0" cb="2"/><line nr="639" mi="0" ci="8" mb="1" cb="1"/><line nr="640" mi="1" ci="0" mb="0" cb="0"/><line nr="641" mi="0" ci="2" mb="0" cb="0"/><line nr="646" mi="0" ci="3" mb="1" cb="1"/><line nr="647" mi="0" ci="4" mb="0" cb="0"/><line nr="651" mi="0" ci="2" mb="0" cb="2"/><line nr="652" mi="0" ci="1" mb="0" cb="0"/><line nr="656" mi="0" ci="2" mb="1" cb="1"/><line nr="657" mi="5" ci="0" mb="0" cb="0"/><line nr="661" mi="0" ci="5" mb="0" cb="0"/><line nr="662" mi="1" ci="0" mb="0" cb="0"/><line nr="663" mi="13" ci="0" mb="0" cb="0"/><line nr="664" mi="1" ci="0" mb="0" cb="0"/><line nr="665" mi="13" ci="0" mb="0" cb="0"/><line nr="667" mi="1" ci="0" mb="0" cb="0"/><line nr="668" mi="13" ci="0" mb="0" cb="0"/><line nr="669" mi="0" ci="1" mb="0" cb="0"/><line nr="672" mi="0" ci="2" mb="0" cb="0"/><line nr="681" mi="0" ci="4" mb="0" cb="0"/><line nr="682" mi="0" ci="3" mb="0" cb="0"/><line nr="684" mi="0" ci="8" mb="0" cb="2"/><line nr="685" mi="0" ci="4" mb="0" cb="0"/><line nr="686" mi="0" ci="3" mb="0" cb="0"/><line nr="688" mi="0" ci="4" mb="0" cb="2"/><line nr="689" mi="0" ci="4" mb="0" cb="2"/><line nr="690" mi="0" ci="7" mb="0" cb="0"/><line nr="691" mi="0" ci="4" mb="1" cb="1"/><line nr="692" mi="0" ci="7" mb="0" cb="0"/><line nr="694" mi="12" ci="0" mb="0" cb="0"/><line nr="699" mi="0" ci="2" mb="0" cb="0"/><line nr="707" mi="0" ci="3" mb="0" cb="0"/><line nr="708" mi="0" ci="2" mb="1" cb="1"/><line nr="709" mi="2" ci="0" mb="0" cb="0"/><line nr="711" mi="0" ci="4" mb="0" cb="0"/><line nr="712" mi="0" ci="2" mb="1" cb="1"/><line nr="713" mi="2" ci="0" mb="0" cb="0"/><line nr="715" mi="0" ci="5" mb="0" cb="0"/><line nr="727" mi="0" ci="3" mb="1" cb="1"/><line nr="728" mi="5" ci="0" mb="0" cb="0"/><line nr="730" mi="0" ci="3" mb="0" cb="0"/><line nr="742" mi="5" ci="0" mb="0" cb="0"/><line nr="744" mi="2" ci="0" mb="2" cb="0"/><line nr="745" mi="12" ci="0" mb="0" cb="0"/><line nr="747" mi="3" ci="0" mb="0" cb="0"/><line nr="756" mi="5" ci="0" mb="0" cb="0"/><line nr="765" mi="0" ci="3" mb="0" cb="0"/><line nr="777" mi="5" ci="0" mb="0" cb="0"/><line nr="779" mi="2" ci="0" mb="2" cb="0"/><line nr="780" mi="12" ci="0" mb="0" cb="0"/><line nr="782" mi="3" ci="0" mb="0" cb="0"/><line nr="791" mi="5" ci="0" mb="0" cb="0"/><line nr="801" mi="5" ci="0" mb="0" cb="0"/><line nr="803" mi="3" ci="0" mb="2" cb="0"/><line nr="804" mi="5" ci="0" mb="0" cb="0"/><line nr="805" mi="7" ci="0" mb="0" cb="0"/><line nr="808" mi="6" ci="0" mb="0" cb="0"/><line nr="809" mi="1" ci="0" mb="0" cb="0"/><line nr="810" mi="3" ci="0" mb="2" cb="0"/><line nr="811" mi="13" ci="0" mb="0" cb="0"/><line nr="814" mi="1" ci="0" mb="0" cb="0"/><line nr="815" mi="1" ci="0" mb="0" cb="0"/><line nr="816" mi="1" ci="0" mb="0" cb="0"/><line nr="824" mi="0" ci="3" mb="0" cb="0"/><line nr="837" mi="5" ci="0" mb="0" cb="0"/><line nr="839" mi="2" ci="0" mb="2" cb="0"/><line nr="840" mi="12" ci="0" mb="0" cb="0"/><line nr="842" mi="3" ci="0" mb="0" cb="0"/><line nr="851" mi="5" ci="0" mb="0" cb="0"/><line nr="861" mi="5" ci="0" mb="0" cb="0"/><line nr="863" mi="3" ci="0" mb="2" cb="0"/><line nr="864" mi="5" ci="0" mb="0" cb="0"/><line nr="865" mi="7" ci="0" mb="0" cb="0"/><line nr="868" mi="6" ci="0" mb="0" cb="0"/><line nr="869" mi="1" ci="0" mb="0" cb="0"/><line nr="870" mi="3" ci="0" mb="2" cb="0"/><line nr="871" mi="13" ci="0" mb="0" cb="0"/><line nr="873" mi="1" ci="0" mb="0" cb="0"/><line nr="874" mi="1" ci="0" mb="0" cb="0"/><line nr="875" mi="1" ci="0" mb="0" cb="0"/><line nr="883" mi="0" ci="3" mb="0" cb="0"/><line nr="896" mi="5" ci="0" mb="0" cb="0"/><line nr="898" mi="2" ci="0" mb="2" cb="0"/><line nr="899" mi="12" ci="0" mb="0" cb="0"/><line nr="901" mi="3" ci="0" mb="0" cb="0"/><line nr="910" mi="5" ci="0" mb="0" cb="0"/><line nr="920" mi="5" ci="0" mb="0" cb="0"/><line nr="922" mi="3" ci="0" mb="2" cb="0"/><line nr="923" mi="5" ci="0" mb="0" cb="0"/><line nr="924" mi="7" ci="0" mb="0" cb="0"/><line nr="927" mi="3" ci="0" mb="0" cb="0"/><line nr="928" mi="1" ci="0" mb="0" cb="0"/><line nr="929" mi="3" ci="0" mb="2" cb="0"/><line nr="930" mi="13" ci="0" mb="0" cb="0"/><line nr="933" mi="1" ci="0" mb="0" cb="0"/><line nr="934" mi="1" ci="0" mb="0" cb="0"/><line nr="935" mi="1" ci="0" mb="0" cb="0"/><line nr="943" mi="3" ci="0" mb="2" cb="0"/><line nr="944" mi="3" ci="0" mb="0" cb="0"/><line nr="948" mi="3" ci="0" mb="2" cb="0"/><line nr="949" mi="3" ci="0" mb="0" cb="0"/><line nr="953" mi="3" ci="0" mb="2" cb="0"/><line nr="954" mi="3" ci="0" mb="0" cb="0"/><line nr="958" mi="3" ci="0" mb="2" cb="0"/><line nr="959" mi="3" ci="0" mb="0" cb="0"/><line nr="960" mi="1" ci="0" mb="0" cb="0"/><line nr="968" mi="0" ci="2" mb="0" cb="0"/><line nr="969" mi="0" ci="3" mb="0" cb="0"/><line nr="970" mi="0" ci="1" mb="0" cb="0"/><line nr="973" mi="0" ci="3" mb="0" cb="0"/><line nr="983" mi="0" ci="2" mb="0" cb="0"/><line nr="984" mi="0" ci="3" mb="0" cb="0"/><line nr="985" mi="0" ci="1" mb="0" cb="0"/><line nr="988" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="852" covered="734"/><counter type="BRANCH" missed="89" covered="67"/><counter type="LINE" missed="190" covered="186"/><counter type="COMPLEXITY" missed="75" covered="37"/><counter type="METHOD" missed="14" covered="20"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="XACMLConstants.java"><line nr="25" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractPolicy.java"><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="8" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="11" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="2" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="2" cb="0"/><line nr="181" mi="3" ci="0" mb="2" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="7" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="2" cb="0"/><line nr="189" mi="6" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="2" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="2" cb="0"/><line nr="202" mi="6" ci="0" mb="0" cb="0"/><line nr="204" mi="7" ci="0" mb="0" cb="0"/><line nr="205" mi="1" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="16" mb="0" cb="0"/><line nr="224" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="15" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="2"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="8" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="13" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="2"/><line nr="249" mi="0" ci="4" mb="1" cb="1"/><line nr="250" mi="5" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="4" mb="1" cb="1"/><line nr="253" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="8" mb="0" cb="2"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="12" mb="0" cb="2"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="9" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="8" mb="0" cb="2"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="2"/><line nr="281" mi="0" ci="3" mb="1" cb="1"/><line nr="282" mi="0" ci="6" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="2"/><line nr="285" mi="0" ci="8" mb="0" cb="0"/><line nr="286" mi="0" ci="8" mb="1" cb="3"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="2"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="4" mb="1" cb="1"/><line nr="291" mi="3" ci="0" mb="0" cb="0"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><line nr="302" mi="3" ci="0" mb="0" cb="0"/><line nr="306" mi="3" ci="0" mb="0" cb="0"/><line nr="307" mi="1" ci="0" mb="0" cb="0"/><line nr="310" mi="3" ci="0" mb="0" cb="0"/><line nr="314" mi="3" ci="0" mb="0" cb="0"/><line nr="315" mi="1" ci="0" mb="0" cb="0"/><line nr="318" mi="3" ci="0" mb="0" cb="0"/><line nr="322" mi="3" ci="0" mb="0" cb="0"/><line nr="323" mi="1" ci="0" mb="0" cb="0"/><line nr="326" mi="3" ci="0" mb="0" cb="0"/><line nr="330" mi="3" ci="0" mb="0" cb="0"/><line nr="331" mi="1" ci="0" mb="0" cb="0"/><line nr="340" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="0" ci="8" mb="0" cb="2"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="6" mb="0" cb="2"/><line nr="345" mi="0" ci="4" mb="1" cb="1"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="2" mb="0" cb="0"/><line nr="348" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="8" mb="0" cb="2"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="364" mi="0" ci="5" mb="0" cb="2"/><line nr="365" mi="0" ci="8" mb="0" cb="0"/><line nr="367" mi="0" ci="1" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="8" mb="0" cb="2"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="5" mb="0" cb="2"/><line nr="383" mi="0" ci="5" mb="0" cb="0"/><line nr="386" mi="0" ci="1" mb="0" cb="0"/><line nr="394" mi="3" ci="0" mb="0" cb="0"/><line nr="396" mi="8" ci="0" mb="2" cb="0"/><line nr="397" mi="4" ci="0" mb="0" cb="0"/><line nr="398" mi="5" ci="0" mb="2" cb="0"/><line nr="399" mi="6" ci="0" mb="0" cb="0"/><line nr="402" mi="1" ci="0" mb="0" cb="0"/><line nr="410" mi="0" ci="3" mb="0" cb="0"/><line nr="420" mi="3" ci="0" mb="0" cb="0"/><line nr="429" mi="3" ci="0" mb="0" cb="0"/><line nr="439" mi="3" ci="0" mb="0" cb="0"/><line nr="448" mi="3" ci="0" mb="0" cb="0"/><line nr="457" mi="3" ci="0" mb="0" cb="0"/><line nr="466" mi="3" ci="0" mb="0" cb="0"/><line nr="477" mi="3" ci="0" mb="0" cb="0"/><line nr="488" mi="3" ci="0" mb="0" cb="0"/><line nr="497" mi="3" ci="0" mb="0" cb="0"/><line nr="506" mi="3" ci="0" mb="0" cb="0"/><line nr="513" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="5" mb="0" cb="0"/><line nr="542" mi="0" ci="2" mb="1" cb="1"/><line nr="543" mi="6" ci="0" mb="0" cb="0"/><line nr="547" mi="0" ci="4" mb="0" cb="0"/><line nr="549" mi="0" ci="10" mb="0" cb="2"/><line nr="550" mi="0" ci="5" mb="0" cb="0"/><line nr="551" mi="0" ci="1" mb="0" cb="0"/><line nr="553" mi="0" ci="4" mb="0" cb="0"/><line nr="554" mi="0" ci="4" mb="0" cb="0"/><line nr="556" mi="0" ci="1" mb="0" cb="0"/><line nr="570" mi="0" ci="9" mb="0" cb="0"/><line nr="573" mi="0" ci="10" mb="0" cb="4"/><line nr="574" mi="0" ci="2" mb="0" cb="0"/><line nr="579" mi="0" ci="3" mb="0" cb="0"/><line nr="581" mi="0" ci="6" mb="0" cb="4"/><line nr="583" mi="0" ci="2" mb="0" cb="0"/><line nr="587" mi="0" ci="5" mb="0" cb="0"/><line nr="588" mi="0" ci="2" mb="0" cb="0"/><line nr="601" mi="0" ci="7" mb="1" cb="3"/><line nr="602" mi="0" ci="4" mb="0" cb="0"/><line nr="603" mi="0" ci="11" mb="0" cb="2"/><line nr="604" mi="0" ci="4" mb="0" cb="2"/><line nr="605" mi="0" ci="6" mb="0" cb="0"/><line nr="607" mi="0" ci="1" mb="0" cb="0"/><line nr="608" mi="0" ci="5" mb="0" cb="0"/><line nr="611" mi="0" ci="7" mb="1" cb="3"/><line nr="612" mi="0" ci="4" mb="0" cb="0"/><line nr="613" mi="0" ci="11" mb="0" cb="2"/><line nr="614" mi="0" ci="4" mb="0" cb="2"/><line nr="615" mi="0" ci="6" mb="0" cb="0"/><line nr="617" mi="0" ci="1" mb="0" cb="0"/><line nr="618" mi="0" ci="5" mb="0" cb="0"/><line nr="620" mi="0" ci="1" mb="0" cb="0"/><line nr="631" mi="11" ci="0" mb="2" cb="0"/><line nr="632" mi="3" ci="0" mb="0" cb="0"/><line nr="633" mi="1" ci="0" mb="0" cb="0"/><line nr="635" mi="7" ci="0" mb="4" cb="0"/><line nr="637" mi="5" ci="0" mb="2" cb="0"/><line nr="638" mi="5" ci="0" mb="0" cb="0"/><line nr="640" mi="4" ci="0" mb="0" cb="0"/><line nr="643" mi="11" ci="0" mb="2" cb="0"/><line nr="644" mi="3" ci="0" mb="0" cb="0"/><line nr="645" mi="1" ci="0" mb="0" cb="0"/><line nr="647" mi="5" ci="0" mb="2" cb="0"/><line nr="648" mi="5" ci="0" mb="0" cb="0"/><line nr="650" mi="4" ci="0" mb="0" cb="0"/><line nr="654" mi="7" ci="0" mb="4" cb="0"/><line nr="656" mi="4" ci="0" mb="0" cb="0"/><line nr="658" mi="11" ci="0" mb="2" cb="0"/><line nr="659" mi="3" ci="0" mb="0" cb="0"/><line nr="660" mi="1" ci="0" mb="0" cb="0"/><line nr="662" mi="4" ci="0" mb="0" cb="0"/><line nr="664" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="342" covered="461"/><counter type="BRANCH" missed="43" covered="61"/><counter type="LINE" missed="88" covered="100"/><counter type="COMPLEXITY" missed="50" covered="37"/><counter type="METHOD" missed="24" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Indenter.java"><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="7" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="2" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PDPConfig.java"><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="1" cb="1"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="1" cb="1"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="1" cb="1"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="43"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObligationFactory.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="1" cb="1"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="2"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="1" cb="1"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="5" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="33"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnknownIdentifierException.java"><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="4"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MatchResult.java"><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="1" cb="5"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="51"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="5" covered="20"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DOMHelper.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="2"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="3700" covered="2734"/><counter type="BRANCH" missed="375" covered="309"/><counter type="LINE" missed="864" covered="683"/><counter type="COMPLEXITY" missed="387" covered="200"/><counter type="METHOD" missed="150" covered="95"/><counter type="CLASS" missed="5" covered="21"/></package><package name="org/wso2/balana/cond/cluster"><class name="org/wso2/balana/cond/cluster/NOfFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/ComparisonFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/FloorFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/AddFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/NumericConvertFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/SubtractFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/AbsFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/LogicalFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/DivideFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/StringNormalizeFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/HigherOrderFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/MultiplyFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/GeneralBagFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/EqualFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/ConditionBagFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/GeneralSetFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/ConditionSetFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/StringFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="59"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/NotFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/MatchFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/RoundFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/ModFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/cond/cluster/DateMathFunctionCluster"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedFunctions" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="NumericConvertFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LogicalFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SubtractFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringNormalizeFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateMathFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RoundFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConditionBagFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AddFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbsFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MatchFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NotFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultiplyFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DivideFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GeneralBagFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EqualFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HigherOrderFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConditionSetFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComparisonFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FloorFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GeneralSetFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NOfFunctionCluster.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringFunctionCluster.java"><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="11" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="604"/><counter type="BRANCH" missed="0" covered="46"/><counter type="LINE" missed="0" covered="140"/><counter type="COMPLEXITY" missed="0" covered="69"/><counter type="METHOD" missed="0" covered="46"/><counter type="CLASS" missed="0" covered="23"/></package><package name="org/wso2/balana/finder/impl"><class name="org/wso2/balana/finder/impl/FileBasedPolicyFinderModule"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lorg/wso2/balana/finder/PolicyFinder;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findPolicy" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/finder/PolicyFinderResult;" line="99"><counter type="INSTRUCTION" missed="40" covered="63"/><counter type="BRANCH" missed="6" covered="9"/><counter type="LINE" missed="6" covered="16"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findPolicy" desc="(Ljava/net/URI;ILorg/wso2/balana/VersionConstraints;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/finder/PolicyFinderResult;" line="149"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIdReferenceSupported" desc="()Z" line="172"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRequestSupported" desc="()Z" line="177"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadPolicies" desc="()V" line="186"><counter type="INSTRUCTION" missed="58" covered="33"/><counter type="BRANCH" missed="10" covered="4"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadPolicy" desc="(Ljava/lang/String;Lorg/wso2/balana/finder/PolicyFinder;)Lorg/w3c/dom/Element;" line="221"><counter type="INSTRUCTION" missed="39" covered="67"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="5" covered="22"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="207" covered="196"/><counter type="BRANCH" missed="33" covered="18"/><counter type="LINE" missed="36" covered="58"/><counter type="COMPLEXITY" missed="23" covered="13"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/finder/impl/CurrentEnvModule"><method name="&lt;init&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDesignatorSupported" desc="()Z" line="96"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedCategories" desc="()Ljava/util/Set;" line="106"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findAttribute" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;Ljava/net/URI;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="129"><counter type="INSTRUCTION" missed="6" covered="44"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleTime" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="152"><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleDate" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="164"><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleDateTime" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="176"><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeProcessingError" desc="(Ljava/lang/String;)Lorg/wso2/balana/cond/EvaluationResult;" line="187"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeBag" desc="(Lorg/wso2/balana/attr/AttributeValue;)Lorg/wso2/balana/cond/EvaluationResult;" line="196"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="51" covered="99"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="10" covered="21"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/finder/impl/SelectorModule"><method name="&lt;init&gt;" desc="()V" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSelectorSupported" desc="()Z" line="99"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAttribute" desc="(Ljava/lang/String;Ljava/net/URI;Ljava/lang/String;Lorg/w3c/dom/Node;Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/lang/String;)Lorg/wso2/balana/cond/EvaluationResult;" line="107"><counter type="INSTRUCTION" missed="93" covered="319"/><counter type="BRANCH" missed="18" covered="32"/><counter type="LINE" missed="19" covered="85"/><counter type="COMPLEXITY" missed="17" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="93" covered="324"/><counter type="BRANCH" missed="18" covered="32"/><counter type="LINE" missed="19" covered="87"/><counter type="COMPLEXITY" missed="17" covered="11"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FileBasedPolicyFinderModule.java"><line nr="60" mi="3" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="10" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="1" cb="1"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="2"/><line nr="116" mi="3" ci="3" mb="3" cb="1"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="1" cb="2"/><line nr="134" mi="0" ci="3" mb="1" cb="1"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="12" ci="0" mb="0" cb="0"/><line nr="149" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="2" cb="0"/><line nr="151" mi="2" ci="0" mb="2" cb="0"/><line nr="152" mi="3" ci="0" mb="2" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="2" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="6" ci="0" mb="0" cb="0"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="11" mb="0" cb="2"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="1" cb="1"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="1" cb="1"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="2" cb="0"/><line nr="198" mi="16" ci="0" mb="2" cb="0"/><line nr="199" mi="14" ci="0" mb="0" cb="0"/><line nr="201" mi="6" ci="0" mb="4" cb="0"/><line nr="202" mi="15" ci="0" mb="0" cb="0"/><line nr="206" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="2"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="1" cb="1"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="1" ci="0" mb="0" cb="0"/><line nr="248" mi="11" ci="0" mb="0" cb="0"/><line nr="250" mi="5" ci="2" mb="5" cb="1"/><line nr="252" mi="4" ci="2" mb="0" cb="0"/><line nr="253" mi="3" ci="0" mb="0" cb="0"/><line nr="254" mi="9" ci="0" mb="0" cb="0"/><line nr="255" mi="4" ci="1" mb="0" cb="0"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="1" cb="1"/><line nr="260" mi="0" ci="7" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="207" covered="196"/><counter type="BRANCH" missed="33" covered="18"/><counter type="LINE" missed="36" covered="58"/><counter type="COMPLEXITY" missed="23" covered="13"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CurrentEnvModule.java"><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="2"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="2"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="2"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="1" cb="1"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="6" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="1" cb="1"/><line nr="153" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="1" cb="1"/><line nr="165" mi="6" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="1" cb="1"/><line nr="177" mi="6" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="9" ci="0" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="7" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="99"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="10" covered="21"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SelectorModule.java"><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="1" cb="1"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="2"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="1" cb="1"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="2"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="1" cb="1"/><line nr="148" mi="0" ci="4" mb="1" cb="1"/><line nr="149" mi="0" ci="2" mb="1" cb="1"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="1" cb="3"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="2"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="1" cb="1"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="2"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="1" cb="1"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="8" mb="0" cb="2"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="6" mb="0" cb="2"/><line nr="218" mi="0" ci="4" mb="1" cb="1"/><line nr="219" mi="0" ci="2" mb="1" cb="1"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="2" cb="2"/><line nr="234" mi="5" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="7" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="1" ci="0" mb="0" cb="0"/><line nr="242" mi="4" ci="0" mb="0" cb="0"/><line nr="243" mi="4" ci="0" mb="0" cb="0"/><line nr="244" mi="7" ci="0" mb="0" cb="0"/><line nr="245" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="1" cb="1"/><line nr="250" mi="6" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="8" mb="0" cb="2"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="3" ci="9" mb="5" cb="3"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="4" ci="0" mb="0" cb="0"/><line nr="274" mi="0" ci="7" mb="0" cb="0"/><line nr="277" mi="0" ci="9" mb="0" cb="0"/><line nr="279" mi="1" ci="0" mb="0" cb="0"/><line nr="280" mi="4" ci="0" mb="0" cb="0"/><line nr="281" mi="4" ci="0" mb="0" cb="0"/><line nr="282" mi="10" ci="0" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="285" mi="4" ci="0" mb="0" cb="0"/><line nr="286" mi="16" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="324"/><counter type="BRANCH" missed="18" covered="32"/><counter type="LINE" missed="19" covered="87"/><counter type="COMPLEXITY" missed="17" covered="11"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="351" covered="619"/><counter type="BRANCH" missed="55" covered="60"/><counter type="LINE" missed="65" covered="166"/><counter type="COMPLEXITY" missed="46" covered="34"/><counter type="METHOD" missed="4" covered="18"/><counter type="CLASS" missed="0" covered="3"/></package><package name="org/wso2/balana/finder"><class name="org/wso2/balana/finder/PolicyFinderResult"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/AbstractPolicy;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/ctx/Status;)V" line="84"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notApplicable" desc="()Z" line="95"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indeterminate" desc="()Z" line="104"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPolicy" desc="()Lorg/wso2/balana/AbstractPolicy;" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStatus" desc="()Lorg/wso2/balana/ctx/Status;" line="122"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="36"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/finder/AttributeFinder"><method name="&lt;init&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModules" desc="()Ljava/util/List;" line="101"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setModules" desc="(Ljava/util/List;)V" line="111"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAttribute" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;Ljava/net/URI;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="144"><counter type="INSTRUCTION" missed="30" covered="81"/><counter type="BRANCH" missed="9" covered="11"/><counter type="LINE" missed="6" covered="19"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAttribute" desc="(Ljava/lang/String;Ljava/net/URI;Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/lang/String;)Lorg/wso2/balana/cond/EvaluationResult;" line="212"><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findAttribute" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/net/URI;Lorg/w3c/dom/Node;Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/lang/String;)Lorg/wso2/balana/cond/EvaluationResult;" line="272"><counter type="INSTRUCTION" missed="13" covered="79"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="83"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="141" covered="227"/><counter type="BRANCH" missed="25" covered="25"/><counter type="LINE" missed="30" covered="56"/><counter type="COMPLEXITY" missed="17" covered="15"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/finder/ResourceFinderModule"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIdentifier" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isChildSupported" desc="()Z" line="71"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDescendantSupported" desc="()Z" line="81"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalidateCache" desc="()V" line="101"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findChildResources" desc="(Lorg/wso2/balana/attr/AttributeValue;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/finder/ResourceFinderResult;" line="116"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findChildResources" desc="(Lorg/wso2/balana/attr/AttributeValue;)Lorg/wso2/balana/finder/ResourceFinderResult;" line="135"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findDescendantResources" desc="(Lorg/wso2/balana/attr/AttributeValue;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/finder/ResourceFinderResult;" line="151"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findDescendantResources" desc="(Lorg/wso2/balana/attr/AttributeValue;)Lorg/wso2/balana/finder/ResourceFinderResult;" line="170"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/finder/ResourceFinder"><method name="&lt;init&gt;" desc="()V" line="89"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModules" desc="()Ljava/util/List;" line="102"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setModules" desc="(Ljava/util/List;)V" line="112"><counter type="INSTRUCTION" missed="22" covered="23"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findChildResources" desc="(Lorg/wso2/balana/attr/AttributeValue;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/finder/ResourceFinderResult;" line="141"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findChildResources" desc="(Lorg/wso2/balana/attr/AttributeValue;)Lorg/wso2/balana/finder/ResourceFinderResult;" line="176"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findDescendantResources" desc="(Lorg/wso2/balana/attr/AttributeValue;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/finder/ResourceFinderResult;" line="208"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findDescendantResources" desc="(Lorg/wso2/balana/attr/AttributeValue;)Lorg/wso2/balana/finder/ResourceFinderResult;" line="243"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="178" covered="45"/><counter type="BRANCH" missed="21" covered="1"/><counter type="LINE" missed="47" covered="12"/><counter type="COMPLEXITY" missed="16" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/finder/PolicyFinderModule"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIdentifier" desc="()Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRequestSupported" desc="()Z" line="73"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIdReferenceSupported" desc="()Z" line="83"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalidateCache" desc="()V" line="117"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findPolicy" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/finder/PolicyFinderResult;" line="130"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findPolicy" desc="(Ljava/net/URI;ILorg/wso2/balana/VersionConstraints;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/finder/PolicyFinderResult;" line="152"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="3"/><counter type="LINE" missed="6" covered="1"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/finder/ResourceFinderResult"><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="83"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/HashMap;)V" line="97"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;Ljava/util/Map;)V" line="108"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="122"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResources" desc="()Ljava/util/Set;" line="132"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFailures" desc="()Ljava/util/Map;" line="142"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/finder/PolicyFinder"><method name="&lt;init&gt;" desc="()V" line="99"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModules" desc="()Ljava/util/Set;" line="110"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setModules" desc="(Ljava/util/Set;)V" line="120"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="()V" line="141"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findPolicy" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/finder/PolicyFinderResult;" line="163"><counter type="INSTRUCTION" missed="36" covered="40"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="8" covered="14"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findPolicy" desc="(Ljava/net/URI;ILorg/wso2/balana/VersionConstraints;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/finder/PolicyFinderResult;" line="226"><counter type="INSTRUCTION" missed="110" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="94"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="152" covered="115"/><counter type="BRANCH" missed="19" covered="15"/><counter type="LINE" missed="34" covered="37"/><counter type="COMPLEXITY" missed="14" covered="10"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/finder/AttributeFinderModule"><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIdentifier" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDesignatorSupported" desc="()Z" line="79"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSelectorSupported" desc="()Z" line="89"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedCategories" desc="()Ljava/util/Set;" line="102"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSupportedIds" desc="()Ljava/util/Set;" line="113"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invalidateCache" desc="()V" line="133"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findAttribute" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;Ljava/net/URI;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/cond/EvaluationResult;" line="152"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findAttribute" desc="(Ljava/lang/String;Ljava/net/URI;Ljava/lang/String;Lorg/w3c/dom/Node;Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/lang/String;)Lorg/wso2/balana/cond/EvaluationResult;" line="176"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="9"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ResourceFinderResult.java"><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="7" ci="0" mb="0" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PolicyFinder.java"><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="2"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="1" cb="1"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="1" cb="1"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="1" cb="1"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="2"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="1" cb="1"/><line nr="173" mi="8" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="2"/><line nr="183" mi="0" ci="2" mb="1" cb="1"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="6" ci="0" mb="0" cb="0"/><line nr="189" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="2"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="229" mi="5" ci="0" mb="4" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="2" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="236" mi="7" ci="0" mb="0" cb="0"/><line nr="240" mi="3" ci="0" mb="2" cb="0"/><line nr="241" mi="8" ci="0" mb="0" cb="0"/><line nr="242" mi="9" ci="0" mb="0" cb="0"/><line nr="244" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="3" ci="0" mb="2" cb="0"/><line nr="250" mi="2" ci="0" mb="2" cb="0"/><line nr="251" mi="8" ci="0" mb="0" cb="0"/><line nr="252" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="6" ci="0" mb="0" cb="0"/><line nr="256" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="1" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="2" cb="0"/><line nr="267" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="11" ci="0" mb="0" cb="0"/><line nr="270" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="152" covered="115"/><counter type="BRANCH" missed="19" covered="15"/><counter type="LINE" missed="34" covered="37"/><counter type="COMPLEXITY" missed="14" covered="10"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResourceFinder.java"><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="1" cb="1"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="2" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="2" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="2" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="2" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="8" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="2" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="2" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="8" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="2" cb="0"/><line nr="211" mi="5" ci="0" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="217" mi="3" ci="0" mb="2" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="8" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="243" mi="4" ci="0" mb="0" cb="0"/><line nr="245" mi="3" ci="0" mb="2" cb="0"/><line nr="246" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="4" ci="0" mb="0" cb="0"/><line nr="252" mi="3" ci="0" mb="2" cb="0"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="1" ci="0" mb="0" cb="0"/><line nr="257" mi="8" ci="0" mb="0" cb="0"/><line nr="258" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="178" covered="45"/><counter type="BRANCH" missed="21" covered="1"/><counter type="LINE" missed="47" covered="12"/><counter type="COMPLEXITY" missed="16" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AttributeFinderModule.java"><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="6" ci="0" mb="0" cb="0"/><line nr="176" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="9"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResourceFinderModule.java"><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PolicyFinderModule.java"><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="3"/><counter type="LINE" missed="6" covered="1"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PolicyFinderResult.java"><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="10" mb="1" cb="3"/><line nr="104" mi="2" ci="5" mb="1" cb="1"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="36"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AttributeFinder.java"><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="2"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="2"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="3" ci="3" mb="3" cb="1"/><line nr="156" mi="7" ci="0" mb="2" cb="0"/><line nr="157" mi="5" ci="0" mb="2" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="8" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="1" cb="1"/><line nr="168" mi="8" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="2"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="2"/><line nr="189" mi="0" ci="3" mb="1" cb="1"/><line nr="190" mi="0" ci="11" mb="0" cb="0"/><line nr="195" mi="0" ci="9" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="215" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="2" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="222" mi="9" ci="0" mb="0" cb="0"/><line nr="226" mi="3" ci="0" mb="2" cb="0"/><line nr="227" mi="8" ci="0" mb="0" cb="0"/><line nr="228" mi="4" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="2" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="2" cb="0"/><line nr="237" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="4" ci="0" mb="0" cb="0"/><line nr="239" mi="1" ci="0" mb="0" cb="0"/><line nr="241" mi="1" ci="0" mb="0" cb="0"/><line nr="244" mi="3" ci="0" mb="2" cb="0"/><line nr="247" mi="3" ci="0" mb="2" cb="0"/><line nr="248" mi="10" ci="0" mb="0" cb="0"/><line nr="252" mi="9" ci="0" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="2"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="9" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="2"/><line nr="287" mi="0" ci="8" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="1" cb="1"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="2"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="298" mi="0" ci="4" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><line nr="301" mi="0" ci="1" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="1" cb="1"/><line nr="307" mi="3" ci="0" mb="2" cb="0"/><line nr="308" mi="10" ci="0" mb="0" cb="0"/><line nr="312" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="141" covered="227"/><counter type="BRANCH" missed="25" covered="25"/><counter type="LINE" missed="30" covered="56"/><counter type="COMPLEXITY" missed="17" covered="15"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="610" covered="435"/><counter type="BRANCH" missed="67" covered="45"/><counter type="LINE" missed="153" covered="121"/><counter type="COMPLEXITY" missed="78" covered="39"/><counter type="METHOD" missed="38" covered="23"/><counter type="CLASS" missed="2" covered="6"/></package><package name="org/wso2/balana/combine/xacml2"><class name="org/wso2/balana/combine/xacml2/DenyOverridesPolicyAlg"><method name="&lt;init&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/ctx/AbstractResult;" line="114"><counter type="INSTRUCTION" missed="5" covered="91"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="108"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="5" covered="31"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml2/FirstApplicablePolicyAlg"><method name="&lt;init&gt;" desc="()V" line="87"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/ctx/AbstractResult;" line="104"><counter type="INSTRUCTION" missed="7" covered="44"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="76"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="57"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="6" covered="18"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml2/OrderedDenyOverridesRuleAlg"><method name="&lt;init&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml2/PermitOverridesRuleAlg"><method name="&lt;init&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/ctx/AbstractResult;" line="114"><counter type="INSTRUCTION" missed="2" covered="99"/><counter type="BRANCH" missed="5" covered="19"/><counter type="LINE" missed="1" covered="30"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="116"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="5" covered="38"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml2/OrderedDenyOverridesPolicyAlg"><method name="&lt;init&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml2/OrderedPermitOverridesPolicyAlg"><method name="&lt;init&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml2/PermitOverridesPolicyAlg"><method name="&lt;init&gt;" desc="()V" line="89"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="101"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/ctx/AbstractResult;" line="115"><counter type="INSTRUCTION" missed="8" covered="106"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="123"/><counter type="BRANCH" missed="8" covered="20"/><counter type="LINE" missed="7" covered="37"/><counter type="COMPLEXITY" missed="7" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml2/OrderedPermitOverridesRuleAlg"><method name="&lt;init&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml2/FirstApplicableRuleAlg"><method name="&lt;init&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/ctx/AbstractResult;" line="103"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="43"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml2/OnlyOneApplicablePolicyAlg"><method name="&lt;init&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/ctx/AbstractResult;" line="105"><counter type="INSTRUCTION" missed="7" covered="66"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="2" covered="21"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="79"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="6" covered="27"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml2/DenyOverridesRuleAlg"><method name="&lt;init&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/ctx/AbstractResult;" line="115"><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="119"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="4" covered="39"/><counter type="COMPLEXITY" missed="4" covered="13"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FirstApplicableRuleAlg.java"><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="1" cb="1"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="2"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="2"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="43"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PermitOverridesPolicyAlg.java"><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="1" cb="1"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="2"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="1" cb="1"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="2" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="1" cb="1"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="2"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="2"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="12" mb="2" cb="6"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="1" cb="1"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="2"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="2"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="123"/><counter type="BRANCH" missed="8" covered="20"/><counter type="LINE" missed="7" covered="37"/><counter type="COMPLEXITY" missed="7" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OrderedDenyOverridesRuleAlg.java"><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="1" cb="1"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OrderedPermitOverridesPolicyAlg.java"><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="1" cb="1"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DenyOverridesRuleAlg.java"><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="1" cb="1"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="2"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="2"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="12" mb="2" cb="6"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="1" cb="1"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="2"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="2"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="2"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="2"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="2"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="119"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="4" covered="39"/><counter type="COMPLEXITY" missed="4" covered="13"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OnlyOneApplicablePolicyAlg.java"><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="1" cb="1"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="1" cb="1"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="2"/><line nr="124" mi="0" ci="2" mb="0" cb="2"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="9" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="2"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="79"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="6" covered="27"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OrderedPermitOverridesRuleAlg.java"><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="1" cb="1"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OrderedDenyOverridesPolicyAlg.java"><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="1" cb="1"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FirstApplicablePolicyAlg.java"><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="1" cb="1"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="1" cb="1"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="1" cb="1"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="1" cb="3"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="57"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="6" covered="18"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PermitOverridesRuleAlg.java"><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="1" cb="1"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="2"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="2"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="12" mb="2" cb="6"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="1" cb="1"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="1" cb="1"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="2"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="2"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="2"/><line nr="170" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="1" cb="1"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="116"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="5" covered="38"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DenyOverridesPolicyAlg.java"><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="1" cb="1"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="1" cb="1"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="1" cb="1"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="2"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="12" mb="2" cb="6"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="2"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="2"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="108"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="5" covered="31"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="150" covered="697"/><counter type="BRANCH" missed="34" covered="106"/><counter type="LINE" missed="53" covered="229"/><counter type="COMPLEXITY" missed="33" covered="70"/><counter type="METHOD" missed="0" covered="33"/><counter type="CLASS" missed="0" covered="11"/></package><package name="org/wso2/balana/combine/xacml3"><class name="org/wso2/balana/combine/xacml3/PermitOverridesPolicyAlg"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/ctx/AbstractResult;" line="93"><counter type="INSTRUCTION" missed="156" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="167" covered="17"/><counter type="BRANCH" missed="39" covered="1"/><counter type="LINE" missed="56" covered="8"/><counter type="COMPLEXITY" missed="21" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml3/DenyUnlessPermitPolicyAlg"><method name="&lt;init&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/ctx/AbstractResult;" line="81"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="72" covered="13"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="19" covered="6"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml3/OrderedDenyOverridesPolicyAlg"><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml3/OrderedPermitOverridesRuleAlg"><method name="&lt;init&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml3/PermitUnlessDenyRuleAlg"><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="82"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="combine" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/ctx/AbstractResult;" line="89"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="69" covered="13"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="19" covered="6"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml3/OrderedDenyOverridesRuleAlg"><method name="&lt;init&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml3/DenyOverridesRuleAlg"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/ctx/AbstractResult;" line="94"><counter type="INSTRUCTION" missed="54" covered="72"/><counter type="BRANCH" missed="20" covered="8"/><counter type="LINE" missed="18" covered="23"/><counter type="COMPLEXITY" missed="13" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="65" covered="89"/><counter type="BRANCH" missed="21" covered="9"/><counter type="LINE" missed="22" covered="31"/><counter type="COMPLEXITY" missed="14" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml3/DenyOverridesPolicyAlg"><method name="&lt;init&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/ctx/AbstractResult;" line="95"><counter type="INSTRUCTION" missed="150" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="51" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="161" covered="17"/><counter type="BRANCH" missed="39" covered="1"/><counter type="LINE" missed="55" covered="8"/><counter type="COMPLEXITY" missed="21" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml3/DenyUnlessPermitRuleAlg"><method name="&lt;init&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="combine" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/ctx/AbstractResult;" line="90"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="69" covered="13"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="19" covered="6"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml3/OrderedPermitOverridesPolicyAlg"><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml3/PermitUnlessDenyPolicyAlg"><method name="&lt;init&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="85"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="combine" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/ctx/AbstractResult;" line="92"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="76" covered="13"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="21" covered="6"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/combine/xacml3/PermitOverridesRuleAlg"><method name="&lt;init&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;Ljava/util/List;Ljava/util/List;)Lorg/wso2/balana/ctx/AbstractResult;" line="94"><counter type="INSTRUCTION" missed="117" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="128" covered="17"/><counter type="BRANCH" missed="27" covered="1"/><counter type="LINE" missed="42" covered="8"/><counter type="COMPLEXITY" missed="15" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="OrderedPermitOverridesPolicyAlg.java"><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="1" cb="1"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PermitUnlessDenyPolicyAlg.java"><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="1" cb="1"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="9" ci="0" mb="2" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="2" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="2" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="2" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="76" covered="13"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="21" covered="6"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PermitUnlessDenyRuleAlg.java"><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="1" cb="1"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="2" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="2" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="2" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="13"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="19" covered="6"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OrderedDenyOverridesPolicyAlg.java"><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="1" cb="1"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OrderedPermitOverridesRuleAlg.java"><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="1" cb="1"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DenyOverridesRuleAlg.java"><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="1" cb="1"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="1" cb="1"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="1" cb="1"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="1" cb="1"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="2" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="2" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="2" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="2" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="4" ci="2" mb="5" cb="1"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="1" cb="1"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="1" cb="1"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="2" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="65" covered="89"/><counter type="BRANCH" missed="21" covered="9"/><counter type="LINE" missed="22" covered="31"/><counter type="COMPLEXITY" missed="14" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DenyUnlessPermitPolicyAlg.java"><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="1" cb="1"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="9" ci="0" mb="2" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="2" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="2" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="72" covered="13"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="19" covered="6"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PermitOverridesRuleAlg.java"><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="1" cb="1"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="2" cb="0"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="2" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="2" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="2" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="2" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="2" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="2" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="6" ci="0" mb="6" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="2" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="2" cb="0"/><line nr="160" mi="7" ci="0" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="128" covered="17"/><counter type="BRANCH" missed="27" covered="1"/><counter type="LINE" missed="42" covered="8"/><counter type="COMPLEXITY" missed="15" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OrderedDenyOverridesRuleAlg.java"><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="1" cb="1"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PermitOverridesPolicyAlg.java"><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="1" cb="1"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="2" cb="0"/><line nr="118" mi="3" ci="0" mb="2" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="2" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="2" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="6" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="2" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="2" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="2" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="2" cb="0"/><line nr="154" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="2" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="2" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="2" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="6" ci="0" mb="6" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="2" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="2" cb="0"/><line nr="183" mi="7" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="2" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="167" covered="17"/><counter type="BRANCH" missed="39" covered="1"/><counter type="LINE" missed="56" covered="8"/><counter type="COMPLEXITY" missed="21" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DenyOverridesPolicyAlg.java"><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="1" cb="1"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="2" cb="0"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="2" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="2" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="2" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="2" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="6" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="2" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="2" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="2" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="2" cb="0"/><line nr="154" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="2" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="2" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="2" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="6" ci="0" mb="6" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="2" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="2" cb="0"/><line nr="183" mi="7" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="2" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="161" covered="17"/><counter type="BRANCH" missed="39" covered="1"/><counter type="LINE" missed="55" covered="8"/><counter type="COMPLEXITY" missed="21" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DenyUnlessPermitRuleAlg.java"><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="1" cb="1"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="9" ci="0" mb="2" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="2" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="13"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="19" covered="6"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="851" covered="244"/><counter type="BRANCH" missed="162" covered="20"/><counter type="LINE" missed="269" covered="103"/><counter type="COMPLEXITY" missed="100" covered="30"/><counter type="METHOD" missed="10" covered="29"/><counter type="CLASS" missed="0" covered="12"/></package><package name="org/wso2/balana/ctx"><class name="org/wso2/balana/ctx/ResultFactory"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="(ILorg/wso2/balana/ctx/Status;I)Lorg/wso2/balana/ctx/AbstractResult;" line="46"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResult" desc="(ILorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/ctx/AbstractResult;" line="63"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="(ILorg/wso2/balana/ctx/Status;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/ctx/AbstractResult;" line="81"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="(ILjava/util/List;Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/ctx/AbstractResult;" line="101"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="(ILorg/wso2/balana/ctx/Status;Ljava/util/List;Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/ctx/AbstractResult;" line="123"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFactory" desc="()Lorg/wso2/balana/ctx/ResultFactory;" line="139"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="43" covered="78"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="6" covered="16"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/Attribute"><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/attr/DateTimeAttribute;Lorg/wso2/balana/attr/AttributeValue;ZI)V" line="110"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/attr/DateTimeAttribute;Lorg/wso2/balana/attr/AttributeValue;I)V" line="125"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;Lorg/wso2/balana/attr/DateTimeAttribute;Ljava/util/List;ZI)V" line="83"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;I)Lorg/wso2/balana/ctx/Attribute;" line="160"><counter type="INSTRUCTION" missed="50" covered="153"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="12" covered="42"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/net/URI;" line="257"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/net/URI;" line="266"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIssuer" desc="()Ljava/lang/String;" line="275"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIssueInstant" desc="()Lorg/wso2/balana/attr/DateTimeAttribute;" line="284"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIncludeInResult" desc="()Z" line="293"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValues" desc="()Ljava/util/List;" line="303"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Lorg/wso2/balana/attr/AttributeValue;" line="315"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="328"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="342"><counter type="INSTRUCTION" missed="32" covered="58"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="111" covered="285"/><counter type="BRANCH" missed="10" covered="26"/><counter type="LINE" missed="22" covered="74"/><counter type="COMPLEXITY" missed="11" covered="20"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/AbstractResult"><method name="&lt;init&gt;" desc="(ILorg/wso2/balana/ctx/Status;I)V" line="91"><counter type="INSTRUCTION" missed="14" covered="35"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILorg/wso2/balana/ctx/Status;Ljava/util/List;Ljava/util/List;I)V" line="91"><counter type="INSTRUCTION" missed="8" covered="51"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObligations" desc="()Ljava/util/List;" line="181"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdvices" desc="()Ljava/util/List;" line="194"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecision" desc="()I" line="207"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStatus" desc="()Lorg/wso2/balana/ctx/Status;" line="217"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVersion" desc="()I" line="226"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="235"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="76"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="137"/><counter type="BRANCH" missed="11" covered="29"/><counter type="LINE" missed="5" covered="32"/><counter type="COMPLEXITY" missed="8" covered="21"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/AbstractRequestCtx"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDocumentRoot" desc="()Lorg/w3c/dom/Node;" line="56"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSearch" desc="(Z)V" line="60"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSearch" desc="()Z" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXacmlVersion" desc="()I" line="68"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setXacmlVersion" desc="(I)V" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributesSet" desc="()Ljava/util/Set;" line="81"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="15"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/ResourceActionMapping"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="14"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEnvName" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEnvName" desc="(Ljava/lang/String;)V" line="25"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResourceName" desc="()Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setResourceName" desc="(Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActionName" desc="()Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setActionName" desc="(Ljava/lang/String;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/ctx/AttributeAssignment"><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/ctx/AttributeAssignment;" line="90"><counter type="INSTRUCTION" missed="43" covered="57"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="10" covered="16"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeId" desc="()Ljava/net/URI;" line="136"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCategory" desc="()Ljava/net/URI;" line="140"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssuer" desc="()Ljava/lang/String;" line="144"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContent" desc="()Ljava/lang/String;" line="148"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="159"><counter type="INSTRUCTION" missed="18" covered="41"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="187"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="83" covered="114"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="19" covered="31"/><counter type="COMPLEXITY" missed="11" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/RequestCtxFactory"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRequestCtx" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/ctx/AbstractRequestCtx;" line="62"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRequestCtx" desc="(Ljava/lang/String;)Lorg/wso2/balana/ctx/AbstractRequestCtx;" line="88"><counter type="INSTRUCTION" missed="11" covered="30"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRequestCtx" desc="(Ljava/io/InputStream;)Lorg/wso2/balana/ctx/AbstractRequestCtx;" line="122"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFactory" desc="()Lorg/wso2/balana/ctx/RequestCtxFactory;" line="149"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXacmlRequest" desc="(Ljava/lang/String;)Lorg/w3c/dom/Element;" line="170"><counter type="INSTRUCTION" missed="27" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="7" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="121" covered="75"/><counter type="BRANCH" missed="21" covered="9"/><counter type="LINE" missed="31" covered="23"/><counter type="COMPLEXITY" missed="15" covered="7"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/ResponseCtx"><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/ctx/AbstractResult;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;I)V" line="63"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/ctx/ResponseCtx;" line="101"><counter type="INSTRUCTION" missed="5" covered="32"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;I)Lorg/wso2/balana/ctx/ResponseCtx;" line="129"><counter type="INSTRUCTION" missed="5" covered="47"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResults" desc="()Ljava/util/Set;" line="155"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="165"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="178"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="164"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="2" covered="42"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/StatusDetail"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="75"><counter type="INSTRUCTION" missed="14" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="75"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/w3c/dom/Node;)V" line="75"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="textToNode" desc="(Ljava/lang/String;)Lorg/w3c/dom/Node;" line="150"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nodeToText" desc="(Lorg/w3c/dom/Node;)Ljava/lang/String;" line="170"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/ctx/StatusDetail;" line="197"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMissingAttributeDetails" desc="()Ljava/util/List;" line="210"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEncoded" desc="()Ljava/lang/String;" line="226"><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="143" covered="55"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="35" covered="12"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/MissingAttributeDetail"><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;Ljava/util/List;I)V" line="55"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;Ljava/util/List;I)V" line="98"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;I)V" line="111"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/ctx/MissingAttributeDetail;" line="125"><counter type="INSTRUCTION" missed="174" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="45" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEncoded" desc="()Ljava/lang/String;" line="211"><counter type="INSTRUCTION" missed="58" covered="74"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="7" covered="11"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="250" covered="98"/><counter type="BRANCH" missed="23" covered="7"/><counter type="LINE" missed="56" covered="20"/><counter type="COMPLEXITY" missed="18" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/BasicEvaluationCtx"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRequestRoot" desc="()Lorg/w3c/dom/Node;" line="75"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSearching" desc="()Z" line="83"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentTime" desc="()Lorg/wso2/balana/attr/TimeAttribute;" line="101"><counter type="INSTRUCTION" missed="3" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentDate" desc="()Lorg/wso2/balana/attr/DateAttribute;" line="123"><counter type="INSTRUCTION" missed="3" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentDateTime" desc="()Lorg/wso2/balana/attr/DateTimeAttribute;" line="145"><counter type="INSTRUCTION" missed="3" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttribute" desc="(Ljava/lang/String;Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;)Lorg/wso2/balana/cond/EvaluationResult;" line="172"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dateTimeHelper" desc="()J" line="192"><counter type="INSTRUCTION" missed="28" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="callHelper" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;Ljava/net/URI;)Lorg/wso2/balana/cond/EvaluationResult;" line="226"><counter type="INSTRUCTION" missed="12" covered="14"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="74" covered="83"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="16" covered="20"/><counter type="COMPLEXITY" missed="10" covered="8"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/EvaluationCtxFactory"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEvaluationCtx" desc="(Lorg/wso2/balana/ctx/AbstractRequestCtx;Lorg/wso2/balana/PDPConfig;)Lorg/wso2/balana/ctx/EvaluationCtx;" line="42"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFactory" desc="()Lorg/wso2/balana/ctx/EvaluationCtxFactory;" line="57"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="38"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/InputParser"><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="100"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseInput" desc="(Ljava/io/InputStream;Ljava/lang/String;)Lorg/w3c/dom/Node;" line="115"><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="warning" desc="(Lorg/xml/sax/SAXParseException;)V" line="161"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Lorg/xml/sax/SAXParseException;)V" line="174"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fatalError" desc="(Lorg/xml/sax/SAXParseException;)V" line="189"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="179" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/ctx/Status"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/lang/String;)V" line="121"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/lang/String;Lorg/wso2/balana/ctx/StatusDetail;)V" line="139"><counter type="INSTRUCTION" missed="12" covered="35"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCode" desc="()Ljava/util/List;" line="161"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="170"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDetail" desc="()Lorg/wso2/balana/ctx/StatusDetail;" line="179"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOkInstance" desc="()Lorg/wso2/balana/ctx/Status;" line="189"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/ctx/Status;" line="204"><counter type="INSTRUCTION" missed="8" covered="54"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseStatusCode" desc="(Lorg/w3c/dom/Node;)Ljava/util/List;" line="238"><counter type="INSTRUCTION" missed="14" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="258"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="271"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodeStatusCode" desc="(Ljava/util/Iterator;Ljava/lang/StringBuilder;)V" line="293"><counter type="INSTRUCTION" missed="17" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="96"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="209"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="10" covered="54"/><counter type="COMPLEXITY" missed="9" covered="17"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="StatusDetail.java"><line nr="75" mi="6" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="10" mb="0" cb="2"/><line nr="99" mi="0" ci="14" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="11" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="8" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="12" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="10" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="7" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="10" ci="0" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="5" ci="0" mb="2" cb="0"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="1" cb="1"/><line nr="227" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="143" covered="55"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="35" covered="12"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MissingAttributeDetail.java"><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="8" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="8" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="2" cb="0"/><line nr="136" mi="8" ci="0" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="8" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="6" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="8" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="6" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="2" cb="0"/><line nr="160" mi="8" ci="0" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="6" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="2" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="6" ci="0" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="8" ci="0" mb="2" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="2" cb="0"/><line nr="182" mi="3" ci="0" mb="2" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="8" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="6" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="7" ci="0" mb="0" cb="0"/><line nr="194" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="10" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="1" cb="1"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="1" cb="1"/><line nr="216" mi="5" ci="0" mb="0" cb="0"/><line nr="219" mi="0" ci="7" mb="2" cb="2"/><line nr="220" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="0" ci="17" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="1" cb="1"/><line nr="226" mi="0" ci="14" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="1" cb="1"/><line nr="230" mi="14" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="9" mb="0" cb="0"/><line nr="235" mi="4" ci="3" mb="3" cb="1"/><line nr="236" mi="11" ci="0" mb="2" cb="0"/><line nr="237" mi="13" ci="0" mb="0" cb="0"/><line nr="238" mi="1" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="9" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="250" covered="98"/><counter type="BRANCH" missed="23" covered="7"/><counter type="LINE" missed="56" covered="20"/><counter type="COMPLEXITY" missed="18" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BasicEvaluationCtx.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="1" cb="1"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="1" cb="1"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="1" cb="1"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="4" ci="0" mb="2" cb="0"/><line nr="173" mi="9" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="6" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="1" cb="1"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="1" cb="1"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="6" ci="0" mb="0" cb="0"/><line nr="207" mi="9" ci="0" mb="0" cb="0"/><line nr="208" mi="9" ci="0" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="1" cb="1"/><line nr="227" mi="0" ci="10" mb="0" cb="0"/><line nr="229" mi="3" ci="0" mb="2" cb="0"/><line nr="230" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="83"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="16" covered="20"/><counter type="COMPLEXITY" missed="10" covered="8"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Status.java"><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="2"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="10" mb="2" cb="2"/><line nr="145" mi="0" ci="2" mb="1" cb="1"/><line nr="146" mi="12" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="8" mb="0" cb="2"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="2"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="2"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="1" cb="1"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="1" cb="1"/><line nr="223" mi="5" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="7" mb="0" cb="0"/><line nr="238" mi="0" ci="6" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="2" ci="6" mb="1" cb="1"/><line nr="245" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="8" ci="0" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="2"/><line nr="276" mi="0" ci="9" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="2"/><line nr="280" mi="0" ci="6" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="1" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="1" cb="1"/><line nr="296" mi="8" ci="0" mb="0" cb="0"/><line nr="297" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="5" ci="0" mb="0" cb="0"/><line nr="300" mi="0" ci="8" mb="0" cb="0"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="57" covered="209"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="10" covered="54"/><counter type="COMPLEXITY" missed="9" covered="17"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractRequestCtx.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="15"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractResult.java"><line nr="76" mi="0" ci="20" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="9" ci="11" mb="8" cb="6"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="3" ci="17" mb="3" cb="11"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="2"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="2"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="2"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="2"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="2"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="4" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="0" cb="0"/><line nr="237" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="137"/><counter type="BRANCH" missed="11" covered="29"/><counter type="LINE" missed="5" covered="32"/><counter type="COMPLEXITY" missed="8" covered="21"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InputParser.java"><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="2" cb="0"/><line nr="94" mi="8" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="2" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="15" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="2" cb="0"/><line nr="149" mi="14" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="2" cb="0"/><line nr="162" mi="13" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="2" cb="0"/><line nr="175" mi="13" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="2" cb="0"/><line nr="190" mi="13" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="179" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RequestCtxFactory.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="2" cb="0"/><line nr="65" mi="5" ci="0" mb="2" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="7" ci="0" mb="2" cb="0"/><line nr="68" mi="3" ci="0" mb="2" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="1" cb="1"/><line nr="92" mi="0" ci="5" mb="0" cb="2"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="1" cb="1"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="2" cb="0"/><line nr="126" mi="5" ci="0" mb="2" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="7" ci="0" mb="2" cb="0"/><line nr="129" mi="3" ci="0" mb="2" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="2"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="1" cb="1"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="5" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="1" cb="1"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><line nr="180" mi="6" ci="0" mb="0" cb="0"/><line nr="182" mi="1" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="2" mb="0" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="6" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="1" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="121" covered="75"/><counter type="BRANCH" missed="21" covered="9"/><counter type="LINE" missed="31" covered="23"/><counter type="COMPLEXITY" missed="15" covered="7"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResourceActionMapping.java"><line nr="9" mi="2" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="2" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="1" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EvaluationCtxFactory.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="2"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="2"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="1" cb="1"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="5" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="38"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Attribute.java"><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="16" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="16" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="1" cb="1"/><line nr="172" mi="8" ci="0" mb="0" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="8" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="2"/><line nr="187" mi="0" ci="8" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="189" mi="6" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="2"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="2"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="201" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="2"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="2"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="1" cb="1"/><line nr="213" mi="4" ci="0" mb="0" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="6" ci="0" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="8" mb="0" cb="2"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="2"/><line nr="226" mi="0" ci="3" mb="0" cb="2"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="8" mb="0" cb="0"/><line nr="230" mi="1" ci="0" mb="0" cb="0"/><line nr="231" mi="6" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="7" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="239" mi="0" ci="7" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="1" cb="1"/><line nr="246" mi="5" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="11" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="1" cb="1"/><line nr="316" mi="0" ci="6" mb="0" cb="0"/><line nr="318" mi="2" ci="0" mb="0" cb="0"/><line nr="328" mi="4" ci="0" mb="0" cb="0"/><line nr="329" mi="3" ci="0" mb="0" cb="0"/><line nr="330" mi="3" ci="0" mb="0" cb="0"/><line nr="342" mi="0" ci="10" mb="0" cb="0"/><line nr="344" mi="0" ci="4" mb="1" cb="1"/><line nr="345" mi="0" ci="10" mb="0" cb="0"/><line nr="347" mi="10" ci="0" mb="0" cb="0"/><line nr="348" mi="3" ci="0" mb="2" cb="0"/><line nr="349" mi="10" ci="0" mb="0" cb="0"/><line nr="353" mi="0" ci="3" mb="1" cb="1"/><line nr="354" mi="9" ci="0" mb="0" cb="0"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="7" mb="2" cb="2"/><line nr="360" mi="0" ci="11" mb="0" cb="2"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="1" mb="0" cb="0"/><line nr="365" mi="0" ci="4" mb="0" cb="0"/><line nr="366" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="111" covered="285"/><counter type="BRANCH" missed="10" covered="26"/><counter type="LINE" missed="22" covered="74"/><counter type="COMPLEXITY" missed="11" covered="20"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResponseCtx.java"><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="2"/><line nr="104" mi="0" ci="5" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="1" cb="1"/><line nr="107" mi="0" ci="3" mb="1" cb="1"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="8" mb="0" cb="2"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="2"/><line nr="135" mi="0" ci="3" mb="0" cb="2"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="1" cb="1"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="2"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="2"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="164"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="2" covered="42"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AttributeAssignment.java"><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="1" cb="1"/><line nr="96" mi="8" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="8" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="1" cb="1"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="1" cb="1"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="9" mb="0" cb="0"/><line nr="161" mi="0" ci="9" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="1" cb="1"/><line nr="164" mi="9" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="1" cb="1"/><line nr="168" mi="9" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="1" cb="1"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="114"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="19" covered="31"/><counter type="COMPLEXITY" missed="11" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResultFactory.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="2" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="2"/><line nr="64" mi="0" ci="9" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="2"/><line nr="82" mi="0" ci="9" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="0" ci="9" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="2" cb="0"/><line nr="124" mi="9" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="2"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="1" cb="1"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="5" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="78"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="6" covered="16"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1158" covered="1351"/><counter type="BRANCH" missed="112" covered="136"/><counter type="LINE" missed="266" covered="339"/><counter type="COMPLEXITY" missed="123" covered="112"/><counter type="METHOD" missed="43" covered="68"/><counter type="CLASS" missed="2" covered="12"/></package><package name="org/wso2/balana/xacml2"><class name="org/wso2/balana/xacml2/Obligation"><method name="&lt;init&gt;" desc="(Ljava/net/URI;ILjava/util/List;)V" line="61"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/xacml2/Obligation;" line="81"><counter type="INSTRUCTION" missed="139" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/ObligationResult;" line="132"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssignments" desc="()Ljava/util/List;" line="142"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="151"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="164"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="234" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/xacml2/TargetMatchGroup"><method name="&lt;init&gt;" desc="(Ljava/util/List;I)V" line="78"><counter type="INSTRUCTION" missed="7" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;ILorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/xacml2/TargetMatchGroup;" line="99"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/MatchResult;" line="123"><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="145"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="158"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="59" covered="97"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="12" covered="23"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/xacml2/Target"><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/xacml2/TargetSection;Lorg/wso2/balana/xacml2/TargetSection;Lorg/wso2/balana/xacml2/TargetSection;)V" line="86"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/xacml2/TargetSection;Lorg/wso2/balana/xacml2/TargetSection;Lorg/wso2/balana/xacml2/TargetSection;Lorg/wso2/balana/xacml2/TargetSection;)V" line="112"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/wso2/balana/xacml2/Target;" line="140"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/xacml2/Target;" line="155"><counter type="INSTRUCTION" missed="12" covered="110"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubjectsSection" desc="()Lorg/wso2/balana/xacml2/TargetSection;" line="205"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResourcesSection" desc="()Lorg/wso2/balana/xacml2/TargetSection;" line="214"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActionsSection" desc="()Lorg/wso2/balana/xacml2/TargetSection;" line="223"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEnvironmentsSection" desc="()Lorg/wso2/balana/xacml2/TargetSection;" line="234"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchesAny" desc="()Z" line="243"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/MatchResult;" line="256"><counter type="INSTRUCTION" missed="8" covered="92"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="325"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="338"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="149" covered="252"/><counter type="BRANCH" missed="34" covered="40"/><counter type="LINE" missed="35" covered="66"/><counter type="COMPLEXITY" missed="31" covered="19"/><counter type="METHOD" missed="8" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/xacml2/TargetSection"><method name="&lt;init&gt;" desc="(Ljava/util/List;II)V" line="84"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;ILorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/xacml2/TargetSection;" line="109"><counter type="INSTRUCTION" missed="1" covered="57"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchGroups" desc="()Ljava/util/List;" line="140"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchesAny" desc="()Z" line="149"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/MatchResult;" line="162"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="203"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="216"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="83" covered="140"/><counter type="BRANCH" missed="8" covered="18"/><counter type="LINE" missed="17" covered="34"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Obligation.java"><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="2" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="2" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="12" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="8" ci="0" mb="2" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="2" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="11" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="7" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="7" ci="0" mb="0" cb="0"/><line nr="132" mi="10" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="8" ci="0" mb="0" cb="0"/><line nr="165" mi="9" ci="0" mb="0" cb="0"/><line nr="166" mi="11" ci="0" mb="2" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="6" ci="0" mb="0" cb="0"/><line nr="169" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="6" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="4" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="234" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TargetMatchGroup.java"><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="1" cb="1"/><line nr="80" mi="7" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="2"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="11" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="2"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="1" cb="1"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="11" mb="0" cb="2"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="2"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="8" ci="0" mb="0" cb="0"/><line nr="162" mi="11" ci="0" mb="2" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="8" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="97"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="12" covered="23"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Target.java"><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="6" ci="0" mb="6" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="8" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="8" mb="4" cb="4"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="8" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="8" mb="0" cb="2"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="2"/><line nr="167" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="2"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="2"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="1" cb="1"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="2"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="2"/><line nr="185" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="2"/><line nr="187" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="1" cb="1"/><line nr="190" mi="0" ci="2" mb="1" cb="1"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="192" mi="0" ci="8" mb="0" cb="0"/><line nr="194" mi="7" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="243" mi="0" ci="11" mb="0" cb="4"/><line nr="244" mi="0" ci="9" mb="1" cb="3"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="2"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="2"/><line nr="270" mi="0" ci="3" mb="1" cb="1"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="2"/><line nr="280" mi="0" ci="3" mb="1" cb="1"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="2"/><line nr="291" mi="0" ci="3" mb="1" cb="1"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="1" cb="1"/><line nr="302" mi="3" ci="0" mb="2" cb="0"/><line nr="303" mi="3" ci="0" mb="0" cb="0"/><line nr="305" mi="2" ci="0" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="0"/><line nr="311" mi="0" ci="3" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="326" mi="3" ci="0" mb="0" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><line nr="338" mi="10" ci="0" mb="4" cb="0"/><line nr="339" mi="10" ci="0" mb="4" cb="0"/><line nr="341" mi="6" ci="0" mb="4" cb="0"/><line nr="344" mi="5" ci="0" mb="0" cb="0"/><line nr="346" mi="4" ci="0" mb="0" cb="0"/><line nr="347" mi="4" ci="0" mb="0" cb="0"/><line nr="348" mi="4" ci="0" mb="0" cb="0"/><line nr="349" mi="4" ci="0" mb="0" cb="0"/><line nr="352" mi="4" ci="0" mb="2" cb="0"/><line nr="353" mi="4" ci="0" mb="0" cb="0"/><line nr="355" mi="4" ci="0" mb="0" cb="0"/><line nr="357" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="149" covered="252"/><counter type="BRANCH" missed="34" covered="40"/><counter type="LINE" missed="35" covered="66"/><counter type="COMPLEXITY" missed="31" covered="19"/><counter type="METHOD" missed="8" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TargetSection.java"><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="2"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="8" mb="0" cb="2"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="2"/><line nr="118" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="0" ci="11" mb="1" cb="1"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="2"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="11" mb="0" cb="2"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="2"/><line nr="183" mi="0" ci="2" mb="1" cb="1"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="2"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="5" ci="0" mb="0" cb="0"/><line nr="219" mi="4" ci="0" mb="2" cb="0"/><line nr="224" mi="3" ci="0" mb="2" cb="0"/><line nr="225" mi="8" ci="0" mb="0" cb="0"/><line nr="226" mi="8" ci="0" mb="0" cb="0"/><line nr="227" mi="9" ci="0" mb="0" cb="0"/><line nr="231" mi="8" ci="0" mb="0" cb="0"/><line nr="232" mi="11" ci="0" mb="2" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="1" ci="0" mb="0" cb="0"/><line nr="235" mi="8" ci="0" mb="0" cb="0"/><line nr="237" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="140"/><counter type="BRANCH" missed="8" covered="18"/><counter type="LINE" missed="17" covered="34"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="525" covered="489"/><counter type="BRANCH" missed="56" covered="68"/><counter type="LINE" missed="116" covered="123"/><counter type="COMPLEXITY" missed="55" covered="39"/><counter type="METHOD" missed="19" covered="13"/><counter type="CLASS" missed="1" covered="3"/></package><package name="org/wso2/balana/xacml3"><class name="org/wso2/balana/xacml3/Attributes"><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/util/Set;)V" line="66"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Lorg/w3c/dom/Node;Ljava/util/Set;Ljava/lang/String;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/xacml3/Attributes;" line="93"><counter type="INSTRUCTION" missed="33" covered="106"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="8" covered="29"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCategory" desc="()Ljava/net/URI;" line="161"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Lorg/w3c/dom/Node;" line="170"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributes" desc="()Ljava/util/Set;" line="179"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="188"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="197"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="210"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="176"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="10" covered="49"/><counter type="COMPLEXITY" missed="4" covered="14"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/xacml3/MultiRequests"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/xacml3/MultiRequests;" line="58"><counter type="INSTRUCTION" missed="30" covered="95"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="6" covered="23"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRequestReferences" desc="()Ljava/util/Set;" line="111"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="104"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="6" covered="27"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/xacml3/Obligation"><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/net/URI;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/xacml3/Obligation;" line="74"><counter type="INSTRUCTION" missed="20" covered="52"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="110"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAssignments" desc="()Ljava/util/List;" line="128"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObligationId" desc="()Ljava/net/URI;" line="137"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="147"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="107"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="6" covered="25"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/xacml3/AllOfSelection"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/xacml3/AllOfSelection;" line="63"><counter type="INSTRUCTION" missed="5" covered="38"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/MatchResult;" line="92"><counter type="INSTRUCTION" missed="11" covered="35"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatches" desc="()Ljava/util/List;" line="119"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="130"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="79"/><counter type="BRANCH" missed="9" covered="11"/><counter type="LINE" missed="12" covered="20"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/xacml3/AttributeAssignmentExpression"><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/net/URI;Lorg/wso2/balana/cond/Expression;Ljava/lang/String;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/xacml3/AttributeAssignmentExpression;" line="94"><counter type="INSTRUCTION" missed="41" covered="71"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="9" covered="19"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Ljava/util/Set;" line="154"><counter type="INSTRUCTION" missed="39" covered="43"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="12" covered="11"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="197"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="141" covered="129"/><counter type="BRANCH" missed="17" covered="11"/><counter type="LINE" missed="30" covered="36"/><counter type="COMPLEXITY" missed="14" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/xacml3/RequestDefaults"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="45"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/xacml3/RequestDefaults;" line="57"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXPathVersion" desc="()Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/io/OutputStream;)V" line="90"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/io/OutputStream;Lorg/wso2/balana/Indenter;)V" line="102"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="99" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/xacml3/Target"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/xacml3/Target;" line="72"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/MatchResult;" line="95"><counter type="INSTRUCTION" missed="11" covered="35"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnyOfSelections" desc="()Ljava/util/List;" line="117"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()Ljava/lang/String;" line="122"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="130"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="59" covered="76"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="17" covered="19"/><counter type="COMPLEXITY" missed="9" covered="7"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/xacml3/RequestReference"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReferences" desc="()Ljava/util/Set;" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setReferences" desc="(Ljava/util/Set;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/xacml3/ObligationExpression"><method name="&lt;init&gt;" desc="(ILjava/util/List;Ljava/net/URI;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/xacml3/ObligationExpression;" line="75"><counter type="INSTRUCTION" missed="39" covered="74"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="7" covered="17"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/ObligationResult;" line="126"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="144"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="76" covered="122"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="14" covered="29"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/xacml3/ObligationExpressions"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="47"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/xacml3/ObligationExpressions;" line="62"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/wso2/balana/xacml3/AnyOfSelection"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="51"><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/xacml3/AnyOfSelection;" line="70"><counter type="INSTRUCTION" missed="5" covered="38"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/MatchResult;" line="103"><counter type="INSTRUCTION" missed="11" covered="34"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllOfSelections" desc="()Ljava/util/List;" line="135"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="146"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="87"/><counter type="BRANCH" missed="10" covered="12"/><counter type="LINE" missed="13" covered="22"/><counter type="COMPLEXITY" missed="9" covered="8"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/xacml3/AttributesReference"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setId" desc="(Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/xacml3/Advice"><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/util/List;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/xacml3/Advice;" line="86"><counter type="INSTRUCTION" missed="20" covered="52"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdviceId" desc="()Ljava/net/URI;" line="115"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssignments" desc="()Ljava/util/List;" line="119"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="107"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="6" covered="25"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/xacml3/MultipleCtxResult"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/ctx/Status;)V" line="63"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;Lorg/wso2/balana/ctx/Status;Z)V" line="73"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEvaluationCtxSet" desc="()Ljava/util/Set;" line="80"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStatus" desc="()Lorg/wso2/balana/ctx/Status;" line="84"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIndeterminate" desc="()Z" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="24"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/xacml3/AdviceExpression"><method name="&lt;init&gt;" desc="(Ljava/net/URI;ILjava/util/List;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;Lorg/wso2/balana/PolicyMetaData;)Lorg/wso2/balana/xacml3/AdviceExpression;" line="85"><counter type="INSTRUCTION" missed="33" covered="72"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="7" covered="19"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppliesTo" desc="()I" line="134"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdviceId" desc="()Ljava/net/URI;" line="143"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/wso2/balana/ctx/EvaluationCtx;)Lorg/wso2/balana/xacml3/Advice;" line="153"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="172"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="77" covered="123"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="14" covered="32"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RequestReference.java"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultipleCtxResult.java"><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="2" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="24"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObligationExpressions.java"><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="2" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="2" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="2" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Advice.java"><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="1" cb="1"/><line nr="89" mi="8" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="2"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="9" mb="0" cb="0"/><line nr="132" mi="0" ci="7" mb="2" cb="2"/><line nr="133" mi="0" ci="11" mb="0" cb="2"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="107"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="6" covered="25"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AdviceExpression.java"><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="2"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="1" cb="1"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="12" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="2"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="11" mb="0" cb="2"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="2" cb="2"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="7" mb="0" cb="0"/><line nr="172" mi="21" ci="0" mb="0" cb="0"/><line nr="174" mi="11" ci="0" mb="2" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="77" covered="123"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="14" covered="32"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Obligation.java"><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="1" cb="1"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="2"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="2"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="9" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="2" cb="2"/><line nr="113" mi="0" ci="11" mb="0" cb="2"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="107"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="6" covered="25"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AttributeAssignmentExpression.java"><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="1" cb="1"/><line nr="99" mi="8" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="1" cb="1"/><line nr="115" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="1" cb="1"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="6" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="1" cb="1"/><line nr="131" mi="0" ci="6" mb="0" cb="2"/><line nr="132" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="1" cb="1"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="2" cb="2"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="1" cb="1"/><line nr="164" mi="0" ci="3" mb="1" cb="1"/><line nr="165" mi="4" ci="0" mb="2" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="2" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="14" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="2" cb="0"/><line nr="200" mi="14" ci="0" mb="0" cb="0"/><line nr="202" mi="3" ci="0" mb="2" cb="0"/><line nr="203" mi="14" ci="0" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="141" covered="129"/><counter type="BRANCH" missed="17" covered="11"/><counter type="LINE" missed="30" covered="36"/><counter type="COMPLEXITY" missed="14" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObligationExpression.java"><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="1" cb="1"/><line nr="83" mi="8" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="1" cb="1"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="12" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="8" mb="0" cb="2"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="2"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="11" mb="0" cb="2"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="2" cb="2"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="0" cb="0"/><line nr="145" mi="9" ci="0" mb="0" cb="0"/><line nr="146" mi="11" ci="0" mb="2" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="76" covered="122"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="14" covered="29"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Attributes.java"><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="1" cb="1"/><line nr="99" mi="8" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="2"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="2"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="2"/><line nr="127" mi="0" ci="2" mb="1" cb="1"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="2"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="2"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="10" mb="0" cb="0"/><line nr="212" mi="0" ci="11" mb="0" cb="2"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="1" cb="1"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="176"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="10" covered="49"/><counter type="COMPLEXITY" missed="4" covered="14"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AttributesReference.java"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Target.java"><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="2"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="11" mb="0" cb="2"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="2"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="1" cb="1"/><line nr="102" mi="2" ci="0" mb="2" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="1" cb="1"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="2" cb="0"/><line nr="133" mi="11" ci="0" mb="2" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="76"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="17" covered="19"/><counter type="COMPLEXITY" missed="9" covered="7"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultiRequests.java"><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="1" cb="1"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="1" cb="1"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="2"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="1" cb="1"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="1" cb="1"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="1" cb="1"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="104"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="6" covered="27"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AllOfSelection.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="2"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="2"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="1" cb="1"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="11" mb="0" cb="2"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="1" cb="1"/><line nr="102" mi="2" ci="0" mb="2" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="1" cb="1"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="2" cb="0"/><line nr="133" mi="11" ci="0" mb="2" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="79"/><counter type="BRANCH" missed="9" covered="11"/><counter type="LINE" missed="12" covered="20"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RequestDefaults.java"><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="2" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="2" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="7" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="10" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="2" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="15" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="10" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="99" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AnyOfSelection.java"><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="1" cb="1"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="2"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="2"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="1" cb="1"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="11" mb="0" cb="2"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="1" cb="1"/><line nr="119" mi="2" ci="0" mb="2" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="1" cb="1"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="2" cb="0"/><line nr="149" mi="11" ci="0" mb="2" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="87"/><counter type="BRANCH" missed="10" covered="12"/><counter type="LINE" missed="13" covered="22"/><counter type="COMPLEXITY" missed="9" covered="8"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="735" covered="1154"/><counter type="BRANCH" missed="83" covered="109"/><counter type="LINE" missed="167" covered="301"/><counter type="COMPLEXITY" missed="87" covered="84"/><counter type="METHOD" missed="26" covered="49"/><counter type="CLASS" missed="2" covered="13"/></package><package name="org/wso2/balana/ctx/xacml2"><class name="org/wso2/balana/ctx/xacml2/RequestCtx"><method name="&lt;init&gt;" desc="(Ljava/util/Set;Lorg/w3c/dom/Node;)V" line="87"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;Lorg/w3c/dom/Node;I)V" line="98"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;Ljava/lang/String;)V" line="108"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;Lorg/w3c/dom/Node;Ljava/lang/String;)V" line="71"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V" line="140"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;Lorg/w3c/dom/Node;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/ctx/xacml2/RequestCtx;" line="180"><counter type="INSTRUCTION" missed="48" covered="173"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="10" covered="37"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseAttributes" desc="(Lorg/w3c/dom/Node;)Ljava/util/Set;" line="276"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubjects" desc="()Ljava/util/Set;" line="295"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResource" desc="()Ljava/util/Set;" line="304"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAction" desc="()Ljava/util/Set;" line="313"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnvironmentAttributes" desc="()Ljava/util/Set;" line="322"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDocumentRoot" desc="()Lorg/w3c/dom/Node;" line="333"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/io/OutputStream;)V" line="343"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/io/OutputStream;Lorg/wso2/balana/Indenter;)V" line="356"><counter type="INSTRUCTION" missed="235" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeAttributes" desc="(Ljava/util/Set;Ljava/io/PrintStream;Lorg/wso2/balana/Indenter;)V" line="431"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="375" covered="259"/><counter type="BRANCH" missed="24" covered="20"/><counter type="LINE" missed="71" covered="63"/><counter type="COMPLEXITY" missed="23" covered="15"/><counter type="METHOD" missed="8" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/xacml2/Subject"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="93"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/util/Set;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCategory" desc="()Ljava/net/URI;" line="120"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributes" desc="()Ljava/util/Set;" line="129"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="10" covered="13"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="7" covered="14"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/xacml2/XACML2EvaluationCtx"><method name="&lt;init&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/ctx/xacml2/RequestCtx;Lorg/wso2/balana/PDPConfig;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupSubjects" desc="(Ljava/util/Set;)V" line="124"><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupResource" desc="(Ljava/util/Set;)V" line="167"><counter type="INSTRUCTION" missed="109" covered="38"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="23" covered="8"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapAttributes" desc="(Ljava/util/Set;Ljava/util/Map;)V" line="228"><counter type="INSTRUCTION" missed="11" covered="34"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScope" desc="()I" line="251"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResourceId" desc="()Lorg/wso2/balana/attr/AttributeValue;" line="260"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setResourceId" desc="(Lorg/wso2/balana/attr/AttributeValue;Ljava/util/Set;)V" line="271"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttribute" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;Ljava/net/URI;)Lorg/wso2/balana/cond/EvaluationResult;" line="287"><counter type="INSTRUCTION" missed="18" covered="48"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXacmlVersion" desc="()I" line="304"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubjectAttribute" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;)Lorg/wso2/balana/cond/EvaluationResult;" line="320"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResourceAttribute" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;)Lorg/wso2/balana/cond/EvaluationResult;" line="341"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActionAttribute" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;)Lorg/wso2/balana/cond/EvaluationResult;" line="354"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnvironmentAttribute" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;)Lorg/wso2/balana/cond/EvaluationResult;" line="367"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGenericAttributes" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;Ljava/util/Map;)Lorg/wso2/balana/cond/EvaluationResult;" line="376"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPdpConfig" desc="()Lorg/wso2/balana/PDPConfig;" line="418"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRequestCtx" desc="()Lorg/wso2/balana/ctx/AbstractRequestCtx;" line="422"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMultipleEvaluationCtx" desc="()Lorg/wso2/balana/xacml3/MultipleCtxResult;" line="427"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResourceScope" desc="()I" line="447"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processHierarchicalAttributes" desc="(Lorg/wso2/balana/ctx/xacml2/XACML2EvaluationCtx;)Lorg/wso2/balana/xacml3/MultipleCtxResult;" line="452"><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="313" covered="424"/><counter type="BRANCH" missed="34" covered="38"/><counter type="LINE" missed="73" covered="94"/><counter type="COMPLEXITY" missed="29" covered="28"/><counter type="METHOD" missed="9" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/xacml2/Result"><method name="&lt;init&gt;" desc="(ILorg/wso2/balana/ctx/Status;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILorg/wso2/balana/ctx/Status;Ljava/util/List;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILorg/wso2/balana/ctx/Status;Ljava/util/List;Ljava/lang/String;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/ctx/AbstractResult;" line="98"><counter type="INSTRUCTION" missed="31" covered="86"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="6" covered="23"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseObligations" desc="(Lorg/w3c/dom/Node;)Ljava/util/List;" line="151"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResourceId" desc="()Ljava/lang/String;" line="175"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setResource" desc="(Ljava/lang/String;)Z" line="188"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="200"><counter type="INSTRUCTION" missed="33" covered="38"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="116" covered="158"/><counter type="BRANCH" missed="20" covered="18"/><counter type="LINE" missed="28" covered="39"/><counter type="COMPLEXITY" missed="17" covered="10"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Result.java"><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="1" cb="1"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="2"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="2"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="8" mb="1" cb="1"/><line nr="116" mi="0" ci="6" mb="0" cb="2"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="1" cb="1"/><line nr="123" mi="12" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="2"/><line nr="125" mi="0" ci="2" mb="1" cb="1"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="1" cb="1"/><line nr="131" mi="2" ci="0" mb="2" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="8" ci="0" mb="2" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="2" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="2" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="2" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="1" cb="1"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="9" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="11" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="1" cb="1"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="7" mb="1" cb="3"/><line nr="216" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="2" cb="0"/><line nr="221" mi="5" ci="0" mb="0" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="4" ci="0" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="116" covered="158"/><counter type="BRANCH" missed="20" covered="18"/><counter type="LINE" missed="28" covered="39"/><counter type="COMPLEXITY" missed="17" covered="10"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XACML2EvaluationCtx.java"><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="2"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="2"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="2"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="1" cb="1"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="1" cb="1"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="8" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="1" cb="1"/><line nr="187" mi="7" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="2" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="6" ci="0" mb="2" cb="0"/><line nr="200" mi="3" ci="0" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="4" ci="0" mb="2" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="2" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="2" cb="0"/><line nr="211" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="10" ci="0" mb="0" cb="0"/><line nr="214" mi="12" ci="0" mb="0" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="2"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="1" cb="1"/><line nr="234" mi="6" ci="0" mb="0" cb="0"/><line nr="235" mi="4" ci="0" mb="0" cb="0"/><line nr="236" mi="1" ci="0" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="3" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="274" mi="7" ci="0" mb="0" cb="0"/><line nr="275" mi="6" ci="0" mb="0" cb="0"/><line nr="278" mi="4" ci="0" mb="0" cb="0"/><line nr="281" mi="14" ci="0" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="287" mi="0" ci="5" mb="0" cb="2"/><line nr="288" mi="0" ci="7" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="0" cb="2"/><line nr="290" mi="0" ci="7" mb="0" cb="0"/><line nr="291" mi="0" ci="5" mb="0" cb="2"/><line nr="292" mi="0" ci="7" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="1" cb="1"/><line nr="294" mi="0" ci="7" mb="0" cb="0"/><line nr="296" mi="4" ci="0" mb="0" cb="0"/><line nr="297" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="5" ci="0" mb="0" cb="0"/><line nr="299" mi="5" ci="0" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="7" mb="0" cb="0"/><line nr="322" mi="0" ci="2" mb="0" cb="2"/><line nr="325" mi="0" ci="7" mb="0" cb="0"/><line nr="328" mi="0" ci="8" mb="0" cb="0"/><line nr="341" mi="0" ci="9" mb="0" cb="0"/><line nr="354" mi="0" ci="9" mb="0" cb="0"/><line nr="367" mi="0" ci="9" mb="0" cb="0"/><line nr="376" mi="0" ci="7" mb="0" cb="0"/><line nr="377" mi="0" ci="2" mb="0" cb="2"/><line nr="380" mi="0" ci="7" mb="0" cb="0"/><line nr="384" mi="0" ci="4" mb="0" cb="0"/><line nr="385" mi="0" ci="3" mb="0" cb="0"/><line nr="387" mi="0" ci="3" mb="0" cb="2"/><line nr="388" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="0" ci="8" mb="0" cb="4"/><line nr="392" mi="0" ci="5" mb="0" cb="2"/><line nr="393" mi="0" ci="2" mb="0" cb="2"/><line nr="397" mi="0" ci="5" mb="0" cb="0"/><line nr="399" mi="0" ci="1" mb="0" cb="0"/><line nr="402" mi="0" ci="3" mb="0" cb="2"/><line nr="405" mi="0" ci="3" mb="1" cb="1"/><line nr="406" mi="0" ci="13" mb="0" cb="0"/><line nr="409" mi="0" ci="7" mb="0" cb="0"/><line nr="413" mi="0" ci="9" mb="0" cb="0"/><line nr="418" mi="3" ci="0" mb="0" cb="0"/><line nr="422" mi="3" ci="0" mb="0" cb="0"/><line nr="427" mi="4" ci="0" mb="0" cb="0"/><line nr="429" mi="3" ci="0" mb="2" cb="0"/><line nr="430" mi="4" ci="0" mb="0" cb="0"/><line nr="431" mi="3" ci="0" mb="2" cb="0"/><line nr="432" mi="2" ci="0" mb="0" cb="0"/><line nr="434" mi="5" ci="0" mb="0" cb="0"/><line nr="438" mi="3" ci="0" mb="2" cb="0"/><line nr="439" mi="7" ci="0" mb="0" cb="0"/><line nr="441" mi="4" ci="0" mb="0" cb="0"/><line nr="442" mi="7" ci="0" mb="0" cb="0"/><line nr="447" mi="3" ci="0" mb="0" cb="0"/><line nr="452" mi="2" ci="0" mb="0" cb="0"/><line nr="453" mi="4" ci="0" mb="0" cb="0"/><line nr="454" mi="3" ci="0" mb="0" cb="0"/><line nr="455" mi="3" ci="0" mb="0" cb="0"/><line nr="457" mi="2" ci="0" mb="2" cb="0"/><line nr="458" mi="3" ci="0" mb="2" cb="0"/><line nr="459" mi="5" ci="0" mb="0" cb="0"/><line nr="460" mi="3" ci="0" mb="0" cb="0"/><line nr="461" mi="3" ci="0" mb="2" cb="0"/><line nr="462" mi="5" ci="0" mb="0" cb="0"/><line nr="463" mi="3" ci="0" mb="0" cb="0"/><line nr="465" mi="4" ci="0" mb="0" cb="0"/><line nr="469" mi="3" ci="0" mb="0" cb="0"/><line nr="473" mi="5" ci="0" mb="4" cb="0"/><line nr="474" mi="4" ci="0" mb="0" cb="0"/><line nr="477" mi="11" ci="0" mb="2" cb="0"/><line nr="478" mi="5" ci="0" mb="0" cb="0"/><line nr="479" mi="4" ci="0" mb="0" cb="0"/><line nr="480" mi="1" ci="0" mb="0" cb="0"/><line nr="483" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="313" covered="424"/><counter type="BRANCH" missed="34" covered="38"/><counter type="LINE" missed="73" covered="94"/><counter type="COMPLEXITY" missed="29" covered="28"/><counter type="METHOD" missed="9" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RequestCtx.java"><line nr="71" mi="3" ci="3" mb="0" cb="0"/><line nr="74" mi="3" ci="3" mb="0" cb="0"/><line nr="77" mi="3" ci="3" mb="0" cb="0"/><line nr="80" mi="3" ci="3" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="9" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="1" cb="1"/><line nr="190" mi="8" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="8" mb="0" cb="2"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="2"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="2"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="210" mi="6" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="8" mb="0" cb="0"/><line nr="219" mi="0" ci="10" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="1" cb="1"/><line nr="223" mi="5" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="2"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="8" mb="0" cb="2"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="1" cb="1"/><line nr="233" mi="2" ci="0" mb="2" cb="0"/><line nr="234" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="10" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="2"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="11" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="1" cb="1"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="10" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="1" cb="1"/><line nr="262" mi="4" ci="0" mb="0" cb="0"/><line nr="263" mi="10" ci="0" mb="0" cb="0"/><line nr="267" mi="0" ci="11" mb="0" cb="0"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="8" mb="0" cb="2"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="1" cb="1"/><line nr="283" mi="0" ci="6" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="0" cb="0"/><line nr="333" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="7" ci="0" mb="0" cb="0"/><line nr="344" mi="1" ci="0" mb="0" cb="0"/><line nr="356" mi="5" ci="0" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="14" ci="0" mb="0" cb="0"/><line nr="363" mi="2" ci="0" mb="0" cb="0"/><line nr="364" mi="3" ci="0" mb="0" cb="0"/><line nr="367" mi="2" ci="0" mb="0" cb="0"/><line nr="370" mi="4" ci="0" mb="0" cb="0"/><line nr="371" mi="3" ci="0" mb="2" cb="0"/><line nr="372" mi="5" ci="0" mb="0" cb="0"/><line nr="374" mi="16" ci="0" mb="0" cb="0"/><line nr="377" mi="3" ci="0" mb="0" cb="0"/><line nr="379" mi="3" ci="0" mb="2" cb="0"/><line nr="381" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="3" ci="0" mb="0" cb="0"/><line nr="386" mi="5" ci="0" mb="0" cb="0"/><line nr="388" mi="10" ci="0" mb="0" cb="0"/><line nr="390" mi="1" ci="0" mb="0" cb="0"/><line nr="393" mi="7" ci="0" mb="4" cb="0"/><line nr="394" mi="10" ci="0" mb="0" cb="0"/><line nr="395" mi="3" ci="0" mb="2" cb="0"/><line nr="396" mi="16" ci="0" mb="0" cb="0"/><line nr="398" mi="6" ci="0" mb="0" cb="0"/><line nr="399" mi="11" ci="0" mb="0" cb="0"/><line nr="401" mi="10" ci="0" mb="0" cb="0"/><line nr="405" mi="4" ci="0" mb="2" cb="0"/><line nr="406" mi="10" ci="0" mb="0" cb="0"/><line nr="407" mi="6" ci="0" mb="0" cb="0"/><line nr="408" mi="11" ci="0" mb="0" cb="0"/><line nr="410" mi="10" ci="0" mb="0" cb="0"/><line nr="414" mi="4" ci="0" mb="2" cb="0"/><line nr="415" mi="10" ci="0" mb="0" cb="0"/><line nr="416" mi="6" ci="0" mb="0" cb="0"/><line nr="417" mi="10" ci="0" mb="0" cb="0"/><line nr="421" mi="2" ci="0" mb="0" cb="0"/><line nr="422" mi="2" ci="0" mb="0" cb="0"/><line nr="424" mi="10" ci="0" mb="0" cb="0"/><line nr="425" mi="1" ci="0" mb="0" cb="0"/><line nr="431" mi="2" ci="0" mb="0" cb="0"/><line nr="433" mi="3" ci="0" mb="0" cb="0"/><line nr="434" mi="3" ci="0" mb="2" cb="0"/><line nr="435" mi="5" ci="0" mb="0" cb="0"/><line nr="436" mi="12" ci="0" mb="0" cb="0"/><line nr="437" mi="1" ci="0" mb="0" cb="0"/><line nr="439" mi="2" ci="0" mb="0" cb="0"/><line nr="440" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="375" covered="259"/><counter type="BRANCH" missed="24" covered="20"/><counter type="LINE" missed="71" covered="63"/><counter type="COMPLEXITY" missed="23" covered="15"/><counter type="METHOD" missed="8" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Subject.java"><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="2" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="2"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="7" covered="14"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="823" covered="879"/><counter type="BRANCH" missed="80" covered="78"/><counter type="LINE" missed="179" covered="210"/><counter type="COMPLEXITY" missed="71" covered="58"/><counter type="METHOD" missed="21" covered="29"/><counter type="CLASS" missed="0" covered="4"/></package><package name="org/wso2/balana/attr/proxy"><class name="org/wso2/balana/attr/proxy/YearMonthDurationAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/TimeAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/RFC822NameAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/HexBinaryAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/BooleanAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/AbstractAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;[Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="43"><counter type="INSTRUCTION" missed="9" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="9"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/DateTimeAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/DayTimeDurationAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/DateAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/IntegerAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/StringAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/DoubleAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/Base64BinaryAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/AnyURIAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/IPAddressAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/DNSNameAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/attr/proxy/X500NameAttributeProxy"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/attr/AttributeValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/String;)Lorg/wso2/balana/attr/AttributeValue;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DateAttributeProxy.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HexBinaryAttributeProxy.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Base64BinaryAttributeProxy.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoubleAttributeProxy.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DNSNameAttributeProxy.java"><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnyURIAttributeProxy.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntegerAttributeProxy.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimeAttributeProxy.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractAttributeProxy.java"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="4" ci="2" mb="3" cb="1"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="9"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DayTimeDurationAttributeProxy.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateTimeAttributeProxy.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="YearMonthDurationAttributeProxy.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BooleanAttributeProxy.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IPAddressAttributeProxy.java"><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="X500NameAttributeProxy.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RFC822NameAttributeProxy.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringAttributeProxy.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="54" covered="108"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="16" covered="36"/><counter type="COMPLEXITY" missed="17" covered="35"/><counter type="METHOD" missed="15" covered="35"/><counter type="CLASS" missed="0" covered="17"/></package><package name="org/wso2/balana/ctx/xacml3"><class name="org/wso2/balana/ctx/xacml3/RequestCtx"><method name="&lt;init&gt;" desc="(Ljava/util/Set;Lorg/w3c/dom/Node;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/w3c/dom/Node;Ljava/util/Set;ZZLorg/wso2/balana/xacml3/MultiRequests;Lorg/wso2/balana/xacml3/RequestDefaults;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/ctx/xacml3/RequestCtx;" line="130"><counter type="INSTRUCTION" missed="49" covered="99"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="12" covered="30"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCombinedDecision" desc="()Z" line="205"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReturnPolicyIdList" desc="()Z" line="214"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMultiRequests" desc="()Lorg/wso2/balana/xacml3/MultiRequests;" line="223"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaults" desc="()Lorg/wso2/balana/xacml3/RequestDefaults;" line="232"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/io/OutputStream;Lorg/wso2/balana/Indenter;)V" line="244"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/io/OutputStream;)V" line="277"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="134" covered="141"/><counter type="BRANCH" missed="13" covered="13"/><counter type="LINE" missed="28" covered="44"/><counter type="COMPLEXITY" missed="12" covered="10"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/xacml3/Result"><method name="&lt;init&gt;" desc="(ILorg/wso2/balana/ctx/Status;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILorg/wso2/balana/ctx/Status;Ljava/util/List;Ljava/util/List;Lorg/wso2/balana/ctx/EvaluationCtx;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILorg/wso2/balana/ctx/Status;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/util/Set;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Lorg/w3c/dom/Node;)Lorg/wso2/balana/ctx/AbstractResult;" line="104"><counter type="INSTRUCTION" missed="38" covered="118"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="7" covered="32"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseObligations" desc="(Lorg/w3c/dom/Node;)Ljava/util/List;" line="172"><counter type="INSTRUCTION" missed="5" covered="34"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseAdvices" desc="(Lorg/w3c/dom/Node;)Ljava/util/List;" line="197"><counter type="INSTRUCTION" missed="5" covered="34"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsePolicyReferences" desc="(Lorg/w3c/dom/Node;)Ljava/util/Set;" line="222"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributes" desc="()Ljava/util/Set;" line="239"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processAttributes" desc="(Ljava/util/Set;)V" line="249"><counter type="INSTRUCTION" missed="1" covered="67"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/StringBuilder;)V" line="285"><counter type="INSTRUCTION" missed="27" covered="137"/><counter type="BRANCH" missed="7" covered="25"/><counter type="LINE" missed="5" covered="29"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="104" covered="434"/><counter type="BRANCH" missed="21" covered="69"/><counter type="LINE" missed="21" covered="108"/><counter type="COMPLEXITY" missed="18" covered="37"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/wso2/balana/ctx/xacml3/XACML3EvaluationCtx"><method name="&lt;init&gt;" desc="(Lorg/wso2/balana/ctx/xacml3/RequestCtx;Lorg/wso2/balana/PDPConfig;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttribute" desc="(Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;Ljava/net/URI;)Lorg/wso2/balana/cond/EvaluationResult;" line="126"><counter type="INSTRUCTION" missed="5" covered="89"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttribute" desc="(Ljava/lang/String;Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;Ljava/lang/String;)Lorg/wso2/balana/cond/EvaluationResult;" line="154"><counter type="INSTRUCTION" missed="18" covered="105"/><counter type="BRANCH" missed="11" covered="13"/><counter type="LINE" missed="5" covered="21"/><counter type="COMPLEXITY" missed="11" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXacmlVersion" desc="()I" line="201"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupAttributes" desc="(Ljava/util/Set;Ljava/util/Map;)V" line="216"><counter type="INSTRUCTION" missed="32" covered="99"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="10" covered="23"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMultipleEvaluationCtx" desc="()Lorg/wso2/balana/xacml3/MultipleCtxResult;" line="265"><counter type="INSTRUCTION" missed="87" covered="112"/><counter type="BRANCH" missed="17" covered="21"/><counter type="LINE" missed="24" covered="29"/><counter type="COMPLEXITY" missed="12" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processMultiRequestElement" desc="(Lorg/wso2/balana/ctx/xacml3/XACML3EvaluationCtx;)Lorg/wso2/balana/xacml3/MultipleCtxResult;" line="361"><counter type="INSTRUCTION" missed="22" covered="103"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="4" covered="23"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processMultipleAttributes" desc="(Lorg/wso2/balana/ctx/xacml3/XACML3EvaluationCtx;)Lorg/wso2/balana/xacml3/MultipleCtxResult;" line="410"><counter type="INSTRUCTION" missed="117" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processHierarchicalAttributes" desc="(Lorg/wso2/balana/ctx/xacml3/XACML3EvaluationCtx;)Lorg/wso2/balana/xacml3/MultipleCtxResult;" line="448"><counter type="INSTRUCTION" missed="170" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processMultipleContentSelectors" desc="(Lorg/wso2/balana/ctx/xacml3/XACML3EvaluationCtx;)Lorg/wso2/balana/xacml3/MultipleCtxResult;" line="514"><counter type="INSTRUCTION" missed="4" covered="229"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="2" covered="50"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setResourceId" desc="(Lorg/wso2/balana/attr/AttributeValue;Ljava/util/Set;)V" line="591"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildXPaths" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;)Ljava/util/Set;" line="619"><counter type="INSTRUCTION" missed="10" covered="150"/><counter type="BRANCH" missed="12" covered="16"/><counter type="LINE" missed="3" covered="34"/><counter type="COMPLEXITY" missed="12" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMultipleAttributes" desc="()Z" line="695"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRequestCtx" desc="()Lorg/wso2/balana/ctx/AbstractRequestCtx;" line="699"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPolicyReferences" desc="()Ljava/util/Set;" line="707"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPolicyReferences" desc="(Ljava/util/Set;)V" line="715"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributes" desc="(Ljava/lang/String;)Ljava/util/List;" line="724"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMultipleContentSelectors" desc="()Ljava/util/Set;" line="728"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapAttributes" desc="()Ljava/util/Map;" line="732"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributesSet" desc="()Ljava/util/Set;" line="736"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResourceId" desc="()Lorg/wso2/balana/ctx/Attribute;" line="740"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResourceScope" desc="()I" line="744"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResourceScopeAttribute" desc="()Lorg/wso2/balana/ctx/Attribute;" line="748"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="99"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="565" covered="946"/><counter type="BRANCH" missed="107" covered="113"/><counter type="LINE" missed="131" covered="215"/><counter type="COMPLEXITY" missed="86" covered="48"/><counter type="METHOD" missed="8" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Result.java"><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="1" cb="1"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="8" mb="0" cb="2"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="2"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="8" mb="1" cb="1"/><line nr="119" mi="0" ci="6" mb="0" cb="2"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="1" cb="1"/><line nr="126" mi="12" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="2"/><line nr="129" mi="0" ci="2" mb="1" cb="1"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="2"/><line nr="135" mi="0" ci="2" mb="1" cb="1"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="2"/><line nr="141" mi="0" ci="2" mb="1" cb="1"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="1" cb="1"/><line nr="147" mi="2" ci="0" mb="2" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="2"/><line nr="153" mi="0" ci="2" mb="0" cb="2"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="10" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="8" mb="0" cb="2"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="2"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="1" cb="1"/><line nr="183" mi="5" ci="0" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="8" mb="0" cb="2"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="2"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="1" cb="1"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="8" ci="0" mb="2" cb="0"/><line nr="226" mi="4" ci="0" mb="0" cb="0"/><line nr="227" mi="7" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="2"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="10" mb="0" cb="2"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="1" cb="1"/><line nr="258" mi="1" ci="0" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="10" mb="0" cb="2"/><line nr="262" mi="0" ci="3" mb="0" cb="2"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="2"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="1" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="12" mb="1" cb="5"/><line nr="290" mi="0" ci="11" mb="0" cb="0"/><line nr="292" mi="0" ci="11" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="1" cb="1"/><line nr="296" mi="0" ci="4" mb="0" cb="0"/><line nr="299" mi="0" ci="7" mb="0" cb="4"/><line nr="301" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="2"/><line nr="305" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="1" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="312" mi="0" ci="7" mb="0" cb="4"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="2"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="326" mi="4" ci="3" mb="3" cb="1"/><line nr="327" mi="4" ci="0" mb="0" cb="0"/><line nr="329" mi="11" ci="0" mb="2" cb="0"/><line nr="330" mi="3" ci="0" mb="0" cb="0"/><line nr="331" mi="1" ci="0" mb="0" cb="0"/><line nr="333" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="0" ci="7" mb="0" cb="4"/><line nr="338" mi="0" ci="11" mb="0" cb="2"/><line nr="339" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="1" mb="0" cb="0"/><line nr="344" mi="0" ci="4" mb="0" cb="0"/><line nr="345" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="104" covered="434"/><counter type="BRANCH" missed="21" covered="69"/><counter type="LINE" missed="21" covered="108"/><counter type="COMPLEXITY" missed="18" covered="37"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XACML3EvaluationCtx.java"><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="2" cb="2"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="10" mb="0" cb="2"/><line nr="131" mi="0" ci="8" mb="0" cb="2"/><line nr="132" mi="2" ci="8" mb="2" cb="2"/><line nr="133" mi="3" ci="1" mb="2" cb="0"/><line nr="134" mi="0" ci="2" mb="1" cb="1"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="10" mb="0" cb="2"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="9" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="1" cb="1"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="1" cb="1"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="2" cb="2"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="1" cb="1"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="1" cb="3"/><line nr="173" mi="0" ci="11" mb="1" cb="1"/><line nr="174" mi="0" ci="5" mb="1" cb="1"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="10" mb="1" cb="1"/><line nr="177" mi="0" ci="3" mb="1" cb="1"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="1" cb="1"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="11" mb="0" cb="0"/><line nr="196" mi="6" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="10" mb="0" cb="2"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="11" mb="0" cb="2"/><line nr="219" mi="0" ci="4" mb="0" cb="2"/><line nr="220" mi="0" ci="6" mb="1" cb="1"/><line nr="221" mi="3" ci="0" mb="0" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="2" cb="0"/><line nr="224" mi="4" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="2" cb="0"/><line nr="226" mi="4" ci="0" mb="0" cb="0"/><line nr="227" mi="4" ci="0" mb="2" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="230" mi="1" ci="0" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="2"/><line nr="237" mi="0" ci="3" mb="0" cb="2"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="6" mb="0" cb="2"/><line nr="244" mi="0" ci="3" mb="1" cb="1"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="2"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="2"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="1" cb="1"/><line nr="273" mi="2" ci="0" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="2"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="10" mb="0" cb="2"/><line nr="283" mi="0" ci="4" mb="1" cb="1"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="285" mi="5" ci="0" mb="0" cb="0"/><line nr="286" mi="3" ci="0" mb="2" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="289" mi="5" ci="0" mb="0" cb="0"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="1" cb="1"/><line nr="295" mi="4" ci="0" mb="0" cb="0"/><line nr="296" mi="3" ci="0" mb="2" cb="0"/><line nr="297" mi="2" ci="0" mb="0" cb="0"/><line nr="299" mi="5" ci="0" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="2"/><line nr="308" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="10" mb="0" cb="2"/><line nr="310" mi="0" ci="4" mb="1" cb="1"/><line nr="311" mi="4" ci="0" mb="0" cb="0"/><line nr="312" mi="5" ci="0" mb="0" cb="0"/><line nr="313" mi="3" ci="0" mb="2" cb="0"/><line nr="314" mi="2" ci="0" mb="0" cb="0"/><line nr="316" mi="5" ci="0" mb="0" cb="0"/><line nr="318" mi="1" ci="4" mb="1" cb="1"/><line nr="319" mi="5" ci="0" mb="0" cb="0"/><line nr="320" mi="3" ci="0" mb="2" cb="0"/><line nr="321" mi="2" ci="0" mb="0" cb="0"/><line nr="323" mi="5" ci="0" mb="0" cb="0"/><line nr="326" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="1" cb="1"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="330" mi="3" ci="0" mb="2" cb="0"/><line nr="331" mi="2" ci="0" mb="0" cb="0"/><line nr="333" mi="5" ci="0" mb="0" cb="0"/><line nr="335" mi="1" ci="3" mb="0" cb="2"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="1" cb="1"/><line nr="338" mi="2" ci="0" mb="0" cb="0"/><line nr="340" mi="0" ci="5" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="2"/><line nr="346" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="5" mb="0" cb="0"/><line nr="361" mi="0" ci="4" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="364" mi="0" ci="2" mb="1" cb="1"/><line nr="365" mi="5" ci="0" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="0" ci="10" mb="0" cb="2"/><line nr="370" mi="0" ci="3" mb="0" cb="0"/><line nr="371" mi="0" ci="5" mb="2" cb="2"/><line nr="372" mi="0" ci="4" mb="0" cb="0"/><line nr="373" mi="0" ci="10" mb="0" cb="2"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="1" cb="1"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="377" mi="0" ci="11" mb="0" cb="2"/><line nr="379" mi="0" ci="8" mb="1" cb="3"/><line nr="380" mi="0" ci="2" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="2" mb="1" cb="1"/><line nr="384" mi="0" ci="5" mb="0" cb="0"/><line nr="387" mi="4" ci="0" mb="0" cb="0"/><line nr="388" mi="4" ci="0" mb="0" cb="0"/><line nr="389" mi="9" ci="0" mb="0" cb="0"/><line nr="393" mi="0" ci="1" mb="0" cb="0"/><line nr="394" mi="0" ci="6" mb="0" cb="0"/><line nr="395" mi="0" ci="9" mb="0" cb="0"/><line nr="397" mi="0" ci="1" mb="0" cb="0"/><line nr="399" mi="0" ci="5" mb="0" cb="0"/><line nr="410" mi="4" ci="0" mb="0" cb="0"/><line nr="412" mi="3" ci="0" mb="0" cb="0"/><line nr="414" mi="7" ci="0" mb="0" cb="0"/><line nr="415" mi="5" ci="0" mb="0" cb="0"/><line nr="417" mi="11" ci="0" mb="2" cb="0"/><line nr="418" mi="6" ci="0" mb="2" cb="0"/><line nr="419" mi="4" ci="0" mb="0" cb="0"/><line nr="420" mi="12" ci="0" mb="2" cb="0"/><line nr="421" mi="10" ci="0" mb="2" cb="0"/><line nr="422" mi="5" ci="0" mb="0" cb="0"/><line nr="423" mi="6" ci="0" mb="0" cb="0"/><line nr="424" mi="4" ci="0" mb="0" cb="0"/><line nr="425" mi="4" ci="0" mb="0" cb="0"/><line nr="426" mi="1" ci="0" mb="0" cb="0"/><line nr="427" mi="1" ci="0" mb="0" cb="0"/><line nr="428" mi="2" ci="0" mb="0" cb="0"/><line nr="430" mi="1" ci="0" mb="0" cb="0"/><line nr="432" mi="10" ci="0" mb="2" cb="0"/><line nr="433" mi="6" ci="0" mb="0" cb="0"/><line nr="434" mi="9" ci="0" mb="0" cb="0"/><line nr="435" mi="1" ci="0" mb="0" cb="0"/><line nr="437" mi="5" ci="0" mb="0" cb="0"/><line nr="448" mi="2" ci="0" mb="0" cb="0"/><line nr="449" mi="4" ci="0" mb="0" cb="0"/><line nr="451" mi="3" ci="0" mb="0" cb="0"/><line nr="452" mi="2" ci="0" mb="2" cb="0"/><line nr="454" mi="4" ci="0" mb="2" cb="0"/><line nr="455" mi="4" ci="0" mb="0" cb="0"/><line nr="456" mi="5" ci="0" mb="0" cb="0"/><line nr="457" mi="4" ci="0" mb="2" cb="0"/><line nr="458" mi="4" ci="0" mb="0" cb="0"/><line nr="459" mi="5" ci="0" mb="0" cb="0"/><line nr="461" mi="4" ci="0" mb="0" cb="0"/><line nr="465" mi="3" ci="0" mb="0" cb="0"/><line nr="469" mi="5" ci="0" mb="4" cb="0"/><line nr="470" mi="4" ci="0" mb="0" cb="0"/><line nr="473" mi="11" ci="0" mb="2" cb="0"/><line nr="474" mi="6" ci="0" mb="0" cb="0"/><line nr="475" mi="2" ci="0" mb="0" cb="0"/><line nr="476" mi="10" ci="0" mb="2" cb="0"/><line nr="477" mi="6" ci="0" mb="2" cb="0"/><line nr="478" mi="6" ci="0" mb="0" cb="0"/><line nr="479" mi="5" ci="0" mb="0" cb="0"/><line nr="480" mi="4" ci="0" mb="0" cb="0"/><line nr="482" mi="7" ci="0" mb="0" cb="0"/><line nr="483" mi="8" ci="0" mb="0" cb="0"/><line nr="485" mi="4" ci="0" mb="0" cb="0"/><line nr="486" mi="7" ci="0" mb="0" cb="0"/><line nr="487" mi="6" ci="0" mb="0" cb="0"/><line nr="488" mi="4" ci="0" mb="0" cb="0"/><line nr="489" mi="2" ci="0" mb="0" cb="0"/><line nr="490" mi="1" ci="0" mb="0" cb="0"/><line nr="492" mi="1" ci="0" mb="0" cb="0"/><line nr="493" mi="1" ci="0" mb="0" cb="0"/><line nr="495" mi="1" ci="0" mb="0" cb="0"/><line nr="496" mi="2" ci="0" mb="2" cb="0"/><line nr="497" mi="4" ci="0" mb="0" cb="0"/><line nr="498" mi="13" ci="0" mb="0" cb="0"/><line nr="500" mi="1" ci="0" mb="0" cb="0"/><line nr="503" mi="5" ci="0" mb="0" cb="0"/><line nr="514" mi="0" ci="4" mb="0" cb="0"/><line nr="515" mi="0" ci="4" mb="0" cb="0"/><line nr="517" mi="0" ci="11" mb="0" cb="2"/><line nr="518" mi="0" ci="2" mb="0" cb="0"/><line nr="519" mi="0" ci="2" mb="0" cb="0"/><line nr="520" mi="0" ci="3" mb="0" cb="0"/><line nr="521" mi="0" ci="5" mb="2" cb="2"/><line nr="522" mi="0" ci="3" mb="0" cb="0"/><line nr="523" mi="0" ci="11" mb="0" cb="2"/><line nr="524" mi="0" ci="2" mb="0" cb="0"/><line nr="525" mi="0" ci="6" mb="1" cb="1"/><line nr="526" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="10" mb="0" cb="2"/><line nr="528" mi="0" ci="3" mb="1" cb="1"/><line nr="529" mi="0" ci="3" mb="0" cb="0"/><line nr="530" mi="0" ci="3" mb="0" cb="0"/><line nr="531" mi="0" ci="4" mb="1" cb="1"/><line nr="532" mi="0" ci="6" mb="0" cb="0"/><line nr="533" mi="0" ci="10" mb="0" cb="2"/><line nr="535" mi="0" ci="3" mb="0" cb="0"/><line nr="536" mi="0" ci="9" mb="0" cb="0"/><line nr="537" mi="0" ci="2" mb="0" cb="0"/><line nr="538" mi="0" ci="7" mb="0" cb="0"/><line nr="540" mi="0" ci="5" mb="0" cb="0"/><line nr="541" mi="0" ci="4" mb="0" cb="0"/><line nr="543" mi="0" ci="2" mb="0" cb="2"/><line nr="544" mi="0" ci="4" mb="0" cb="0"/><line nr="546" mi="0" ci="4" mb="0" cb="0"/><line nr="547" mi="1" ci="0" mb="0" cb="0"/><line nr="548" mi="3" ci="0" mb="0" cb="0"/><line nr="549" mi="0" ci="1" mb="0" cb="0"/><line nr="550" mi="0" ci="1" mb="0" cb="0"/><line nr="553" mi="0" ci="1" mb="0" cb="0"/><line nr="555" mi="0" ci="1" mb="0" cb="0"/><line nr="556" mi="0" ci="2" mb="1" cb="1"/><line nr="557" mi="0" ci="5" mb="0" cb="0"/><line nr="558" mi="0" ci="10" mb="0" cb="2"/><line nr="559" mi="0" ci="6" mb="0" cb="0"/><line nr="560" mi="0" ci="4" mb="0" cb="0"/><line nr="561" mi="0" ci="5" mb="0" cb="0"/><line nr="562" mi="0" ci="6" mb="0" cb="0"/><line nr="563" mi="0" ci="4" mb="0" cb="0"/><line nr="564" mi="0" ci="1" mb="0" cb="0"/><line nr="565" mi="0" ci="5" mb="0" cb="0"/><line nr="568" mi="0" ci="1" mb="0" cb="0"/><line nr="570" mi="0" ci="10" mb="0" cb="2"/><line nr="571" mi="0" ci="6" mb="0" cb="0"/><line nr="572" mi="0" ci="4" mb="0" cb="0"/><line nr="573" mi="0" ci="6" mb="0" cb="0"/><line nr="574" mi="0" ci="9" mb="0" cb="0"/><line nr="575" mi="0" ci="1" mb="0" cb="0"/><line nr="577" mi="0" ci="5" mb="0" cb="0"/><line nr="591" mi="10" ci="0" mb="2" cb="0"/><line nr="592" mi="6" ci="0" mb="2" cb="0"/><line nr="593" mi="3" ci="0" mb="0" cb="0"/><line nr="594" mi="5" ci="0" mb="0" cb="0"/><line nr="595" mi="2" ci="0" mb="0" cb="0"/><line nr="597" mi="10" ci="0" mb="2" cb="0"/><line nr="598" mi="6" ci="0" mb="2" cb="0"/><line nr="599" mi="2" ci="0" mb="0" cb="0"/><line nr="600" mi="5" ci="0" mb="0" cb="0"/><line nr="601" mi="6" ci="0" mb="2" cb="0"/><line nr="602" mi="4" ci="0" mb="0" cb="0"/><line nr="604" mi="1" ci="0" mb="0" cb="0"/><line nr="606" mi="2" ci="0" mb="2" cb="0"/><line nr="607" mi="11" ci="0" mb="0" cb="0"/><line nr="608" mi="6" ci="0" mb="0" cb="0"/><line nr="614" mi="1" ci="0" mb="0" cb="0"/><line nr="615" mi="1" ci="0" mb="0" cb="0"/><line nr="619" mi="0" ci="4" mb="0" cb="0"/><line nr="620" mi="0" ci="2" mb="0" cb="0"/><line nr="622" mi="0" ci="2" mb="0" cb="0"/><line nr="623" mi="0" ci="3" mb="0" cb="0"/><line nr="625" mi="0" ci="2" mb="1" cb="1"/><line nr="628" mi="0" ci="2" mb="0" cb="0"/><line nr="629" mi="0" ci="2" mb="1" cb="1"/><line nr="630" mi="0" ci="3" mb="0" cb="0"/><line nr="634" mi="0" ci="3" mb="0" cb="0"/><line nr="636" mi="0" ci="4" mb="0" cb="0"/><line nr="637" mi="0" ci="2" mb="1" cb="1"/><line nr="638" mi="0" ci="8" mb="0" cb="2"/><line nr="639" mi="0" ci="4" mb="0" cb="0"/><line nr="642" mi="0" ci="3" mb="0" cb="0"/><line nr="643" mi="0" ci="3" mb="0" cb="0"/><line nr="644" mi="0" ci="5" mb="0" cb="0"/><line nr="650" mi="0" ci="6" mb="1" cb="1"/><line nr="651" mi="0" ci="4" mb="1" cb="1"/><line nr="652" mi="0" ci="2" mb="1" cb="1"/><line nr="653" mi="5" ci="0" mb="0" cb="0"/><line nr="656" mi="0" ci="5" mb="0" cb="0"/><line nr="659" mi="0" ci="3" mb="0" cb="0"/><line nr="663" mi="0" ci="4" mb="0" cb="0"/><line nr="664" mi="0" ci="6" mb="0" cb="0"/><line nr="665" mi="0" ci="5" mb="2" cb="2"/><line nr="667" mi="0" ci="8" mb="0" cb="2"/><line nr="668" mi="0" ci="2" mb="0" cb="0"/><line nr="669" mi="0" ci="4" mb="0" cb="0"/><line nr="670" mi="0" ci="3" mb="0" cb="0"/><line nr="674" mi="0" ci="12" mb="4" cb="4"/><line nr="677" mi="4" ci="0" mb="0" cb="0"/><line nr="681" mi="0" ci="10" mb="0" cb="0"/><line nr="683" mi="0" ci="17" mb="0" cb="0"/><line nr="684" mi="0" ci="4" mb="0" cb="0"/><line nr="687" mi="1" ci="0" mb="0" cb="0"/><line nr="689" mi="0" ci="1" mb="0" cb="0"/><line nr="691" mi="0" ci="2" mb="0" cb="0"/><line nr="695" mi="0" ci="3" mb="0" cb="0"/><line nr="699" mi="0" ci="3" mb="0" cb="0"/><line nr="707" mi="0" ci="3" mb="0" cb="0"/><line nr="715" mi="3" ci="0" mb="0" cb="0"/><line nr="716" mi="1" ci="0" mb="0" cb="0"/><line nr="724" mi="6" ci="0" mb="0" cb="0"/><line nr="728" mi="0" ci="3" mb="0" cb="0"/><line nr="732" mi="3" ci="0" mb="0" cb="0"/><line nr="736" mi="0" ci="3" mb="0" cb="0"/><line nr="740" mi="3" ci="0" mb="0" cb="0"/><line nr="744" mi="0" ci="3" mb="0" cb="0"/><line nr="748" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="565" covered="946"/><counter type="BRANCH" missed="107" covered="113"/><counter type="LINE" missed="131" covered="215"/><counter type="COMPLEXITY" missed="86" covered="48"/><counter type="METHOD" missed="8" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RequestCtx.java"><line nr="90" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="1" cb="1"/><line nr="138" mi="8" ci="0" mb="0" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="2"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="1" cb="1"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="6" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="8" mb="0" cb="2"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="2"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="2"/><line nr="177" mi="0" ci="2" mb="1" cb="1"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="1" cb="1"/><line nr="184" mi="2" ci="0" mb="2" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="1" cb="1"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="10" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="244" mi="3" ci="0" mb="0" cb="0"/><line nr="245" mi="5" ci="0" mb="0" cb="0"/><line nr="247" mi="24" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="11" ci="0" mb="2" cb="0"/><line nr="254" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="1" ci="0" mb="0" cb="0"/><line nr="257" mi="3" ci="0" mb="2" cb="0"/><line nr="258" mi="5" ci="0" mb="0" cb="0"/><line nr="261" mi="3" ci="0" mb="2" cb="0"/><line nr="265" mi="2" ci="0" mb="0" cb="0"/><line nr="267" mi="10" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="277" mi="7" ci="0" mb="0" cb="0"/><line nr="278" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="134" covered="141"/><counter type="BRANCH" missed="13" covered="13"/><counter type="LINE" missed="28" covered="44"/><counter type="COMPLEXITY" missed="12" covered="10"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="803" covered="1521"/><counter type="BRANCH" missed="141" covered="195"/><counter type="LINE" missed="180" covered="367"/><counter type="COMPLEXITY" missed="116" covered="95"/><counter type="METHOD" missed="12" covered="31"/><counter type="CLASS" missed="0" covered="3"/></package><counter type="INSTRUCTION" missed="17544" covered="22472"/><counter type="BRANCH" missed="2002" covered="1991"/><counter type="LINE" missed="4018" covered="5461"/><counter type="COMPLEXITY" missed="1979" covered="1619"/><counter type="METHOD" missed="628" covered="943"/><counter type="CLASS" missed="19" covered="227"/></report>